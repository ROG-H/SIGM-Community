# Copyright (C) 2012-13 MINHAP, Gobierno de España
# This program is licensed and may be used, modified and redistributed under the terms
# of the European Public License (EUPL), either version 1.1 or (at your
# option) any later version as soon as they are approved by the European Commission.
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and
# more details.
# You should have received a copy of the EUPL1.1 license
# along with this program; if not, you may find it at
# http://joinup.ec.europa.eu/software/page/eupl/licence-eupl


#PROPIEDADES COMUNES PARA INVOCAR LOS SERVICIOS DE TS@

#Ruta al almacen de confianza (JKS) para conexiones seguras.
com.trustedstorePath = C:/sigem3/alsigm/modulos/dipucrintegra/src/test/resources/client-truststore.jks

#Contraseña del almacén de confianza para conexiones seguras.
com.trustedstorePassword = changeit


#PROPIEDADES COMUNES PARA INVOCAR LOS SERVICIOS WEB DE TS@

#Ruta al fichero descriptor con los servicios web
#com.serviceWSDLPath = file:/C:/workspace/Integra_1.2.2/src/test/resources/TimeStampWS.wsdl
com.serviceWSDLPath = file:/G:/herramientas_afirma/Integra1_2_2_002/src/test/resources/TimeStampWS.wsdl


#PROPIEDADES ESPECÍFICAS DE CADA APLICACIÓN PARA INVOCAR LOS SERVICIOS WEB DE TS@

#Tiempo de vida para las peticiones SOAP, en milisegundos.
#appPrueba.callTimeout = 20000

#Tipo de autenticación para la petición SOAP:
#UserNameToken: Autorización por usuario/contraseña.
#X509CertificateToken: Autorización por certificado.
#SAMLToken: Autorización por SAML
#appPrueba.authorizationMethod = X509CertificateToken

# ---------- INICIO AUTENTICACIÓN UserNameToken ----------
#Nombre de usuario para el caso de autenticación por usuario/contraseña para la petición SOAP.
#appPrueba.UserNameToken.userName = a

#Contraseña de usuario para el caso de autenticación por usuario/contraseña para la petición SOAP.
#appPrueba.UserNameToken.userPassword = a
# ---------- FIN AUTENTICACIÓN UserNameToken ----------

# ---------- INICIO AUTENTICACIÓN X509CertificateToken ----------
#Mecanismo de inclusión del certificado para el caso de autorización por certificado para la petición SOAP:
#Direct: Binary Security Token
#Identifier: Key Identifier
#IssuerSerialNumber: Issuer and Serial Number
appPrueba.X509CertificateToken.inclusionMethod = Identifier

#Ruta al almacén de claves donde se encuentra almacenada la clave privada a usar para firmar la petición SOAP en el caso de autenticación por certificado.
#appPrueba.X509CertificateToken.keystorePath = C:/Users/Jesus.munoz/JMunoz/Desarrollos/AfirmaCerts-2012-2015/P12/SoapSigner-2012.p12

#Tipo de almacén de claves donde se encuentra almacenada la clave privada a usar para firmar la petición SOAP en el caso de autenticación por certificado:
#PKCS12
#JKS
#JCEKS
appPrueba.X509CertificateToken.keystoreType = PKCS12

#Contraseña del almacén de claves donde se encuentra almacenada la clave privada a usar para firmar la petición SOAP en el caso de autenticación por certificado.
appPrueba.X509CertificateToken.keystorePassword = 12345

#Alias de la clave privada a usar para firmar la petición SOAP en el caso de autenticación por certificado.
appPrueba.X509CertificateToken.privateKeyAlias = soapsigner

#Contraseña de la clave privada a usar para firmar la petición SOAP en el caso de autenticación por certificado.
appPrueba.X509CertificateToken.privateKeyPassword = 12345
# ---------- FIN AUTENTICACIÓN X509CertificateToken ----------

# ---------- INICIO AUTENTICACIÓN SAMLToken ----------
#Método de confirmación del sujeto para el caso de autorización por SAML:
#HOK: Holder-of-Key
#SV: Sender-Vouches
appPrueba.SAMLToken.method = HOK

#Ruta al almacén de claves donde se encuentra almacenada la clave privada a usar para firmar la petición SOAP en el caso de autenticación por SAML.
appPrueba.SAMLToken.keystorePath = C:/Users/Jesus.munoz/JMunoz/Desarrollos/AfirmaCerts-2012-2015/P12/SoapSigner-2012.p12

#Tipo de almacén de claves donde se encuentra almacenada la clave privada a usar para firmar la petición SOAP en el caso de autenticación por SAML:
#PKCS12
#JKS
#JCEKS
appPrueba.SAMLToken.keystoreType = PKCS12

#Contraseña del almacén de claves donde se encuentra almacenada la clave privada a usar para firmar la petición SOAP en el caso de autenticación por SAML.
appPrueba.SAMLToken.keystorePassword = 12345

#Alias de la clave privada a usar para firmar la petición SOAP en el caso de autenticación por SAML.
appPrueba.SAMLToken.privateKeyAlias = soapsigner

#Contraseña de la clave privada a usar para firmar la petición SOAP en el caso de autenticación por SAML.
appPrueba.SAMLToken.privateKeyPassword = 12345
# ---------- FIN AUTENTICACIÓN SAMLToken ----------

# ---------- INICIO CIFRADO PETICIÓN CON CLAVE SIMÉTRICA ----------
#Indicador para cifrar las peticiones SOAP con clave simétrica o no:
#true: Las peticiones SOAP irán cifradas.
#false: Las peticiones SOAP no irán cifradas.
appPrueba.request.symmetricKey.use = true

#Alias de la clave simétrica a usar para cifrar las peticiones SOAP.
appPrueba.request.symmetricKey.alias = symmetric_key_test

#Valor de la clave simétrica, en hexadecimal, a usar para cifrar las peticiones SOAP.
appPrueba.request.symmetricKey.value = 0xF7,0xA1,0xFF,0x07,0xF9,0x43,0x21,0x98,0xC7,0xF1,0xFF,0xC7,0xA9,0x4D,0xE1,0x18,0xF7,0x31,0x1F,0x37,0x19,0x43,0x21,0x18

# ---------- FIN CIFRADO PETICIÓN CON CLAVE SIMÉTRICA ----------

# ---------- INICIO AUTENTICACIÓN RESPUESTA FIRMADA ----------
#Ruta al almacén de claves donde se encuentra almacenado el certificado a usar para validar las respuestas SOAP que se encuentren firmadas.
appPrueba.response.keystorePath = C:/Users/Jesus.munoz/JMunoz/Desarrollos/AfirmaCerts-2012-2015/P12/SoapSigner-2012.p12

#Tipo de almacén de claves donde se encuentra almacenado el certificado a usar para validar las respuestas SOAP que se encuentren firmadas.
#PKCS12
#JKS
#JCEKS
appPrueba.response.keystoreType = PKCS12

#Contraseña del almacén de claves donde se encuentra almacenado el certificado a usar para validar las respuestas SOAP que se encuentren firmadas.
appPrueba.response.keystorePassword = 12345

#Alias del certificado a usar para validar las respuestas SOAP que se encuentren firmadas.
appPrueba.response.certificateAlias = soapsigner

# ---------- FIN AUTENTICACIÓN RESPUESTA FIRMADA ----------

# ---------- INICIO AUTENTICACIÓN RESPUESTA SAML ----------
#Ruta al almacén de claves donde se encuentra almacenado el certificado a usar para validar las respuestas SOAP aseguradas con SAML.
appPrueba.response.SAML.keystorePath = C:/Users/Jesus.munoz/JMunoz/Desarrollos/AfirmaCerts-2012-2015/P12/SoapSigner-2012.p12

#Tipo de almacén de claves donde se encuentra almacenado el certificado a usar para validar las respuestas SOAP aseguradas con SAML.
#PKCS12
#JKS
#JCEKS
appPrueba.response.SAML.keystoreType = PKCS12

#Contraseña del almacén de claves donde se encuentra almacenado el certificado a usar para validar las respuestas SOAP aseguradas con SAML.
appPrueba.response.SAML.keystorePassword = 12345

#Alias del certificado a usar para validar las respuestas SOAP aseguradas con SAML.
appPrueba.response.SAML.certificateAlias = soapsigner

# ---------- FIN AUTENTICACIÓN RESPUESTA SAML ----------

# ---------- INICIO DESCIFRADO RESPUESTA CON CLAVE SIMÉTRICA ----------
#Alias de la clave simétrica a usar para descifrar las respuestas SOAP cifradas con clave simétrica.
appPrueba.response.symmetricKey.alias = symmetric_key_test

#Valor de la clave simétrica a usar para descifrar las respuestas SOAP cifradas con clave simétrica.
appPrueba.response.symmetricKey.value = 0xF7,0xA1,0xFF,0x07,0xF9,0x43,0x21,0x98,0xC7,0xF1,0xFF,0xC7,0xA9,0x4D,0xE1,0x18,0xF7,0x31,0x1F,0x37,0x19,0x43,0x21,0x18


#PROPIEDADES ESPECÍFICAS DE CADA APLICACIÓN PARA INVOCAR LOS SERVICIOS RFC 3161 DE TS@

#Dirección host donde se encuentra desplegado el servicio RFC 3161.
#des-afirma.redsara.es:8443/tsamap/TspHttpServer
#appPrueba.rfc3161.host = localhost
#dipucr.sigem_quijote.rfc3161.host = des-tsafirma.redsara.es
dipucr.sigem_quijote.rfc3161.host = des-tsafirma.redsara.es

#OID de la política de sello de tiempo a indicar en la petición.
#appPrueba.rfc3161.timestampPolicyOID = 1.2.3.4.5.6
dipucr.sigem_quijote.rfc3161.timestampPolicyOID = 1.3.4.6.1.3.4.6

#OID de la aplicación a indicar en la petición.
#appPrueba.rfc3161.applicationOID = 1.3.4.6.1.3.4.6
dipucr.sigem_quijote.rfc3161.applicationOID = 1.3.4.6.1.3.4.6

#Tiempo de vida para las peticiones al servicio RFC 3161, en milisegundos.
#appPrueba.rfc3161.Timeout = 50000
dipucr.sigem_quijote.rfc3161.Timeout = 10000

#Algoritmo de resumen que aplicar sobre los datos a sellar:
#SHA
#SHA-256
#SHA-512
#RIPEMD-160
#appPrueba.rfc3161.shaAlgorithm = SHA-512
dipucr.sigem_quijote.rfc3161.shaAlgorithm = SHA-512


# ---------- INICIO SERVICIO RFC 3161 (TCP) ----------

#Número del puerto donde se encuentra desplegado el servicio RFC 3161.
#appPrueba.rfc3161.portNumber = 318
dipucr.sigem_quijote.rfc3161.portNumber = 318

# ---------- INICIO SERVICIO RFC 3161 (TCP) ----------


# ---------- INICIO SERVICIO RFC 3161 (HTTPS) ----------

#Número del puerto donde se encuentra desplegado el servicio RFC 3161 - HTTPS.
#appPrueba.rfc3161HTTPS.portNumber = 443
dipucr.sigem_quijote.rfc3161HTTPS.portNumber = 8443

#Contexto para la conexión con el servicio RFC 3161 por HTTPS.
dipucr.sigem_quijote.rfc3161HTTPS.context = /tsamap/TspHttpServer

#Indicador para utilizar autenticación HTTPS mediante certificado cliente o no:
#true: El cliente se autentica mediante certificado.
#false: El cliente no requiere de autenticación mediante certificado.
dipucr.sigem_quijote.rfc3161HTTPS.useAuthClient = false

#Ruta al almacén de claves donde se encuentra almacenada la clave privada a usar para la autenticación HTTPS del cliente por certificado.
#appPrueba.rfc3161HTTPS.keystorePath = C:/Users/Jesus.munoz/JMunoz/Desarrollos/AfirmaCerts-2012-2015/P12/ServerSigner2-2012.p12
dipucr.sigem_quijote.rfc3161HTTPS.keystorePath = C:/sigem3/alsigm/modulos/dipucrintegra/src/test/resources/sellodipucrfirma.p12


#Tipo de almacén de claves donde se encuentra almacenada la clave privada a usar para la autenticación HTTPS del cliente por certificado:
#PKCS12
#JKS
#JCEKS
#appPrueba.rfc3161HTTPS.keystoreType = PKCS12
#dipucr.sigem_quijote.rfc3161HTTPS.keystoreType = JKS
dipucr.sigem_quijote.rfc3161HTTPS.keystoreType = PKCS12

#Contraseña del almacén de claves donde se encuentra almacenada la clave privada a usar para la autenticación HTTPS del cliente por certificado.
#appPrueba.rfc3161HTTPS.keystorePassword = 12345
dipucr.sigem_quijote.rfc3161HTTPS.keystorePassword = dipucr01

# ---------- INICIO SERVICIO RFC 3161 (HTTPS) ----------


# ---------- INICIO SERVICIO RFC 3161 (SSL) ----------

#Número del puerto donde se encuentre desplegado el servicio RFC 3161 que permite autenticación por SSL.
#appPrueba.rfc3161SSL.portNumber = 10318
dipucr.sigem_quijote.rfc3161SSL.portNumber = 10318

#Ruta al almacén de claves donde se encuentra almacenada la clave privada a usar para la autenticación por SSL.
#appPrueba.rfc3161SSL.keystorePath = C:/Users/Jesus.munoz/JMunoz/Desarrollos/AfirmaCerts-2012-2015/P12/SSLClient-2012.p12
dipucr.sigem_quijote.rfc3161SSL.keystorePath = C:/sigem3/alsigm/modulos/dipucrintegra/src/test/resources/client-keystore.jks

#Tipo de almacén de claves donde se encuentra almacenada la clave privada a usar para la autenticación por SSL:
#PKCS12
#JKS
#JCEKS
#appPrueba.rfc3161SSL.keystoreType = PKCS12
dipucr.sigem_quijote.rfc3161SSL.keystorePath = JKS

#Contraseña del almacén de claves donde se encuentra almacenada la clave privada a usar para la autenticación por SSL.
#appPrueba.rfc3161SSL.keystorePassword = 12345
dipucr.sigem_quijote.rfc3161SSL.keystorePassword = changeit

# ---------- INICIO SERVICIO RFC 3161 (SSL) ----------