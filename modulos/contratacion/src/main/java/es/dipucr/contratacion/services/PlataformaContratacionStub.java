
/**
 * PlataformaContratacionStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.6.2  Built on : Apr 17, 2012 (05:33:49 IST)
 */
        package es.dipucr.contratacion.services;

        

        /*
        *  PlataformaContratacionStub java implementation
        */

        
        public class PlataformaContratacionStub extends org.apache.axis2.client.Stub
        {
        protected org.apache.axis2.description.AxisOperation[] _operations;

        //hashmaps to keep the fault mapping
        private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
        private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
        private java.util.HashMap faultMessageMap = new java.util.HashMap();

        private static int counter = 0;

        private static synchronized java.lang.String getUniqueSuffix(){
            // reset the counter if it is greater than 99999
            if (counter > 99999){
                counter = 0;
            }
            counter = counter + 1; 
            return java.lang.Long.toString(java.lang.System.currentTimeMillis()) + "_" + counter;
        }

    
    private void populateAxisService() throws org.apache.axis2.AxisFault {

     //creating the Service with a unique name
     _service = new org.apache.axis2.description.AxisService("PlataformaContratacion" + getUniqueSuffix());
     addAnonymousOperations();

        //creating the operations
        org.apache.axis2.description.AxisOperation __operation;

        _operations = new org.apache.axis2.description.AxisOperation[1];
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es", "comprobacionParamentrosEVL"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[0]=__operation;
            
        
        }

    //populates the faults
    private void populateFaults(){
         
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionDatatypeConfigurationException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionDatatypeConfigurationExceptionException");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionDatatypeConfigurationException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionDatatypeConfigurationExceptionException");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionDatatypeConfigurationException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionStub$PlataformaContratacionDatatypeConfigurationException");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionRemoteException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionRemoteExceptionException");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionRemoteException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionRemoteExceptionException");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionRemoteException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionStub$PlataformaContratacionRemoteException");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionUnsupportedEncodingException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionUnsupportedEncodingExceptionException");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionUnsupportedEncodingException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionUnsupportedEncodingExceptionException");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionUnsupportedEncodingException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionStub$PlataformaContratacionUnsupportedEncodingException");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionMalformedURLException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionMalformedURLExceptionException");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionMalformedURLException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionMalformedURLExceptionException");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionMalformedURLException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionStub$PlataformaContratacionMalformedURLException");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionJAXBException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionJAXBExceptionException");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionJAXBException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionJAXBExceptionException");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","PlataformaContratacionJAXBException"), "comprobacionParamentrosEVL"),"es.dipucr.contratacion.services.PlataformaContratacionStub$PlataformaContratacionJAXBException");
           


    }

    /**
      *Constructor that takes in a configContext
      */

    public PlataformaContratacionStub(org.apache.axis2.context.ConfigurationContext configurationContext,
       java.lang.String targetEndpoint)
       throws org.apache.axis2.AxisFault {
         this(configurationContext,targetEndpoint,false);
   }


   /**
     * Constructor that takes in a configContext  and useseperate listner
     */
   public PlataformaContratacionStub(org.apache.axis2.context.ConfigurationContext configurationContext,
        java.lang.String targetEndpoint, boolean useSeparateListener)
        throws org.apache.axis2.AxisFault {
         //To populate AxisService
         populateAxisService();
         populateFaults();

        _serviceClient = new org.apache.axis2.client.ServiceClient(configurationContext,_service);
        
	
        _serviceClient.getOptions().setTo(new org.apache.axis2.addressing.EndpointReference(
                targetEndpoint));
        _serviceClient.getOptions().setUseSeparateListener(useSeparateListener);
        
            //Set the soap version
            _serviceClient.getOptions().setSoapVersionURI(org.apache.axiom.soap.SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);
        
    
    }

    /**
     * Default Constructor
     */
    public PlataformaContratacionStub(org.apache.axis2.context.ConfigurationContext configurationContext) throws org.apache.axis2.AxisFault {
        
                    this(configurationContext,"http://172.20.0.100:8080/LicitacionElectronica/services/PlataformaContratacion.PlataformaContratacionHttpSoap12Endpoint/" );
                
    }

    /**
     * Default Constructor
     */
    public PlataformaContratacionStub() throws org.apache.axis2.AxisFault {
        
                    this("http://172.20.0.100:8080/LicitacionElectronica/services/PlataformaContratacion.PlataformaContratacionHttpSoap12Endpoint/" );
                
    }

    /**
     * Constructor taking the target endpoint
     */
    public PlataformaContratacionStub(java.lang.String targetEndpoint) throws org.apache.axis2.AxisFault {
        this(null,targetEndpoint);
    }



        
                    /**
                     * Auto generated method signature
                     * 
                     * @see es.dipucr.contratacion.services.PlataformaContratacion#comprobacionParamentrosEVL
                     * @param comprobacionParamentrosEVL1
                    
                     * @throws es.dipucr.contratacion.services.PlataformaContratacionDatatypeConfigurationExceptionException : 
                     * @throws es.dipucr.contratacion.services.PlataformaContratacionRemoteExceptionException : 
                     * @throws es.dipucr.contratacion.services.PlataformaContratacionUnsupportedEncodingExceptionException : 
                     * @throws es.dipucr.contratacion.services.PlataformaContratacionMalformedURLExceptionException : 
                     * @throws es.dipucr.contratacion.services.PlataformaContratacionJAXBExceptionException : 
                     */

                    

                            public  void comprobacionParamentrosEVL(

                            es.dipucr.contratacion.services.PlataformaContratacionStub.ComprobacionParamentrosEVL comprobacionParamentrosEVL1)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,es.dipucr.contratacion.services.PlataformaContratacionDatatypeConfigurationExceptionException
                        ,es.dipucr.contratacion.services.PlataformaContratacionRemoteExceptionException
                        ,es.dipucr.contratacion.services.PlataformaContratacionUnsupportedEncodingExceptionException
                        ,es.dipucr.contratacion.services.PlataformaContratacionMalformedURLExceptionException
                        ,es.dipucr.contratacion.services.PlataformaContratacionJAXBExceptionException{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
              _operationClient.getOptions().setAction("urn:comprobacionParamentrosEVL");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    comprobacionParamentrosEVL1,
                                                    optimizeContent(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es",
                                                    "comprobacionParamentrosEVL")), new javax.xml.namespace.QName("http://services.contratacion.dipucr.es",
                                                    "comprobacionParamentrosEVL"));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
                return;
            
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"comprobacionParamentrosEVL"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"comprobacionParamentrosEVL"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"comprobacionParamentrosEVL"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof es.dipucr.contratacion.services.PlataformaContratacionDatatypeConfigurationExceptionException){
                          throw (es.dipucr.contratacion.services.PlataformaContratacionDatatypeConfigurationExceptionException)ex;
                        }
                        
                        if (ex instanceof es.dipucr.contratacion.services.PlataformaContratacionRemoteExceptionException){
                          throw (es.dipucr.contratacion.services.PlataformaContratacionRemoteExceptionException)ex;
                        }
                        
                        if (ex instanceof es.dipucr.contratacion.services.PlataformaContratacionUnsupportedEncodingExceptionException){
                          throw (es.dipucr.contratacion.services.PlataformaContratacionUnsupportedEncodingExceptionException)ex;
                        }
                        
                        if (ex instanceof es.dipucr.contratacion.services.PlataformaContratacionMalformedURLExceptionException){
                          throw (es.dipucr.contratacion.services.PlataformaContratacionMalformedURLExceptionException)ex;
                        }
                        
                        if (ex instanceof es.dipucr.contratacion.services.PlataformaContratacionJAXBExceptionException){
                          throw (es.dipucr.contratacion.services.PlataformaContratacionJAXBExceptionException)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see es.dipucr.contratacion.services.PlataformaContratacion#startcomprobacionParamentrosEVL
                    * @param comprobacionParamentrosEVL1
                
                */
                public  void startcomprobacionParamentrosEVL(

                 es.dipucr.contratacion.services.PlataformaContratacionStub.ComprobacionParamentrosEVL comprobacionParamentrosEVL1,

                  final es.dipucr.contratacion.services.PlataformaContratacionCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
             _operationClient.getOptions().setAction("urn:comprobacionParamentrosEVL");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    comprobacionParamentrosEVL1,
                                                    optimizeContent(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es",
                                                    "comprobacionParamentrosEVL")), new javax.xml.namespace.QName("http://services.contratacion.dipucr.es",
                                                    "comprobacionParamentrosEVL"));
                                                
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                            // Nothing to pass as the callback!!!
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[0].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[0].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                


       /**
        *  A utility method that copies the namepaces from the SOAPEnvelope
        */
       private java.util.Map getEnvelopeNamespaces(org.apache.axiom.soap.SOAPEnvelope env){
        java.util.Map returnMap = new java.util.HashMap();
        java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
        while (namespaceIterator.hasNext()) {
            org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator.next();
            returnMap.put(ns.getPrefix(),ns.getNamespaceURI());
        }
       return returnMap;
    }

    
    
    private javax.xml.namespace.QName[] opNameArray = null;
    private boolean optimizeContent(javax.xml.namespace.QName opName) {
        

        if (opNameArray == null) {
            return false;
        }
        for (int i = 0; i < opNameArray.length; i++) {
            if (opName.equals(opNameArray[i])) {
                return true;   
            }
        }
        return false;
    }
     //http://172.20.0.100:8080/LicitacionElectronica/services/PlataformaContratacion.PlataformaContratacionHttpSoap12Endpoint/
        public static class Periodo
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = Periodo
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for Description
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescriptionTracker = false ;

                           public boolean isDescriptionSpecified(){
                               return localDescriptionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getDescription(){
                               return localDescription;
                           }

                           
                        


                               
                              /**
                               * validate the array for Description
                               */
                              protected void validateDescription(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Description
                              */
                              public void setDescription(java.lang.String[] param){
                              
                                   validateDescription(param);

                               localDescriptionTracker = true;
                                      
                                      this.localDescription=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addDescription(java.lang.String param){
                                   if (localDescription == null){
                                   localDescription = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localDescriptionTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDescription);
                               list.add(param);
                               this.localDescription =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for DescriptionCode
                        * This was an Array!
                        */

                        
                                    protected Campo[] localDescriptionCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescriptionCodeTracker = false ;

                           public boolean isDescriptionCodeSpecified(){
                               return localDescriptionCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo[]
                           */
                           public  Campo[] getDescriptionCode(){
                               return localDescriptionCode;
                           }

                           
                        


                               
                              /**
                               * validate the array for DescriptionCode
                               */
                              protected void validateDescriptionCode(Campo[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param DescriptionCode
                              */
                              public void setDescriptionCode(Campo[] param){
                              
                                   validateDescriptionCode(param);

                               localDescriptionCodeTracker = true;
                                      
                                      this.localDescriptionCode=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Campo
                             */
                             public void addDescriptionCode(Campo param){
                                   if (localDescriptionCode == null){
                                   localDescriptionCode = new Campo[]{};
                                   }

                            
                                 //update the setting tracker
                                localDescriptionCodeTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDescriptionCode);
                               list.add(param);
                               this.localDescriptionCode =
                             (Campo[])list.toArray(
                            new Campo[list.size()]);

                             }
                             

                        /**
                        * field for Duracion
                        */

                        
                                    protected java.lang.String localDuracion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDuracionTracker = false ;

                           public boolean isDuracionSpecified(){
                               return localDuracionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDuracion(){
                               return localDuracion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Duracion
                               */
                               public void setDuracion(java.lang.String param){
                            localDuracionTracker = true;
                                   
                                            this.localDuracion=param;
                                    

                               }
                            

                        /**
                        * field for DurationMeasure
                        */

                        
                                    protected Campo localDurationMeasure ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDurationMeasureTracker = false ;

                           public boolean isDurationMeasureSpecified(){
                               return localDurationMeasureTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getDurationMeasure(){
                               return localDurationMeasure;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DurationMeasure
                               */
                               public void setDurationMeasure(Campo param){
                            localDurationMeasureTracker = true;
                                   
                                            this.localDurationMeasure=param;
                                    

                               }
                            

                        /**
                        * field for EndCalendar
                        */

                        
                                    protected java.util.Calendar localEndCalendar ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEndCalendarTracker = false ;

                           public boolean isEndCalendarSpecified(){
                               return localEndCalendarTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getEndCalendar(){
                               return localEndCalendar;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EndCalendar
                               */
                               public void setEndCalendar(java.util.Calendar param){
                            localEndCalendarTracker = true;
                                   
                                            this.localEndCalendar=param;
                                    

                               }
                            

                        /**
                        * field for StartCalendar
                        */

                        
                                    protected java.util.Calendar localStartCalendar ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStartCalendarTracker = false ;

                           public boolean isStartCalendarSpecified(){
                               return localStartCalendarTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getStartCalendar(){
                               return localStartCalendar;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param StartCalendar
                               */
                               public void setStartCalendar(java.util.Calendar param){
                            localStartCalendarTracker = true;
                                   
                                            this.localStartCalendar=param;
                                    

                               }
                            

                        /**
                        * field for TipoDuracion
                        */

                        
                                    protected Campo localTipoDuracion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTipoDuracionTracker = false ;

                           public boolean isTipoDuracionSpecified(){
                               return localTipoDuracionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getTipoDuracion(){
                               return localTipoDuracion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TipoDuracion
                               */
                               public void setTipoDuracion(Campo param){
                            localTipoDuracionTracker = true;
                                   
                                            this.localTipoDuracion=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":Periodo",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "Periodo",
                           xmlWriter);
                   }

               
                   }
                if (localDescriptionTracker){
                             if (localDescription!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localDescription.length;i++){
                                        
                                            if (localDescription[i] != null){
                                        
                                                writeStartElement(null, namespace, "description", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescription[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "description", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "description", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localDescriptionCodeTracker){
                                       if (localDescriptionCode!=null){
                                            for (int i = 0;i < localDescriptionCode.length;i++){
                                                if (localDescriptionCode[i] != null){
                                                 localDescriptionCode[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descriptionCode"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "descriptionCode", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "descriptionCode", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localDuracionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "duracion", xmlWriter);
                             

                                          if (localDuracion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDuracion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDurationMeasureTracker){
                                    if (localDurationMeasure==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "durationMeasure", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localDurationMeasure.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","durationMeasure"),
                                        xmlWriter);
                                    }
                                } if (localEndCalendarTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "endCalendar", xmlWriter);
                             

                                          if (localEndCalendar==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEndCalendar));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStartCalendarTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "startCalendar", xmlWriter);
                             

                                          if (localStartCalendar==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStartCalendar));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTipoDuracionTracker){
                                    if (localTipoDuracion==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "tipoDuracion", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localTipoDuracion.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoDuracion"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localDescriptionTracker){
                            if (localDescription!=null){
                                  for (int i = 0;i < localDescription.length;i++){
                                      
                                         if (localDescription[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "description"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescription[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "description"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "description"));
                                    elementList.add(null);
                                
                            }

                        } if (localDescriptionCodeTracker){
                             if (localDescriptionCode!=null) {
                                 for (int i = 0;i < localDescriptionCode.length;i++){

                                    if (localDescriptionCode[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "descriptionCode"));
                                         elementList.add(localDescriptionCode[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "descriptionCode"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "descriptionCode"));
                                        elementList.add(localDescriptionCode);
                                    
                             }

                        } if (localDuracionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "duracion"));
                                 
                                         elementList.add(localDuracion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDuracion));
                                    } if (localDurationMeasureTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "durationMeasure"));
                            
                            
                                    elementList.add(localDurationMeasure==null?null:
                                    localDurationMeasure);
                                } if (localEndCalendarTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "endCalendar"));
                                 
                                         elementList.add(localEndCalendar==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEndCalendar));
                                    } if (localStartCalendarTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "startCalendar"));
                                 
                                         elementList.add(localStartCalendar==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStartCalendar));
                                    } if (localTipoDuracionTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "tipoDuracion"));
                            
                            
                                    elementList.add(localTipoDuracion==null?null:
                                    localTipoDuracion);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Periodo parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Periodo object =
                new Periodo();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"Periodo".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Periodo)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                        java.util.ArrayList list2 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","description").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list1.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list1.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone1 = false;
                                            while(!loopDone1){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone1 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","description").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list1.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list1.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone1 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setDescription((java.lang.String[])
                                                        list1.toArray(new java.lang.String[list1.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descriptionCode").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list2.add(null);
                                                              reader.next();
                                                          } else {
                                                        list2.add(Campo.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone2 = false;
                                                        while(!loopDone2){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone2 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descriptionCode").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list2.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list2.add(Campo.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone2 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setDescriptionCode((Campo[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Campo.class,
                                                                list2));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","duracion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDuracion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","durationMeasure").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setDurationMeasure(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setDurationMeasure(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","endCalendar").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEndCalendar(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","startCalendar").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStartCalendar(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoDuracion").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setTipoDuracion(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setTipoDuracion(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class IOException
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = IOException
                Namespace URI = http://io.java/xsd
                Namespace Prefix = ns1
                */
            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://io.java/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":IOException",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "IOException",
                           xmlWriter);
                   }

               
                   }
               
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://io.java/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static IOException parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            IOException object =
                new IOException();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"IOException".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (IOException)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class DuracionContratoBean
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = DuracionContratoBean
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for Duracion
                        */

                        
                                    protected java.lang.String localDuracion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDuracionTracker = false ;

                           public boolean isDuracionSpecified(){
                               return localDuracionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDuracion(){
                               return localDuracion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Duracion
                               */
                               public void setDuracion(java.lang.String param){
                            localDuracionTracker = true;
                                   
                                            this.localDuracion=param;
                                    

                               }
                            

                        /**
                        * field for DurationMeasure
                        */

                        
                                    protected Campo localDurationMeasure ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDurationMeasureTracker = false ;

                           public boolean isDurationMeasureSpecified(){
                               return localDurationMeasureTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getDurationMeasure(){
                               return localDurationMeasure;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DurationMeasure
                               */
                               public void setDurationMeasure(Campo param){
                            localDurationMeasureTracker = true;
                                   
                                            this.localDurationMeasure=param;
                                    

                               }
                            

                        /**
                        * field for FechaFinal
                        */

                        
                                    protected java.util.Calendar localFechaFinal ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFechaFinalTracker = false ;

                           public boolean isFechaFinalSpecified(){
                               return localFechaFinalTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getFechaFinal(){
                               return localFechaFinal;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FechaFinal
                               */
                               public void setFechaFinal(java.util.Calendar param){
                            localFechaFinalTracker = true;
                                   
                                            this.localFechaFinal=param;
                                    

                               }
                            

                        /**
                        * field for FechaInicio
                        */

                        
                                    protected java.util.Calendar localFechaInicio ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFechaInicioTracker = false ;

                           public boolean isFechaInicioSpecified(){
                               return localFechaInicioTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getFechaInicio(){
                               return localFechaInicio;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FechaInicio
                               */
                               public void setFechaInicio(java.util.Calendar param){
                            localFechaInicioTracker = true;
                                   
                                            this.localFechaInicio=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":DuracionContratoBean",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "DuracionContratoBean",
                           xmlWriter);
                   }

               
                   }
                if (localDuracionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "duracion", xmlWriter);
                             

                                          if (localDuracion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDuracion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDurationMeasureTracker){
                                    if (localDurationMeasure==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "durationMeasure", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localDurationMeasure.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","durationMeasure"),
                                        xmlWriter);
                                    }
                                } if (localFechaFinalTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "fechaFinal", xmlWriter);
                             

                                          if (localFechaFinal==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaFinal));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFechaInicioTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "fechaInicio", xmlWriter);
                             

                                          if (localFechaInicio==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaInicio));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localDuracionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "duracion"));
                                 
                                         elementList.add(localDuracion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDuracion));
                                    } if (localDurationMeasureTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "durationMeasure"));
                            
                            
                                    elementList.add(localDurationMeasure==null?null:
                                    localDurationMeasure);
                                } if (localFechaFinalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "fechaFinal"));
                                 
                                         elementList.add(localFechaFinal==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaFinal));
                                    } if (localFechaInicioTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "fechaInicio"));
                                 
                                         elementList.add(localFechaInicio==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaInicio));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static DuracionContratoBean parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            DuracionContratoBean object =
                new DuracionContratoBean();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"DuracionContratoBean".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (DuracionContratoBean)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","duracion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDuracion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","durationMeasure").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setDurationMeasure(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setDurationMeasure(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","fechaFinal").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFechaFinal(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","fechaInicio").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFechaInicio(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class PersonaComite
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = PersonaComite
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for Cargo
                        */

                        
                                    protected java.lang.String localCargo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCargoTracker = false ;

                           public boolean isCargoSpecified(){
                               return localCargoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCargo(){
                               return localCargo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cargo
                               */
                               public void setCargo(java.lang.String param){
                            localCargoTracker = true;
                                   
                                            this.localCargo=param;
                                    

                               }
                            

                        /**
                        * field for Email
                        */

                        
                                    protected java.lang.String localEmail ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmailTracker = false ;

                           public boolean isEmailSpecified(){
                               return localEmailTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmail(){
                               return localEmail;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Email
                               */
                               public void setEmail(java.lang.String param){
                            localEmailTracker = true;
                                   
                                            this.localEmail=param;
                                    

                               }
                            

                        /**
                        * field for Nombre
                        */

                        
                                    protected java.lang.String localNombre ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNombreTracker = false ;

                           public boolean isNombreSpecified(){
                               return localNombreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNombre(){
                               return localNombre;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Nombre
                               */
                               public void setNombre(java.lang.String param){
                            localNombreTracker = true;
                                   
                                            this.localNombre=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":PersonaComite",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "PersonaComite",
                           xmlWriter);
                   }

               
                   }
                if (localCargoTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "cargo", xmlWriter);
                             

                                          if (localCargo==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCargo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmailTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "email", xmlWriter);
                             

                                          if (localEmail==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmail);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNombreTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "nombre", xmlWriter);
                             

                                          if (localNombre==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNombre);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCargoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "cargo"));
                                 
                                         elementList.add(localCargo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCargo));
                                    } if (localEmailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "email"));
                                 
                                         elementList.add(localEmail==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmail));
                                    } if (localNombreTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "nombre"));
                                 
                                         elementList.add(localNombre==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNombre));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static PersonaComite parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            PersonaComite object =
                new PersonaComite();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"PersonaComite".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (PersonaComite)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","cargo").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCargo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","email").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","nombre").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNombre(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class SolvenciaEconomica
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = SolvenciaEconomica
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for CriterioSolvencia
                        */

                        
                                    protected Campo localCriterioSolvencia ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCriterioSolvenciaTracker = false ;

                           public boolean isCriterioSolvenciaSpecified(){
                               return localCriterioSolvenciaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getCriterioSolvencia(){
                               return localCriterioSolvencia;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CriterioSolvencia
                               */
                               public void setCriterioSolvencia(Campo param){
                            localCriterioSolvenciaTracker = true;
                                   
                                            this.localCriterioSolvencia=param;
                                    

                               }
                            

                        /**
                        * field for CriterioSolvenciaAcreditarRequisito
                        */

                        
                                    protected Campo localCriterioSolvenciaAcreditarRequisito ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCriterioSolvenciaAcreditarRequisitoTracker = false ;

                           public boolean isCriterioSolvenciaAcreditarRequisitoSpecified(){
                               return localCriterioSolvenciaAcreditarRequisitoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getCriterioSolvenciaAcreditarRequisito(){
                               return localCriterioSolvenciaAcreditarRequisito;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CriterioSolvenciaAcreditarRequisito
                               */
                               public void setCriterioSolvenciaAcreditarRequisito(Campo param){
                            localCriterioSolvenciaAcreditarRequisitoTracker = true;
                                   
                                            this.localCriterioSolvenciaAcreditarRequisito=param;
                                    

                               }
                            

                        /**
                        * field for Descripcion
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localDescripcion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescripcionTracker = false ;

                           public boolean isDescripcionSpecified(){
                               return localDescripcionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getDescripcion(){
                               return localDescripcion;
                           }

                           
                        


                               
                              /**
                               * validate the array for Descripcion
                               */
                              protected void validateDescripcion(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Descripcion
                              */
                              public void setDescripcion(java.lang.String[] param){
                              
                                   validateDescripcion(param);

                               localDescripcionTracker = true;
                                      
                                      this.localDescripcion=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addDescripcion(java.lang.String param){
                                   if (localDescripcion == null){
                                   localDescripcion = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localDescripcionTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDescripcion);
                               list.add(param);
                               this.localDescripcion =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for ExpresEvaluarCriterioEvalucion
                        */

                        
                                    protected Campo localExpresEvaluarCriterioEvalucion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpresEvaluarCriterioEvalucionTracker = false ;

                           public boolean isExpresEvaluarCriterioEvalucionSpecified(){
                               return localExpresEvaluarCriterioEvalucionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getExpresEvaluarCriterioEvalucion(){
                               return localExpresEvaluarCriterioEvalucion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExpresEvaluarCriterioEvalucion
                               */
                               public void setExpresEvaluarCriterioEvalucion(Campo param){
                            localExpresEvaluarCriterioEvalucionTracker = true;
                                   
                                            this.localExpresEvaluarCriterioEvalucion=param;
                                    

                               }
                            

                        /**
                        * field for PeriodoDuracion
                        */

                        
                                    protected java.util.Calendar localPeriodoDuracion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPeriodoDuracionTracker = false ;

                           public boolean isPeriodoDuracionSpecified(){
                               return localPeriodoDuracionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getPeriodoDuracion(){
                               return localPeriodoDuracion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PeriodoDuracion
                               */
                               public void setPeriodoDuracion(java.util.Calendar param){
                            localPeriodoDuracionTracker = true;
                                   
                                            this.localPeriodoDuracion=param;
                                    

                               }
                            

                        /**
                        * field for ValorUmbralImporte
                        */

                        
                                    protected java.lang.String localValorUmbralImporte ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localValorUmbralImporteTracker = false ;

                           public boolean isValorUmbralImporteSpecified(){
                               return localValorUmbralImporteTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getValorUmbralImporte(){
                               return localValorUmbralImporte;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ValorUmbralImporte
                               */
                               public void setValorUmbralImporte(java.lang.String param){
                            localValorUmbralImporteTracker = true;
                                   
                                            this.localValorUmbralImporte=param;
                                    

                               }
                            

                        /**
                        * field for ValorUmbralNoImporte
                        */

                        
                                    protected java.lang.String localValorUmbralNoImporte ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localValorUmbralNoImporteTracker = false ;

                           public boolean isValorUmbralNoImporteSpecified(){
                               return localValorUmbralNoImporteTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getValorUmbralNoImporte(){
                               return localValorUmbralNoImporte;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ValorUmbralNoImporte
                               */
                               public void setValorUmbralNoImporte(java.lang.String param){
                            localValorUmbralNoImporteTracker = true;
                                   
                                            this.localValorUmbralNoImporte=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":SolvenciaEconomica",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "SolvenciaEconomica",
                           xmlWriter);
                   }

               
                   }
                if (localCriterioSolvenciaTracker){
                                    if (localCriterioSolvencia==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "criterioSolvencia", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localCriterioSolvencia.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","criterioSolvencia"),
                                        xmlWriter);
                                    }
                                } if (localCriterioSolvenciaAcreditarRequisitoTracker){
                                    if (localCriterioSolvenciaAcreditarRequisito==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "criterioSolvenciaAcreditarRequisito", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localCriterioSolvenciaAcreditarRequisito.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","criterioSolvenciaAcreditarRequisito"),
                                        xmlWriter);
                                    }
                                } if (localDescripcionTracker){
                             if (localDescripcion!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localDescripcion.length;i++){
                                        
                                            if (localDescripcion[i] != null){
                                        
                                                writeStartElement(null, namespace, "descripcion", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "descripcion", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "descripcion", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localExpresEvaluarCriterioEvalucionTracker){
                                    if (localExpresEvaluarCriterioEvalucion==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "expresEvaluarCriterioEvalucion", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localExpresEvaluarCriterioEvalucion.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","expresEvaluarCriterioEvalucion"),
                                        xmlWriter);
                                    }
                                } if (localPeriodoDuracionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "periodoDuracion", xmlWriter);
                             

                                          if (localPeriodoDuracion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPeriodoDuracion));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localValorUmbralImporteTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "valorUmbralImporte", xmlWriter);
                             

                                          if (localValorUmbralImporte==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localValorUmbralImporte);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localValorUmbralNoImporteTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "valorUmbralNoImporte", xmlWriter);
                             

                                          if (localValorUmbralNoImporte==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localValorUmbralNoImporte);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCriterioSolvenciaTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "criterioSolvencia"));
                            
                            
                                    elementList.add(localCriterioSolvencia==null?null:
                                    localCriterioSolvencia);
                                } if (localCriterioSolvenciaAcreditarRequisitoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "criterioSolvenciaAcreditarRequisito"));
                            
                            
                                    elementList.add(localCriterioSolvenciaAcreditarRequisito==null?null:
                                    localCriterioSolvenciaAcreditarRequisito);
                                } if (localDescripcionTracker){
                            if (localDescripcion!=null){
                                  for (int i = 0;i < localDescripcion.length;i++){
                                      
                                         if (localDescripcion[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                    elementList.add(null);
                                
                            }

                        } if (localExpresEvaluarCriterioEvalucionTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "expresEvaluarCriterioEvalucion"));
                            
                            
                                    elementList.add(localExpresEvaluarCriterioEvalucion==null?null:
                                    localExpresEvaluarCriterioEvalucion);
                                } if (localPeriodoDuracionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "periodoDuracion"));
                                 
                                         elementList.add(localPeriodoDuracion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPeriodoDuracion));
                                    } if (localValorUmbralImporteTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "valorUmbralImporte"));
                                 
                                         elementList.add(localValorUmbralImporte==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localValorUmbralImporte));
                                    } if (localValorUmbralNoImporteTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "valorUmbralNoImporte"));
                                 
                                         elementList.add(localValorUmbralNoImporte==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localValorUmbralNoImporte));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static SolvenciaEconomica parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            SolvenciaEconomica object =
                new SolvenciaEconomica();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"SolvenciaEconomica".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (SolvenciaEconomica)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list3 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","criterioSolvencia").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setCriterioSolvencia(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setCriterioSolvencia(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","criterioSolvenciaAcreditarRequisito").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setCriterioSolvenciaAcreditarRequisito(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setCriterioSolvenciaAcreditarRequisito(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list3.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list3.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone3 = false;
                                            while(!loopDone3){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone3 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list3.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list3.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone3 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setDescripcion((java.lang.String[])
                                                        list3.toArray(new java.lang.String[list3.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","expresEvaluarCriterioEvalucion").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setExpresEvaluarCriterioEvalucion(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setExpresEvaluarCriterioEvalucion(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","periodoDuracion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPeriodoDuracion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","valorUmbralImporte").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setValorUmbralImporte(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","valorUmbralNoImporte").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setValorUmbralNoImporte(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class CriterioAdjudicacionMultCrit
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = CriterioAdjudicacionMultCrit
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for CantMax
                        */

                        
                                    protected java.lang.String localCantMax ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCantMaxTracker = false ;

                           public boolean isCantMaxSpecified(){
                               return localCantMaxTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCantMax(){
                               return localCantMax;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CantMax
                               */
                               public void setCantMax(java.lang.String param){
                            localCantMaxTracker = true;
                                   
                                            this.localCantMax=param;
                                    

                               }
                            

                        /**
                        * field for CantMin
                        */

                        
                                    protected java.lang.String localCantMin ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCantMinTracker = false ;

                           public boolean isCantMinSpecified(){
                               return localCantMinTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCantMin(){
                               return localCantMin;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CantMin
                               */
                               public void setCantMin(java.lang.String param){
                            localCantMinTracker = true;
                                   
                                            this.localCantMin=param;
                                    

                               }
                            

                        /**
                        * field for CodCritAdj
                        */

                        
                                    protected Campo localCodCritAdj ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodCritAdjTracker = false ;

                           public boolean isCodCritAdjSpecified(){
                               return localCodCritAdjTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getCodCritAdj(){
                               return localCodCritAdj;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodCritAdj
                               */
                               public void setCodCritAdj(Campo param){
                            localCodCritAdjTracker = true;
                                   
                                            this.localCodCritAdj=param;
                                    

                               }
                            

                        /**
                        * field for DescPonderacion
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localDescPonderacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescPonderacionTracker = false ;

                           public boolean isDescPonderacionSpecified(){
                               return localDescPonderacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getDescPonderacion(){
                               return localDescPonderacion;
                           }

                           
                        


                               
                              /**
                               * validate the array for DescPonderacion
                               */
                              protected void validateDescPonderacion(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param DescPonderacion
                              */
                              public void setDescPonderacion(java.lang.String[] param){
                              
                                   validateDescPonderacion(param);

                               localDescPonderacionTracker = true;
                                      
                                      this.localDescPonderacion=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addDescPonderacion(java.lang.String param){
                                   if (localDescPonderacion == null){
                                   localDescPonderacion = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localDescPonderacionTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDescPonderacion);
                               list.add(param);
                               this.localDescPonderacion =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for DescpCalculoExp
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localDescpCalculoExp ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescpCalculoExpTracker = false ;

                           public boolean isDescpCalculoExpSpecified(){
                               return localDescpCalculoExpTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getDescpCalculoExp(){
                               return localDescpCalculoExp;
                           }

                           
                        


                               
                              /**
                               * validate the array for DescpCalculoExp
                               */
                              protected void validateDescpCalculoExp(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param DescpCalculoExp
                              */
                              public void setDescpCalculoExp(java.lang.String[] param){
                              
                                   validateDescpCalculoExp(param);

                               localDescpCalculoExpTracker = true;
                                      
                                      this.localDescpCalculoExp=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addDescpCalculoExp(java.lang.String param){
                                   if (localDescpCalculoExp == null){
                                   localDescpCalculoExp = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localDescpCalculoExpTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDescpCalculoExp);
                               list.add(param);
                               this.localDescpCalculoExp =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for Descripcion
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localDescripcion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescripcionTracker = false ;

                           public boolean isDescripcionSpecified(){
                               return localDescripcionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getDescripcion(){
                               return localDescripcion;
                           }

                           
                        


                               
                              /**
                               * validate the array for Descripcion
                               */
                              protected void validateDescripcion(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Descripcion
                              */
                              public void setDescripcion(java.lang.String[] param){
                              
                                   validateDescripcion(param);

                               localDescripcionTracker = true;
                                      
                                      this.localDescripcion=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addDescripcion(java.lang.String param){
                                   if (localDescripcion == null){
                                   localDescripcion = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localDescripcionTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDescripcion);
                               list.add(param);
                               this.localDescripcion =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for DescripcionPujaMinSubastaElect
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localDescripcionPujaMinSubastaElect ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescripcionPujaMinSubastaElectTracker = false ;

                           public boolean isDescripcionPujaMinSubastaElectSpecified(){
                               return localDescripcionPujaMinSubastaElectTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getDescripcionPujaMinSubastaElect(){
                               return localDescripcionPujaMinSubastaElect;
                           }

                           
                        


                               
                              /**
                               * validate the array for DescripcionPujaMinSubastaElect
                               */
                              protected void validateDescripcionPujaMinSubastaElect(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param DescripcionPujaMinSubastaElect
                              */
                              public void setDescripcionPujaMinSubastaElect(java.lang.String[] param){
                              
                                   validateDescripcionPujaMinSubastaElect(param);

                               localDescripcionPujaMinSubastaElectTracker = true;
                                      
                                      this.localDescripcionPujaMinSubastaElect=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addDescripcionPujaMinSubastaElect(java.lang.String param){
                                   if (localDescripcionPujaMinSubastaElect == null){
                                   localDescripcionPujaMinSubastaElect = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localDescripcionPujaMinSubastaElectTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDescripcionPujaMinSubastaElect);
                               list.add(param);
                               this.localDescripcionPujaMinSubastaElect =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for ExpresionCalc
                        */

                        
                                    protected Campo localExpresionCalc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpresionCalcTracker = false ;

                           public boolean isExpresionCalcSpecified(){
                               return localExpresionCalcTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getExpresionCalc(){
                               return localExpresionCalc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExpresionCalc
                               */
                               public void setExpresionCalc(Campo param){
                            localExpresionCalcTracker = true;
                                   
                                            this.localExpresionCalc=param;
                                    

                               }
                            

                        /**
                        * field for Id
                        */

                        
                                    protected java.lang.String localId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdTracker = false ;

                           public boolean isIdSpecified(){
                               return localIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getId(){
                               return localId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Id
                               */
                               public void setId(java.lang.String param){
                            localIdTracker = true;
                                   
                                            this.localId=param;
                                    

                               }
                            

                        /**
                        * field for ImpMax
                        */

                        
                                    protected java.lang.String localImpMax ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImpMaxTracker = false ;

                           public boolean isImpMaxSpecified(){
                               return localImpMaxTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getImpMax(){
                               return localImpMax;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ImpMax
                               */
                               public void setImpMax(java.lang.String param){
                            localImpMaxTracker = true;
                                   
                                            this.localImpMax=param;
                                    

                               }
                            

                        /**
                        * field for ImpMin
                        */

                        
                                    protected java.lang.String localImpMin ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImpMinTracker = false ;

                           public boolean isImpMinSpecified(){
                               return localImpMinTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getImpMin(){
                               return localImpMin;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ImpMin
                               */
                               public void setImpMin(java.lang.String param){
                            localImpMinTracker = true;
                                   
                                            this.localImpMin=param;
                                    

                               }
                            

                        /**
                        * field for LicitadorIntroducevalor
                        */

                        
                                    protected boolean localLicitadorIntroducevalor ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLicitadorIntroducevalorTracker = false ;

                           public boolean isLicitadorIntroducevalorSpecified(){
                               return localLicitadorIntroducevalorTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getLicitadorIntroducevalor(){
                               return localLicitadorIntroducevalor;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LicitadorIntroducevalor
                               */
                               public void setLicitadorIntroducevalor(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localLicitadorIntroducevalorTracker =
                                       true;
                                   
                                            this.localLicitadorIntroducevalor=param;
                                    

                               }
                            

                        /**
                        * field for Ponderacion
                        */

                        
                                    protected java.lang.String localPonderacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPonderacionTracker = false ;

                           public boolean isPonderacionSpecified(){
                               return localPonderacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPonderacion(){
                               return localPonderacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Ponderacion
                               */
                               public void setPonderacion(java.lang.String param){
                            localPonderacionTracker = true;
                                   
                                            this.localPonderacion=param;
                                    

                               }
                            

                        /**
                        * field for SubCodCritAdj
                        */

                        
                                    protected Campo localSubCodCritAdj ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSubCodCritAdjTracker = false ;

                           public boolean isSubCodCritAdjSpecified(){
                               return localSubCodCritAdjTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getSubCodCritAdj(){
                               return localSubCodCritAdj;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SubCodCritAdj
                               */
                               public void setSubCodCritAdj(Campo param){
                            localSubCodCritAdjTracker = true;
                                   
                                            this.localSubCodCritAdj=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":CriterioAdjudicacionMultCrit",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "CriterioAdjudicacionMultCrit",
                           xmlWriter);
                   }

               
                   }
                if (localCantMaxTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "cantMax", xmlWriter);
                             

                                          if (localCantMax==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCantMax);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCantMinTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "cantMin", xmlWriter);
                             

                                          if (localCantMin==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCantMin);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCodCritAdjTracker){
                                    if (localCodCritAdj==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "codCritAdj", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localCodCritAdj.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","codCritAdj"),
                                        xmlWriter);
                                    }
                                } if (localDescPonderacionTracker){
                             if (localDescPonderacion!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localDescPonderacion.length;i++){
                                        
                                            if (localDescPonderacion[i] != null){
                                        
                                                writeStartElement(null, namespace, "descPonderacion", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescPonderacion[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "descPonderacion", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "descPonderacion", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localDescpCalculoExpTracker){
                             if (localDescpCalculoExp!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localDescpCalculoExp.length;i++){
                                        
                                            if (localDescpCalculoExp[i] != null){
                                        
                                                writeStartElement(null, namespace, "descpCalculoExp", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescpCalculoExp[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "descpCalculoExp", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "descpCalculoExp", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localDescripcionTracker){
                             if (localDescripcion!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localDescripcion.length;i++){
                                        
                                            if (localDescripcion[i] != null){
                                        
                                                writeStartElement(null, namespace, "descripcion", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "descripcion", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "descripcion", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localDescripcionPujaMinSubastaElectTracker){
                             if (localDescripcionPujaMinSubastaElect!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localDescripcionPujaMinSubastaElect.length;i++){
                                        
                                            if (localDescripcionPujaMinSubastaElect[i] != null){
                                        
                                                writeStartElement(null, namespace, "descripcionPujaMinSubastaElect", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcionPujaMinSubastaElect[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "descripcionPujaMinSubastaElect", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "descripcionPujaMinSubastaElect", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localExpresionCalcTracker){
                                    if (localExpresionCalc==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "expresionCalc", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localExpresionCalc.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","expresionCalc"),
                                        xmlWriter);
                                    }
                                } if (localIdTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "id", xmlWriter);
                             

                                          if (localId==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localImpMaxTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "impMax", xmlWriter);
                             

                                          if (localImpMax==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localImpMax);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localImpMinTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "impMin", xmlWriter);
                             

                                          if (localImpMin==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localImpMin);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLicitadorIntroducevalorTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "licitadorIntroducevalor", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("licitadorIntroducevalor cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLicitadorIntroducevalor));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPonderacionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "ponderacion", xmlWriter);
                             

                                          if (localPonderacion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPonderacion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSubCodCritAdjTracker){
                                    if (localSubCodCritAdj==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "subCodCritAdj", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localSubCodCritAdj.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","subCodCritAdj"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCantMaxTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "cantMax"));
                                 
                                         elementList.add(localCantMax==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCantMax));
                                    } if (localCantMinTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "cantMin"));
                                 
                                         elementList.add(localCantMin==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCantMin));
                                    } if (localCodCritAdjTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "codCritAdj"));
                            
                            
                                    elementList.add(localCodCritAdj==null?null:
                                    localCodCritAdj);
                                } if (localDescPonderacionTracker){
                            if (localDescPonderacion!=null){
                                  for (int i = 0;i < localDescPonderacion.length;i++){
                                      
                                         if (localDescPonderacion[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descPonderacion"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescPonderacion[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descPonderacion"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descPonderacion"));
                                    elementList.add(null);
                                
                            }

                        } if (localDescpCalculoExpTracker){
                            if (localDescpCalculoExp!=null){
                                  for (int i = 0;i < localDescpCalculoExp.length;i++){
                                      
                                         if (localDescpCalculoExp[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descpCalculoExp"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescpCalculoExp[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descpCalculoExp"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descpCalculoExp"));
                                    elementList.add(null);
                                
                            }

                        } if (localDescripcionTracker){
                            if (localDescripcion!=null){
                                  for (int i = 0;i < localDescripcion.length;i++){
                                      
                                         if (localDescripcion[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                    elementList.add(null);
                                
                            }

                        } if (localDescripcionPujaMinSubastaElectTracker){
                            if (localDescripcionPujaMinSubastaElect!=null){
                                  for (int i = 0;i < localDescripcionPujaMinSubastaElect.length;i++){
                                      
                                         if (localDescripcionPujaMinSubastaElect[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcionPujaMinSubastaElect"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcionPujaMinSubastaElect[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcionPujaMinSubastaElect"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcionPujaMinSubastaElect"));
                                    elementList.add(null);
                                
                            }

                        } if (localExpresionCalcTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "expresionCalc"));
                            
                            
                                    elementList.add(localExpresionCalc==null?null:
                                    localExpresionCalc);
                                } if (localIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "id"));
                                 
                                         elementList.add(localId==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localId));
                                    } if (localImpMaxTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "impMax"));
                                 
                                         elementList.add(localImpMax==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpMax));
                                    } if (localImpMinTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "impMin"));
                                 
                                         elementList.add(localImpMin==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpMin));
                                    } if (localLicitadorIntroducevalorTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "licitadorIntroducevalor"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLicitadorIntroducevalor));
                            } if (localPonderacionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "ponderacion"));
                                 
                                         elementList.add(localPonderacion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPonderacion));
                                    } if (localSubCodCritAdjTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "subCodCritAdj"));
                            
                            
                                    elementList.add(localSubCodCritAdj==null?null:
                                    localSubCodCritAdj);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static CriterioAdjudicacionMultCrit parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            CriterioAdjudicacionMultCrit object =
                new CriterioAdjudicacionMultCrit();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"CriterioAdjudicacionMultCrit".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (CriterioAdjudicacionMultCrit)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list4 = new java.util.ArrayList();
                    
                        java.util.ArrayList list5 = new java.util.ArrayList();
                    
                        java.util.ArrayList list6 = new java.util.ArrayList();
                    
                        java.util.ArrayList list7 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","cantMax").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCantMax(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","cantMin").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCantMin(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","codCritAdj").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setCodCritAdj(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setCodCritAdj(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descPonderacion").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list4.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list4.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone4 = false;
                                            while(!loopDone4){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone4 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descPonderacion").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list4.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list4.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone4 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setDescPonderacion((java.lang.String[])
                                                        list4.toArray(new java.lang.String[list4.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descpCalculoExp").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list5.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list5.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone5 = false;
                                            while(!loopDone5){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone5 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descpCalculoExp").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list5.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list5.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone5 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setDescpCalculoExp((java.lang.String[])
                                                        list5.toArray(new java.lang.String[list5.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list6.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list6.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone6 = false;
                                            while(!loopDone6){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone6 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list6.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list6.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone6 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setDescripcion((java.lang.String[])
                                                        list6.toArray(new java.lang.String[list6.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcionPujaMinSubastaElect").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list7.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list7.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone7 = false;
                                            while(!loopDone7){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone7 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcionPujaMinSubastaElect").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list7.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list7.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone7 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setDescripcionPujaMinSubastaElect((java.lang.String[])
                                                        list7.toArray(new java.lang.String[list7.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","expresionCalc").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setExpresionCalc(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setExpresionCalc(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","id").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","impMax").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImpMax(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","impMin").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImpMin(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","licitadorIntroducevalor").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"licitadorIntroducevalor" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLicitadorIntroducevalor(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","ponderacion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPonderacion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","subCodCritAdj").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setSubCodCritAdj(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setSubCodCritAdj(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class RequisitfiDeclaraciones
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = RequisitfiDeclaraciones
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for Descripcion
                        */

                        
                                    protected java.lang.String localDescripcion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescripcionTracker = false ;

                           public boolean isDescripcionSpecified(){
                               return localDescripcionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDescripcion(){
                               return localDescripcion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Descripcion
                               */
                               public void setDescripcion(java.lang.String param){
                            localDescripcionTracker = true;
                                   
                                            this.localDescripcion=param;
                                    

                               }
                            

                        /**
                        * field for Nombre
                        */

                        
                                    protected java.lang.String localNombre ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNombreTracker = false ;

                           public boolean isNombreSpecified(){
                               return localNombreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNombre(){
                               return localNombre;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Nombre
                               */
                               public void setNombre(java.lang.String param){
                            localNombreTracker = true;
                                   
                                            this.localNombre=param;
                                    

                               }
                            

                        /**
                        * field for RequisitEspecifico
                        */

                        
                                    protected Campo localRequisitEspecifico ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRequisitEspecificoTracker = false ;

                           public boolean isRequisitEspecificoSpecified(){
                               return localRequisitEspecificoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getRequisitEspecifico(){
                               return localRequisitEspecifico;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RequisitEspecifico
                               */
                               public void setRequisitEspecifico(Campo param){
                            localRequisitEspecificoTracker = true;
                                   
                                            this.localRequisitEspecifico=param;
                                    

                               }
                            

                        /**
                        * field for RequisitEspecificoAcreditarRequisito
                        */

                        
                                    protected Campo localRequisitEspecificoAcreditarRequisito ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRequisitEspecificoAcreditarRequisitoTracker = false ;

                           public boolean isRequisitEspecificoAcreditarRequisitoSpecified(){
                               return localRequisitEspecificoAcreditarRequisitoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getRequisitEspecificoAcreditarRequisito(){
                               return localRequisitEspecificoAcreditarRequisito;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RequisitEspecificoAcreditarRequisito
                               */
                               public void setRequisitEspecificoAcreditarRequisito(Campo param){
                            localRequisitEspecificoAcreditarRequisitoTracker = true;
                                   
                                            this.localRequisitEspecificoAcreditarRequisito=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":RequisitfiDeclaraciones",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "RequisitfiDeclaraciones",
                           xmlWriter);
                   }

               
                   }
                if (localDescripcionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "descripcion", xmlWriter);
                             

                                          if (localDescripcion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDescripcion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNombreTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "nombre", xmlWriter);
                             

                                          if (localNombre==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNombre);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRequisitEspecificoTracker){
                                    if (localRequisitEspecifico==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "requisitEspecifico", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localRequisitEspecifico.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","requisitEspecifico"),
                                        xmlWriter);
                                    }
                                } if (localRequisitEspecificoAcreditarRequisitoTracker){
                                    if (localRequisitEspecificoAcreditarRequisito==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "requisitEspecificoAcreditarRequisito", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localRequisitEspecificoAcreditarRequisito.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","requisitEspecificoAcreditarRequisito"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localDescripcionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "descripcion"));
                                 
                                         elementList.add(localDescripcion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion));
                                    } if (localNombreTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "nombre"));
                                 
                                         elementList.add(localNombre==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNombre));
                                    } if (localRequisitEspecificoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "requisitEspecifico"));
                            
                            
                                    elementList.add(localRequisitEspecifico==null?null:
                                    localRequisitEspecifico);
                                } if (localRequisitEspecificoAcreditarRequisitoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "requisitEspecificoAcreditarRequisito"));
                            
                            
                                    elementList.add(localRequisitEspecificoAcreditarRequisito==null?null:
                                    localRequisitEspecificoAcreditarRequisito);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static RequisitfiDeclaraciones parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            RequisitfiDeclaraciones object =
                new RequisitfiDeclaraciones();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"RequisitfiDeclaraciones".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (RequisitfiDeclaraciones)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDescripcion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","nombre").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNombre(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","requisitEspecifico").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setRequisitEspecifico(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setRequisitEspecifico(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","requisitEspecificoAcreditarRequisito").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setRequisitEspecificoAcreditarRequisito(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setRequisitEspecificoAcreditarRequisito(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class SobreElectronico
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = SobreElectronico
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for CodOferta
                        */

                        
                                    protected Campo localCodOferta ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodOfertaTracker = false ;

                           public boolean isCodOfertaSpecified(){
                               return localCodOfertaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getCodOferta(){
                               return localCodOferta;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodOferta
                               */
                               public void setCodOferta(Campo param){
                            localCodOfertaTracker = true;
                                   
                                            this.localCodOferta=param;
                                    

                               }
                            

                        /**
                        * field for Descripcion
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localDescripcion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescripcionTracker = false ;

                           public boolean isDescripcionSpecified(){
                               return localDescripcionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getDescripcion(){
                               return localDescripcion;
                           }

                           
                        


                               
                              /**
                               * validate the array for Descripcion
                               */
                              protected void validateDescripcion(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Descripcion
                              */
                              public void setDescripcion(java.lang.String[] param){
                              
                                   validateDescripcion(param);

                               localDescripcionTracker = true;
                                      
                                      this.localDescripcion=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addDescripcion(java.lang.String param){
                                   if (localDescripcion == null){
                                   localDescripcion = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localDescripcionTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDescripcion);
                               list.add(param);
                               this.localDescripcion =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for Doc
                        * This was an Array!
                        */

                        
                                    protected Documento[] localDoc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDocTracker = false ;

                           public boolean isDocSpecified(){
                               return localDocTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Documento[]
                           */
                           public  Documento[] getDoc(){
                               return localDoc;
                           }

                           
                        


                               
                              /**
                               * validate the array for Doc
                               */
                              protected void validateDoc(Documento[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Doc
                              */
                              public void setDoc(Documento[] param){
                              
                                   validateDoc(param);

                               localDocTracker = true;
                                      
                                      this.localDoc=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Documento
                             */
                             public void addDoc(Documento param){
                                   if (localDoc == null){
                                   localDoc = new Documento[]{};
                                   }

                            
                                 //update the setting tracker
                                localDocTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDoc);
                               list.add(param);
                               this.localDoc =
                             (Documento[])list.toArray(
                            new Documento[list.size()]);

                             }
                             

                        /**
                        * field for EncriptadoSobre
                        */

                        
                                    protected boolean localEncriptadoSobre ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEncriptadoSobreTracker = false ;

                           public boolean isEncriptadoSobreSpecified(){
                               return localEncriptadoSobreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getEncriptadoSobre(){
                               return localEncriptadoSobre;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EncriptadoSobre
                               */
                               public void setEncriptadoSobre(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localEncriptadoSobreTracker =
                                       true;
                                   
                                            this.localEncriptadoSobre=param;
                                    

                               }
                            

                        /**
                        * field for EventoApertura
                        */

                        
                                    protected EventoAperturaBean localEventoApertura ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEventoAperturaTracker = false ;

                           public boolean isEventoAperturaSpecified(){
                               return localEventoAperturaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return EventoAperturaBean
                           */
                           public  EventoAperturaBean getEventoApertura(){
                               return localEventoApertura;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EventoApertura
                               */
                               public void setEventoApertura(EventoAperturaBean param){
                            localEventoAperturaTracker = true;
                                   
                                            this.localEventoApertura=param;
                                    

                               }
                            

                        /**
                        * field for FirmadoSobreRepresentado
                        */

                        
                                    protected boolean localFirmadoSobreRepresentado ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFirmadoSobreRepresentadoTracker = false ;

                           public boolean isFirmadoSobreRepresentadoSpecified(){
                               return localFirmadoSobreRepresentadoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getFirmadoSobreRepresentado(){
                               return localFirmadoSobreRepresentado;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FirmadoSobreRepresentado
                               */
                               public void setFirmadoSobreRepresentado(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localFirmadoSobreRepresentadoTracker =
                                       true;
                                   
                                            this.localFirmadoSobreRepresentado=param;
                                    

                               }
                            

                        /**
                        * field for IdLote
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localIdLote ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdLoteTracker = false ;

                           public boolean isIdLoteSpecified(){
                               return localIdLoteTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getIdLote(){
                               return localIdLote;
                           }

                           
                        


                               
                              /**
                               * validate the array for IdLote
                               */
                              protected void validateIdLote(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param IdLote
                              */
                              public void setIdLote(java.lang.String[] param){
                              
                                   validateIdLote(param);

                               localIdLoteTracker = true;
                                      
                                      this.localIdLote=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addIdLote(java.lang.String param){
                                   if (localIdLote == null){
                                   localIdLote = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localIdLoteTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localIdLote);
                               list.add(param);
                               this.localIdLote =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for IdSobre
                        */

                        
                                    protected java.lang.String localIdSobre ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdSobreTracker = false ;

                           public boolean isIdSobreSpecified(){
                               return localIdSobreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIdSobre(){
                               return localIdSobre;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IdSobre
                               */
                               public void setIdSobre(java.lang.String param){
                            localIdSobreTracker = true;
                                   
                                            this.localIdSobre=param;
                                    

                               }
                            

                        /**
                        * field for IdentificarLicitador
                        */

                        
                                    protected boolean localIdentificarLicitador ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdentificarLicitadorTracker = false ;

                           public boolean isIdentificarLicitadorSpecified(){
                               return localIdentificarLicitadorTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getIdentificarLicitador(){
                               return localIdentificarLicitador;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IdentificarLicitador
                               */
                               public void setIdentificarLicitador(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localIdentificarLicitadorTracker =
                                       true;
                                   
                                            this.localIdentificarLicitador=param;
                                    

                               }
                            

                        /**
                        * field for PresentacionSobre
                        */

                        
                                    protected java.lang.String localPresentacionSobre ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPresentacionSobreTracker = false ;

                           public boolean isPresentacionSobreSpecified(){
                               return localPresentacionSobreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPresentacionSobre(){
                               return localPresentacionSobre;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PresentacionSobre
                               */
                               public void setPresentacionSobre(java.lang.String param){
                            localPresentacionSobreTracker = true;
                                   
                                            this.localPresentacionSobre=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":SobreElectronico",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "SobreElectronico",
                           xmlWriter);
                   }

               
                   }
                if (localCodOfertaTracker){
                                    if (localCodOferta==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "codOferta", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localCodOferta.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","codOferta"),
                                        xmlWriter);
                                    }
                                } if (localDescripcionTracker){
                             if (localDescripcion!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localDescripcion.length;i++){
                                        
                                            if (localDescripcion[i] != null){
                                        
                                                writeStartElement(null, namespace, "descripcion", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "descripcion", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "descripcion", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localDocTracker){
                                       if (localDoc!=null){
                                            for (int i = 0;i < localDoc.length;i++){
                                                if (localDoc[i] != null){
                                                 localDoc[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","doc"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "doc", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "doc", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localEncriptadoSobreTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "encriptadoSobre", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("encriptadoSobre cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEncriptadoSobre));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEventoAperturaTracker){
                                    if (localEventoApertura==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "eventoApertura", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localEventoApertura.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","eventoApertura"),
                                        xmlWriter);
                                    }
                                } if (localFirmadoSobreRepresentadoTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "firmadoSobreRepresentado", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("firmadoSobreRepresentado cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFirmadoSobreRepresentado));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIdLoteTracker){
                             if (localIdLote!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localIdLote.length;i++){
                                        
                                            if (localIdLote[i] != null){
                                        
                                                writeStartElement(null, namespace, "idLote", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdLote[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "idLote", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "idLote", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localIdSobreTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "idSobre", xmlWriter);
                             

                                          if (localIdSobre==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIdSobre);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIdentificarLicitadorTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "identificarLicitador", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("identificarLicitador cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdentificarLicitador));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPresentacionSobreTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "presentacionSobre", xmlWriter);
                             

                                          if (localPresentacionSobre==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPresentacionSobre);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCodOfertaTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "codOferta"));
                            
                            
                                    elementList.add(localCodOferta==null?null:
                                    localCodOferta);
                                } if (localDescripcionTracker){
                            if (localDescripcion!=null){
                                  for (int i = 0;i < localDescripcion.length;i++){
                                      
                                         if (localDescripcion[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                    elementList.add(null);
                                
                            }

                        } if (localDocTracker){
                             if (localDoc!=null) {
                                 for (int i = 0;i < localDoc.length;i++){

                                    if (localDoc[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "doc"));
                                         elementList.add(localDoc[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "doc"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "doc"));
                                        elementList.add(localDoc);
                                    
                             }

                        } if (localEncriptadoSobreTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "encriptadoSobre"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEncriptadoSobre));
                            } if (localEventoAperturaTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "eventoApertura"));
                            
                            
                                    elementList.add(localEventoApertura==null?null:
                                    localEventoApertura);
                                } if (localFirmadoSobreRepresentadoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "firmadoSobreRepresentado"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFirmadoSobreRepresentado));
                            } if (localIdLoteTracker){
                            if (localIdLote!=null){
                                  for (int i = 0;i < localIdLote.length;i++){
                                      
                                         if (localIdLote[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "idLote"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdLote[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "idLote"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "idLote"));
                                    elementList.add(null);
                                
                            }

                        } if (localIdSobreTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "idSobre"));
                                 
                                         elementList.add(localIdSobre==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdSobre));
                                    } if (localIdentificarLicitadorTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "identificarLicitador"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdentificarLicitador));
                            } if (localPresentacionSobreTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "presentacionSobre"));
                                 
                                         elementList.add(localPresentacionSobre==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPresentacionSobre));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static SobreElectronico parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            SobreElectronico object =
                new SobreElectronico();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"SobreElectronico".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (SobreElectronico)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list2 = new java.util.ArrayList();
                    
                        java.util.ArrayList list3 = new java.util.ArrayList();
                    
                        java.util.ArrayList list7 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","codOferta").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setCodOferta(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setCodOferta(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list2.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list2.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone2 = false;
                                            while(!loopDone2){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone2 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list2.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list2.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone2 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setDescripcion((java.lang.String[])
                                                        list2.toArray(new java.lang.String[list2.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","doc").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list3.add(null);
                                                              reader.next();
                                                          } else {
                                                        list3.add(Documento.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone3 = false;
                                                        while(!loopDone3){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone3 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","doc").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list3.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list3.add(Documento.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone3 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setDoc((Documento[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Documento.class,
                                                                list3));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","encriptadoSobre").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"encriptadoSobre" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEncriptadoSobre(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","eventoApertura").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setEventoApertura(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setEventoApertura(EventoAperturaBean.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","firmadoSobreRepresentado").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"firmadoSobreRepresentado" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFirmadoSobreRepresentado(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","idLote").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list7.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list7.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone7 = false;
                                            while(!loopDone7){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone7 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","idLote").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list7.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list7.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone7 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setIdLote((java.lang.String[])
                                                        list7.toArray(new java.lang.String[list7.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","idSobre").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIdSobre(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","identificarLicitador").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"identificarLicitador" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIdentificarLicitador(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","presentacionSobre").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPresentacionSobre(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class PlataformaContratacionDatatypeConfigurationException
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://services.contratacion.dipucr.es",
                "PlataformaContratacionDatatypeConfigurationException",
                "ns6");

            

                        /**
                        * field for DatatypeConfigurationException
                        */

                        
                                    protected java.lang.Object localDatatypeConfigurationException ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDatatypeConfigurationExceptionTracker = false ;

                           public boolean isDatatypeConfigurationExceptionSpecified(){
                               return localDatatypeConfigurationExceptionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.Object
                           */
                           public  java.lang.Object getDatatypeConfigurationException(){
                               return localDatatypeConfigurationException;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DatatypeConfigurationException
                               */
                               public void setDatatypeConfigurationException(java.lang.Object param){
                            localDatatypeConfigurationExceptionTracker = true;
                                   
                                            this.localDatatypeConfigurationException=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://services.contratacion.dipucr.es");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":PlataformaContratacionDatatypeConfigurationException",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "PlataformaContratacionDatatypeConfigurationException",
                           xmlWriter);
                   }

               
                   }
                if (localDatatypeConfigurationExceptionTracker){
                            
                            if (localDatatypeConfigurationException!=null){
                                if (localDatatypeConfigurationException instanceof org.apache.axis2.databinding.ADBBean){
                                    ((org.apache.axis2.databinding.ADBBean)localDatatypeConfigurationException).serialize(
                                               new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","DatatypeConfigurationException"),
                                               xmlWriter,true);
                                 } else {
                                    writeStartElement(null, "http://services.contratacion.dipucr.es", "DatatypeConfigurationException", xmlWriter);
                                    org.apache.axis2.databinding.utils.ConverterUtil.serializeAnyType(localDatatypeConfigurationException, xmlWriter);
                                    xmlWriter.writeEndElement();
                                 }
                            } else {
                                
                                        // write null attribute
                                           writeStartElement(null, "http://services.contratacion.dipucr.es", "DatatypeConfigurationException", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                            }


                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://services.contratacion.dipucr.es")){
                return "ns6";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localDatatypeConfigurationExceptionTracker){
                            elementList.add(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es",
                                                                      "DatatypeConfigurationException"));
                            
                            
                                    elementList.add(localDatatypeConfigurationException==null?null:
                                    localDatatypeConfigurationException);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static PlataformaContratacionDatatypeConfigurationException parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            PlataformaContratacionDatatypeConfigurationException object =
                new PlataformaContratacionDatatypeConfigurationException();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"PlataformaContratacionDatatypeConfigurationException".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (PlataformaContratacionDatatypeConfigurationException)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","DatatypeConfigurationException").equals(reader.getName())){
                                
                                     object.setDatatypeConfigurationException(org.apache.axis2.databinding.utils.ConverterUtil.getAnyTypeObject(reader,
                                                ExtensionMapper.class));
                                       
                                         reader.next();
                                     
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class PublicacionesOficialesBean
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = PublicacionesOficialesBean
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for EnviarBOE
                        */

                        
                                    protected boolean localEnviarBOE ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEnviarBOETracker = false ;

                           public boolean isEnviarBOESpecified(){
                               return localEnviarBOETracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getEnviarBOE(){
                               return localEnviarBOE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EnviarBOE
                               */
                               public void setEnviarBOE(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localEnviarBOETracker =
                                       true;
                                   
                                            this.localEnviarBOE=param;
                                    

                               }
                            

                        /**
                        * field for EnviarDOUE
                        */

                        
                                    protected boolean localEnviarDOUE ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEnviarDOUETracker = false ;

                           public boolean isEnviarDOUESpecified(){
                               return localEnviarDOUETracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getEnviarDOUE(){
                               return localEnviarDOUE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EnviarDOUE
                               */
                               public void setEnviarDOUE(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localEnviarDOUETracker =
                                       true;
                                   
                                            this.localEnviarDOUE=param;
                                    

                               }
                            

                        /**
                        * field for FechaEnvioBOE
                        */

                        
                                    protected java.util.Calendar localFechaEnvioBOE ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFechaEnvioBOETracker = false ;

                           public boolean isFechaEnvioBOESpecified(){
                               return localFechaEnvioBOETracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getFechaEnvioBOE(){
                               return localFechaEnvioBOE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FechaEnvioBOE
                               */
                               public void setFechaEnvioBOE(java.util.Calendar param){
                            localFechaEnvioBOETracker = true;
                                   
                                            this.localFechaEnvioBOE=param;
                                    

                               }
                            

                        /**
                        * field for FechaEnvioDOUE
                        */

                        
                                    protected java.util.Calendar localFechaEnvioDOUE ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFechaEnvioDOUETracker = false ;

                           public boolean isFechaEnvioDOUESpecified(){
                               return localFechaEnvioDOUETracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getFechaEnvioDOUE(){
                               return localFechaEnvioDOUE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FechaEnvioDOUE
                               */
                               public void setFechaEnvioDOUE(java.util.Calendar param){
                            localFechaEnvioDOUETracker = true;
                                   
                                            this.localFechaEnvioDOUE=param;
                                    

                               }
                            

                        /**
                        * field for FechaPubDOUE
                        */

                        
                                    protected java.util.Calendar localFechaPubDOUE ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFechaPubDOUETracker = false ;

                           public boolean isFechaPubDOUESpecified(){
                               return localFechaPubDOUETracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getFechaPubDOUE(){
                               return localFechaPubDOUE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FechaPubDOUE
                               */
                               public void setFechaPubDOUE(java.util.Calendar param){
                            localFechaPubDOUETracker = true;
                                   
                                            this.localFechaPubDOUE=param;
                                    

                               }
                            

                        /**
                        * field for FechaPubOtrosDiarios
                        */

                        
                                    protected java.util.Calendar localFechaPubOtrosDiarios ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFechaPubOtrosDiariosTracker = false ;

                           public boolean isFechaPubOtrosDiariosSpecified(){
                               return localFechaPubOtrosDiariosTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getFechaPubOtrosDiarios(){
                               return localFechaPubOtrosDiarios;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FechaPubOtrosDiarios
                               */
                               public void setFechaPubOtrosDiarios(java.util.Calendar param){
                            localFechaPubOtrosDiariosTracker = true;
                                   
                                            this.localFechaPubOtrosDiarios=param;
                                    

                               }
                            

                        /**
                        * field for NombreOtrosDiarios
                        */

                        
                                    protected java.lang.String localNombreOtrosDiarios ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNombreOtrosDiariosTracker = false ;

                           public boolean isNombreOtrosDiariosSpecified(){
                               return localNombreOtrosDiariosTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNombreOtrosDiarios(){
                               return localNombreOtrosDiarios;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NombreOtrosDiarios
                               */
                               public void setNombreOtrosDiarios(java.lang.String param){
                            localNombreOtrosDiariosTracker = true;
                                   
                                            this.localNombreOtrosDiarios=param;
                                    

                               }
                            

                        /**
                        * field for PublishURLOtrosDiarios
                        */

                        
                                    protected java.lang.String localPublishURLOtrosDiarios ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPublishURLOtrosDiariosTracker = false ;

                           public boolean isPublishURLOtrosDiariosSpecified(){
                               return localPublishURLOtrosDiariosTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPublishURLOtrosDiarios(){
                               return localPublishURLOtrosDiarios;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PublishURLOtrosDiarios
                               */
                               public void setPublishURLOtrosDiarios(java.lang.String param){
                            localPublishURLOtrosDiariosTracker = true;
                                   
                                            this.localPublishURLOtrosDiarios=param;
                                    

                               }
                            

                        /**
                        * field for YaEnviadoBOE
                        */

                        
                                    protected boolean localYaEnviadoBOE ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localYaEnviadoBOETracker = false ;

                           public boolean isYaEnviadoBOESpecified(){
                               return localYaEnviadoBOETracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getYaEnviadoBOE(){
                               return localYaEnviadoBOE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param YaEnviadoBOE
                               */
                               public void setYaEnviadoBOE(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localYaEnviadoBOETracker =
                                       true;
                                   
                                            this.localYaEnviadoBOE=param;
                                    

                               }
                            

                        /**
                        * field for YaEnviadoDOUE
                        */

                        
                                    protected boolean localYaEnviadoDOUE ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localYaEnviadoDOUETracker = false ;

                           public boolean isYaEnviadoDOUESpecified(){
                               return localYaEnviadoDOUETracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getYaEnviadoDOUE(){
                               return localYaEnviadoDOUE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param YaEnviadoDOUE
                               */
                               public void setYaEnviadoDOUE(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localYaEnviadoDOUETracker =
                                       true;
                                   
                                            this.localYaEnviadoDOUE=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":PublicacionesOficialesBean",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "PublicacionesOficialesBean",
                           xmlWriter);
                   }

               
                   }
                if (localEnviarBOETracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "enviarBOE", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("enviarBOE cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEnviarBOE));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEnviarDOUETracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "enviarDOUE", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("enviarDOUE cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEnviarDOUE));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFechaEnvioBOETracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "fechaEnvioBOE", xmlWriter);
                             

                                          if (localFechaEnvioBOE==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaEnvioBOE));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFechaEnvioDOUETracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "fechaEnvioDOUE", xmlWriter);
                             

                                          if (localFechaEnvioDOUE==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaEnvioDOUE));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFechaPubDOUETracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "fechaPubDOUE", xmlWriter);
                             

                                          if (localFechaPubDOUE==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaPubDOUE));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFechaPubOtrosDiariosTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "fechaPubOtrosDiarios", xmlWriter);
                             

                                          if (localFechaPubOtrosDiarios==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaPubOtrosDiarios));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNombreOtrosDiariosTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "nombreOtrosDiarios", xmlWriter);
                             

                                          if (localNombreOtrosDiarios==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNombreOtrosDiarios);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPublishURLOtrosDiariosTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "publishURLOtrosDiarios", xmlWriter);
                             

                                          if (localPublishURLOtrosDiarios==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPublishURLOtrosDiarios);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localYaEnviadoBOETracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "yaEnviadoBOE", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("yaEnviadoBOE cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localYaEnviadoBOE));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localYaEnviadoDOUETracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "yaEnviadoDOUE", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("yaEnviadoDOUE cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localYaEnviadoDOUE));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localEnviarBOETracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "enviarBOE"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEnviarBOE));
                            } if (localEnviarDOUETracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "enviarDOUE"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEnviarDOUE));
                            } if (localFechaEnvioBOETracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "fechaEnvioBOE"));
                                 
                                         elementList.add(localFechaEnvioBOE==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaEnvioBOE));
                                    } if (localFechaEnvioDOUETracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "fechaEnvioDOUE"));
                                 
                                         elementList.add(localFechaEnvioDOUE==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaEnvioDOUE));
                                    } if (localFechaPubDOUETracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "fechaPubDOUE"));
                                 
                                         elementList.add(localFechaPubDOUE==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaPubDOUE));
                                    } if (localFechaPubOtrosDiariosTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "fechaPubOtrosDiarios"));
                                 
                                         elementList.add(localFechaPubOtrosDiarios==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaPubOtrosDiarios));
                                    } if (localNombreOtrosDiariosTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "nombreOtrosDiarios"));
                                 
                                         elementList.add(localNombreOtrosDiarios==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNombreOtrosDiarios));
                                    } if (localPublishURLOtrosDiariosTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "publishURLOtrosDiarios"));
                                 
                                         elementList.add(localPublishURLOtrosDiarios==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPublishURLOtrosDiarios));
                                    } if (localYaEnviadoBOETracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "yaEnviadoBOE"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localYaEnviadoBOE));
                            } if (localYaEnviadoDOUETracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "yaEnviadoDOUE"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localYaEnviadoDOUE));
                            }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static PublicacionesOficialesBean parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            PublicacionesOficialesBean object =
                new PublicacionesOficialesBean();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"PublicacionesOficialesBean".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (PublicacionesOficialesBean)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","enviarBOE").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"enviarBOE" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEnviarBOE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","enviarDOUE").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"enviarDOUE" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEnviarDOUE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","fechaEnvioBOE").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFechaEnvioBOE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","fechaEnvioDOUE").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFechaEnvioDOUE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","fechaPubDOUE").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFechaPubDOUE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","fechaPubOtrosDiarios").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFechaPubOtrosDiarios(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","nombreOtrosDiarios").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNombreOtrosDiarios(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","publishURLOtrosDiarios").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPublishURLOtrosDiarios(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","yaEnviadoBOE").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"yaEnviadoBOE" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setYaEnviadoBOE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","yaEnviadoDOUE").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"yaEnviadoDOUE" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setYaEnviadoDOUE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class PersonalContacto
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = PersonalContacto
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for Calle
                        */

                        
                                    protected java.lang.String localCalle ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalleTracker = false ;

                           public boolean isCalleSpecified(){
                               return localCalleTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCalle(){
                               return localCalle;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calle
                               */
                               public void setCalle(java.lang.String param){
                            localCalleTracker = true;
                                   
                                            this.localCalle=param;
                                    

                               }
                            

                        /**
                        * field for Ciudad
                        */

                        
                                    protected java.lang.String localCiudad ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCiudadTracker = false ;

                           public boolean isCiudadSpecified(){
                               return localCiudadTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCiudad(){
                               return localCiudad;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Ciudad
                               */
                               public void setCiudad(java.lang.String param){
                            localCiudadTracker = true;
                                   
                                            this.localCiudad=param;
                                    

                               }
                            

                        /**
                        * field for CodFormatoDirec
                        */

                        
                                    protected Campo localCodFormatoDirec ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodFormatoDirecTracker = false ;

                           public boolean isCodFormatoDirecSpecified(){
                               return localCodFormatoDirecTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getCodFormatoDirec(){
                               return localCodFormatoDirec;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodFormatoDirec
                               */
                               public void setCodFormatoDirec(Campo param){
                            localCodFormatoDirecTracker = true;
                                   
                                            this.localCodFormatoDirec=param;
                                    

                               }
                            

                        /**
                        * field for Cp
                        */

                        
                                    protected java.lang.String localCp ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCpTracker = false ;

                           public boolean isCpSpecified(){
                               return localCpTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCp(){
                               return localCp;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cp
                               */
                               public void setCp(java.lang.String param){
                            localCpTracker = true;
                                   
                                            this.localCp=param;
                                    

                               }
                            

                        /**
                        * field for Email
                        */

                        
                                    protected java.lang.String localEmail ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmailTracker = false ;

                           public boolean isEmailSpecified(){
                               return localEmailTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmail(){
                               return localEmail;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Email
                               */
                               public void setEmail(java.lang.String param){
                            localEmailTracker = true;
                                   
                                            this.localEmail=param;
                                    

                               }
                            

                        /**
                        * field for LocalizacionGeografica
                        */

                        
                                    protected Campo localLocalizacionGeografica ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLocalizacionGeograficaTracker = false ;

                           public boolean isLocalizacionGeograficaSpecified(){
                               return localLocalizacionGeograficaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getLocalizacionGeografica(){
                               return localLocalizacionGeografica;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LocalizacionGeografica
                               */
                               public void setLocalizacionGeografica(Campo param){
                            localLocalizacionGeograficaTracker = true;
                                   
                                            this.localLocalizacionGeografica=param;
                                    

                               }
                            

                        /**
                        * field for NombreContacto
                        */

                        
                                    protected java.lang.String localNombreContacto ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNombreContactoTracker = false ;

                           public boolean isNombreContactoSpecified(){
                               return localNombreContactoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNombreContacto(){
                               return localNombreContacto;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NombreContacto
                               */
                               public void setNombreContacto(java.lang.String param){
                            localNombreContactoTracker = true;
                                   
                                            this.localNombreContacto=param;
                                    

                               }
                            

                        /**
                        * field for NumeroEdificio
                        */

                        
                                    protected java.lang.String localNumeroEdificio ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumeroEdificioTracker = false ;

                           public boolean isNumeroEdificioSpecified(){
                               return localNumeroEdificioTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumeroEdificio(){
                               return localNumeroEdificio;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NumeroEdificio
                               */
                               public void setNumeroEdificio(java.lang.String param){
                            localNumeroEdificioTracker = true;
                                   
                                            this.localNumeroEdificio=param;
                                    

                               }
                            

                        /**
                        * field for Pais
                        */

                        
                                    protected Campo localPais ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPaisTracker = false ;

                           public boolean isPaisSpecified(){
                               return localPaisTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getPais(){
                               return localPais;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Pais
                               */
                               public void setPais(Campo param){
                            localPaisTracker = true;
                                   
                                            this.localPais=param;
                                    

                               }
                            

                        /**
                        * field for Provincia
                        */

                        
                                    protected java.lang.String localProvincia ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProvinciaTracker = false ;

                           public boolean isProvinciaSpecified(){
                               return localProvinciaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProvincia(){
                               return localProvincia;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Provincia
                               */
                               public void setProvincia(java.lang.String param){
                            localProvinciaTracker = true;
                                   
                                            this.localProvincia=param;
                                    

                               }
                            

                        /**
                        * field for Telefono
                        */

                        
                                    protected java.lang.String localTelefono ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTelefonoTracker = false ;

                           public boolean isTelefonoSpecified(){
                               return localTelefonoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTelefono(){
                               return localTelefono;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Telefono
                               */
                               public void setTelefono(java.lang.String param){
                            localTelefonoTracker = true;
                                   
                                            this.localTelefono=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":PersonalContacto",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "PersonalContacto",
                           xmlWriter);
                   }

               
                   }
                if (localCalleTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "calle", xmlWriter);
                             

                                          if (localCalle==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCalle);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCiudadTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "ciudad", xmlWriter);
                             

                                          if (localCiudad==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCiudad);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCodFormatoDirecTracker){
                                    if (localCodFormatoDirec==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "codFormatoDirec", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localCodFormatoDirec.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","codFormatoDirec"),
                                        xmlWriter);
                                    }
                                } if (localCpTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "cp", xmlWriter);
                             

                                          if (localCp==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCp);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmailTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "email", xmlWriter);
                             

                                          if (localEmail==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmail);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLocalizacionGeograficaTracker){
                                    if (localLocalizacionGeografica==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "localizacionGeografica", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localLocalizacionGeografica.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","localizacionGeografica"),
                                        xmlWriter);
                                    }
                                } if (localNombreContactoTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "nombreContacto", xmlWriter);
                             

                                          if (localNombreContacto==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNombreContacto);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNumeroEdificioTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "numeroEdificio", xmlWriter);
                             

                                          if (localNumeroEdificio==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumeroEdificio);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPaisTracker){
                                    if (localPais==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "pais", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localPais.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","pais"),
                                        xmlWriter);
                                    }
                                } if (localProvinciaTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "provincia", xmlWriter);
                             

                                          if (localProvincia==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProvincia);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTelefonoTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "telefono", xmlWriter);
                             

                                          if (localTelefono==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTelefono);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCalleTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "calle"));
                                 
                                         elementList.add(localCalle==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalle));
                                    } if (localCiudadTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "ciudad"));
                                 
                                         elementList.add(localCiudad==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCiudad));
                                    } if (localCodFormatoDirecTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "codFormatoDirec"));
                            
                            
                                    elementList.add(localCodFormatoDirec==null?null:
                                    localCodFormatoDirec);
                                } if (localCpTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "cp"));
                                 
                                         elementList.add(localCp==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCp));
                                    } if (localEmailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "email"));
                                 
                                         elementList.add(localEmail==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmail));
                                    } if (localLocalizacionGeograficaTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "localizacionGeografica"));
                            
                            
                                    elementList.add(localLocalizacionGeografica==null?null:
                                    localLocalizacionGeografica);
                                } if (localNombreContactoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "nombreContacto"));
                                 
                                         elementList.add(localNombreContacto==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNombreContacto));
                                    } if (localNumeroEdificioTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "numeroEdificio"));
                                 
                                         elementList.add(localNumeroEdificio==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumeroEdificio));
                                    } if (localPaisTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "pais"));
                            
                            
                                    elementList.add(localPais==null?null:
                                    localPais);
                                } if (localProvinciaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "provincia"));
                                 
                                         elementList.add(localProvincia==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProvincia));
                                    } if (localTelefonoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "telefono"));
                                 
                                         elementList.add(localTelefono==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTelefono));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static PersonalContacto parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            PersonalContacto object =
                new PersonalContacto();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"PersonalContacto".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (PersonalContacto)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","calle").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalle(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","ciudad").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCiudad(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","codFormatoDirec").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setCodFormatoDirec(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setCodFormatoDirec(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","cp").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCp(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","email").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","localizacionGeografica").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setLocalizacionGeografica(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setLocalizacionGeografica(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","nombreContacto").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNombreContacto(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","numeroEdificio").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumeroEdificio(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","pais").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setPais(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setPais(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","provincia").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProvincia(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","telefono").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTelefono(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class PlataformaContratacionJAXBException
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://services.contratacion.dipucr.es",
                "PlataformaContratacionJAXBException",
                "ns6");

            

                        /**
                        * field for JAXBException
                        */

                        
                                    protected java.lang.Object localJAXBException ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localJAXBExceptionTracker = false ;

                           public boolean isJAXBExceptionSpecified(){
                               return localJAXBExceptionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.Object
                           */
                           public  java.lang.Object getJAXBException(){
                               return localJAXBException;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param JAXBException
                               */
                               public void setJAXBException(java.lang.Object param){
                            localJAXBExceptionTracker = true;
                                   
                                            this.localJAXBException=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://services.contratacion.dipucr.es");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":PlataformaContratacionJAXBException",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "PlataformaContratacionJAXBException",
                           xmlWriter);
                   }

               
                   }
                if (localJAXBExceptionTracker){
                            
                            if (localJAXBException!=null){
                                if (localJAXBException instanceof org.apache.axis2.databinding.ADBBean){
                                    ((org.apache.axis2.databinding.ADBBean)localJAXBException).serialize(
                                               new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","JAXBException"),
                                               xmlWriter,true);
                                 } else {
                                    writeStartElement(null, "http://services.contratacion.dipucr.es", "JAXBException", xmlWriter);
                                    org.apache.axis2.databinding.utils.ConverterUtil.serializeAnyType(localJAXBException, xmlWriter);
                                    xmlWriter.writeEndElement();
                                 }
                            } else {
                                
                                        // write null attribute
                                           writeStartElement(null, "http://services.contratacion.dipucr.es", "JAXBException", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                            }


                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://services.contratacion.dipucr.es")){
                return "ns6";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localJAXBExceptionTracker){
                            elementList.add(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es",
                                                                      "JAXBException"));
                            
                            
                                    elementList.add(localJAXBException==null?null:
                                    localJAXBException);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static PlataformaContratacionJAXBException parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            PlataformaContratacionJAXBException object =
                new PlataformaContratacionJAXBException();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"PlataformaContratacionJAXBException".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (PlataformaContratacionJAXBException)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","JAXBException").equals(reader.getName())){
                                
                                     object.setJAXBException(org.apache.axis2.databinding.utils.ConverterUtil.getAnyTypeObject(reader,
                                                ExtensionMapper.class));
                                       
                                         reader.next();
                                     
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class PlataformaContratacionMalformedURLException
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://services.contratacion.dipucr.es",
                "PlataformaContratacionMalformedURLException",
                "ns6");

            

                        /**
                        * field for MalformedURLException
                        */

                        
                                    protected MalformedURLException localMalformedURLException ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMalformedURLExceptionTracker = false ;

                           public boolean isMalformedURLExceptionSpecified(){
                               return localMalformedURLExceptionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return MalformedURLException
                           */
                           public  MalformedURLException getMalformedURLException(){
                               return localMalformedURLException;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MalformedURLException
                               */
                               public void setMalformedURLException(MalformedURLException param){
                            localMalformedURLExceptionTracker = true;
                                   
                                            this.localMalformedURLException=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://services.contratacion.dipucr.es");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":PlataformaContratacionMalformedURLException",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "PlataformaContratacionMalformedURLException",
                           xmlWriter);
                   }

               
                   }
                if (localMalformedURLExceptionTracker){
                                    if (localMalformedURLException==null){

                                        writeStartElement(null, "http://services.contratacion.dipucr.es", "MalformedURLException", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localMalformedURLException.serialize(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","MalformedURLException"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://services.contratacion.dipucr.es")){
                return "ns6";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localMalformedURLExceptionTracker){
                            elementList.add(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es",
                                                                      "MalformedURLException"));
                            
                            
                                    elementList.add(localMalformedURLException==null?null:
                                    localMalformedURLException);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static PlataformaContratacionMalformedURLException parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            PlataformaContratacionMalformedURLException object =
                new PlataformaContratacionMalformedURLException();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"PlataformaContratacionMalformedURLException".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (PlataformaContratacionMalformedURLException)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","MalformedURLException").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setMalformedURLException(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setMalformedURLException(MalformedURLException.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class CondicionesLicitadores
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = CondicionesLicitadores
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for AnosExperiencia
                        */

                        
                                    protected java.lang.String localAnosExperiencia ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAnosExperienciaTracker = false ;

                           public boolean isAnosExperienciaSpecified(){
                               return localAnosExperienciaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAnosExperiencia(){
                               return localAnosExperiencia;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AnosExperiencia
                               */
                               public void setAnosExperiencia(java.lang.String param){
                            localAnosExperienciaTracker = true;
                                   
                                            this.localAnosExperiencia=param;
                                    

                               }
                            

                        /**
                        * field for AnosExperienciaAcreditarRequisito
                        */

                        
                                    protected Campo localAnosExperienciaAcreditarRequisito ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAnosExperienciaAcreditarRequisitoTracker = false ;

                           public boolean isAnosExperienciaAcreditarRequisitoSpecified(){
                               return localAnosExperienciaAcreditarRequisitoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getAnosExperienciaAcreditarRequisito(){
                               return localAnosExperienciaAcreditarRequisito;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AnosExperienciaAcreditarRequisito
                               */
                               public void setAnosExperienciaAcreditarRequisito(Campo param){
                            localAnosExperienciaAcreditarRequisitoTracker = true;
                                   
                                            this.localAnosExperienciaAcreditarRequisito=param;
                                    

                               }
                            

                        /**
                        * field for FormaLegal
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localFormaLegal ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFormaLegalTracker = false ;

                           public boolean isFormaLegalSpecified(){
                               return localFormaLegalTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getFormaLegal(){
                               return localFormaLegal;
                           }

                           
                        


                               
                              /**
                               * validate the array for FormaLegal
                               */
                              protected void validateFormaLegal(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param FormaLegal
                              */
                              public void setFormaLegal(java.lang.String[] param){
                              
                                   validateFormaLegal(param);

                               localFormaLegalTracker = true;
                                      
                                      this.localFormaLegal=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addFormaLegal(java.lang.String param){
                                   if (localFormaLegal == null){
                                   localFormaLegal = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localFormaLegalTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localFormaLegal);
                               list.add(param);
                               this.localFormaLegal =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for HabilitacionEmpresarial
                        */

                        
                                    protected java.lang.String localHabilitacionEmpresarial ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHabilitacionEmpresarialTracker = false ;

                           public boolean isHabilitacionEmpresarialSpecified(){
                               return localHabilitacionEmpresarialTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHabilitacionEmpresarial(){
                               return localHabilitacionEmpresarial;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HabilitacionEmpresarial
                               */
                               public void setHabilitacionEmpresarial(java.lang.String param){
                            localHabilitacionEmpresarialTracker = true;
                                   
                                            this.localHabilitacionEmpresarial=param;
                                    

                               }
                            

                        /**
                        * field for HabilitacionEmpresarialAcreditarRequisito
                        */

                        
                                    protected Campo localHabilitacionEmpresarialAcreditarRequisito ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHabilitacionEmpresarialAcreditarRequisitoTracker = false ;

                           public boolean isHabilitacionEmpresarialAcreditarRequisitoSpecified(){
                               return localHabilitacionEmpresarialAcreditarRequisitoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getHabilitacionEmpresarialAcreditarRequisito(){
                               return localHabilitacionEmpresarialAcreditarRequisito;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HabilitacionEmpresarialAcreditarRequisito
                               */
                               public void setHabilitacionEmpresarialAcreditarRequisito(Campo param){
                            localHabilitacionEmpresarialAcreditarRequisitoTracker = true;
                                   
                                            this.localHabilitacionEmpresarialAcreditarRequisito=param;
                                    

                               }
                            

                        /**
                        * field for NumMinEmpleados
                        */

                        
                                    protected java.lang.String localNumMinEmpleados ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumMinEmpleadosTracker = false ;

                           public boolean isNumMinEmpleadosSpecified(){
                               return localNumMinEmpleadosTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumMinEmpleados(){
                               return localNumMinEmpleados;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NumMinEmpleados
                               */
                               public void setNumMinEmpleados(java.lang.String param){
                            localNumMinEmpleadosTracker = true;
                                   
                                            this.localNumMinEmpleados=param;
                                    

                               }
                            

                        /**
                        * field for NumMinEmpleadosAcreditarRequisito
                        */

                        
                                    protected Campo localNumMinEmpleadosAcreditarRequisito ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumMinEmpleadosAcreditarRequisitoTracker = false ;

                           public boolean isNumMinEmpleadosAcreditarRequisitoSpecified(){
                               return localNumMinEmpleadosAcreditarRequisitoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getNumMinEmpleadosAcreditarRequisito(){
                               return localNumMinEmpleadosAcreditarRequisito;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NumMinEmpleadosAcreditarRequisito
                               */
                               public void setNumMinEmpleadosAcreditarRequisito(Campo param){
                            localNumMinEmpleadosAcreditarRequisitoTracker = true;
                                   
                                            this.localNumMinEmpleadosAcreditarRequisito=param;
                                    

                               }
                            

                        /**
                        * field for RequerCVVVA
                        */

                        
                                    protected java.lang.String localRequerCVVVA ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRequerCVVVATracker = false ;

                           public boolean isRequerCVVVASpecified(){
                               return localRequerCVVVATracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRequerCVVVA(){
                               return localRequerCVVVA;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RequerCVVVA
                               */
                               public void setRequerCVVVA(java.lang.String param){
                            localRequerCVVVATracker = true;
                                   
                                            this.localRequerCVVVA=param;
                                    

                               }
                            

                        /**
                        * field for RequerCVVVAcreditarRequisito
                        */

                        
                                    protected Campo localRequerCVVVAcreditarRequisito ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRequerCVVVAcreditarRequisitoTracker = false ;

                           public boolean isRequerCVVVAcreditarRequisitoSpecified(){
                               return localRequerCVVVAcreditarRequisitoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getRequerCVVVAcreditarRequisito(){
                               return localRequerCVVVAcreditarRequisito;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RequerCVVVAcreditarRequisito
                               */
                               public void setRequerCVVVAcreditarRequisito(Campo param){
                            localRequerCVVVAcreditarRequisitoTracker = true;
                                   
                                            this.localRequerCVVVAcreditarRequisito=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":CondicionesLicitadores",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "CondicionesLicitadores",
                           xmlWriter);
                   }

               
                   }
                if (localAnosExperienciaTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "anosExperiencia", xmlWriter);
                             

                                          if (localAnosExperiencia==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAnosExperiencia);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAnosExperienciaAcreditarRequisitoTracker){
                                    if (localAnosExperienciaAcreditarRequisito==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "anosExperienciaAcreditarRequisito", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localAnosExperienciaAcreditarRequisito.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","anosExperienciaAcreditarRequisito"),
                                        xmlWriter);
                                    }
                                } if (localFormaLegalTracker){
                             if (localFormaLegal!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localFormaLegal.length;i++){
                                        
                                            if (localFormaLegal[i] != null){
                                        
                                                writeStartElement(null, namespace, "formaLegal", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFormaLegal[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "formaLegal", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "formaLegal", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localHabilitacionEmpresarialTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "habilitacionEmpresarial", xmlWriter);
                             

                                          if (localHabilitacionEmpresarial==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHabilitacionEmpresarial);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHabilitacionEmpresarialAcreditarRequisitoTracker){
                                    if (localHabilitacionEmpresarialAcreditarRequisito==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "habilitacionEmpresarialAcreditarRequisito", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localHabilitacionEmpresarialAcreditarRequisito.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","habilitacionEmpresarialAcreditarRequisito"),
                                        xmlWriter);
                                    }
                                } if (localNumMinEmpleadosTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "numMinEmpleados", xmlWriter);
                             

                                          if (localNumMinEmpleados==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumMinEmpleados);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNumMinEmpleadosAcreditarRequisitoTracker){
                                    if (localNumMinEmpleadosAcreditarRequisito==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "numMinEmpleadosAcreditarRequisito", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localNumMinEmpleadosAcreditarRequisito.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","numMinEmpleadosAcreditarRequisito"),
                                        xmlWriter);
                                    }
                                } if (localRequerCVVVATracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "requerCVVVA", xmlWriter);
                             

                                          if (localRequerCVVVA==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRequerCVVVA);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRequerCVVVAcreditarRequisitoTracker){
                                    if (localRequerCVVVAcreditarRequisito==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "requerCVVVAcreditarRequisito", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localRequerCVVVAcreditarRequisito.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","requerCVVVAcreditarRequisito"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAnosExperienciaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "anosExperiencia"));
                                 
                                         elementList.add(localAnosExperiencia==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAnosExperiencia));
                                    } if (localAnosExperienciaAcreditarRequisitoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "anosExperienciaAcreditarRequisito"));
                            
                            
                                    elementList.add(localAnosExperienciaAcreditarRequisito==null?null:
                                    localAnosExperienciaAcreditarRequisito);
                                } if (localFormaLegalTracker){
                            if (localFormaLegal!=null){
                                  for (int i = 0;i < localFormaLegal.length;i++){
                                      
                                         if (localFormaLegal[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "formaLegal"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFormaLegal[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "formaLegal"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "formaLegal"));
                                    elementList.add(null);
                                
                            }

                        } if (localHabilitacionEmpresarialTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "habilitacionEmpresarial"));
                                 
                                         elementList.add(localHabilitacionEmpresarial==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHabilitacionEmpresarial));
                                    } if (localHabilitacionEmpresarialAcreditarRequisitoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "habilitacionEmpresarialAcreditarRequisito"));
                            
                            
                                    elementList.add(localHabilitacionEmpresarialAcreditarRequisito==null?null:
                                    localHabilitacionEmpresarialAcreditarRequisito);
                                } if (localNumMinEmpleadosTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "numMinEmpleados"));
                                 
                                         elementList.add(localNumMinEmpleados==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumMinEmpleados));
                                    } if (localNumMinEmpleadosAcreditarRequisitoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "numMinEmpleadosAcreditarRequisito"));
                            
                            
                                    elementList.add(localNumMinEmpleadosAcreditarRequisito==null?null:
                                    localNumMinEmpleadosAcreditarRequisito);
                                } if (localRequerCVVVATracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "requerCVVVA"));
                                 
                                         elementList.add(localRequerCVVVA==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRequerCVVVA));
                                    } if (localRequerCVVVAcreditarRequisitoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "requerCVVVAcreditarRequisito"));
                            
                            
                                    elementList.add(localRequerCVVVAcreditarRequisito==null?null:
                                    localRequerCVVVAcreditarRequisito);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static CondicionesLicitadores parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            CondicionesLicitadores object =
                new CondicionesLicitadores();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"CondicionesLicitadores".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (CondicionesLicitadores)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list3 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","anosExperiencia").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAnosExperiencia(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","anosExperienciaAcreditarRequisito").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setAnosExperienciaAcreditarRequisito(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setAnosExperienciaAcreditarRequisito(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","formaLegal").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list3.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list3.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone3 = false;
                                            while(!loopDone3){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone3 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","formaLegal").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list3.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list3.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone3 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setFormaLegal((java.lang.String[])
                                                        list3.toArray(new java.lang.String[list3.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","habilitacionEmpresarial").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHabilitacionEmpresarial(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","habilitacionEmpresarialAcreditarRequisito").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setHabilitacionEmpresarialAcreditarRequisito(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setHabilitacionEmpresarialAcreditarRequisito(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","numMinEmpleados").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumMinEmpleados(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","numMinEmpleadosAcreditarRequisito").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setNumMinEmpleadosAcreditarRequisito(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setNumMinEmpleadosAcreditarRequisito(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","requerCVVVA").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRequerCVVVA(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","requerCVVVAcreditarRequisito").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setRequerCVVVAcreditarRequisito(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setRequerCVVVAcreditarRequisito(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class CriteriosAdjudicacion
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = CriteriosAdjudicacion
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for CodigoAlgoritmo
                        */

                        
                                    protected Campo localCodigoAlgoritmo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodigoAlgoritmoTracker = false ;

                           public boolean isCodigoAlgoritmoSpecified(){
                               return localCodigoAlgoritmoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getCodigoAlgoritmo(){
                               return localCodigoAlgoritmo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodigoAlgoritmo
                               */
                               public void setCodigoAlgoritmo(Campo param){
                            localCodigoAlgoritmoTracker = true;
                                   
                                            this.localCodigoAlgoritmo=param;
                                    

                               }
                            

                        /**
                        * field for CritAdjudicacionMultCrit
                        * This was an Array!
                        */

                        
                                    protected CriterioAdjudicacionMultCrit[] localCritAdjudicacionMultCrit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCritAdjudicacionMultCritTracker = false ;

                           public boolean isCritAdjudicacionMultCritSpecified(){
                               return localCritAdjudicacionMultCritTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return CriterioAdjudicacionMultCrit[]
                           */
                           public  CriterioAdjudicacionMultCrit[] getCritAdjudicacionMultCrit(){
                               return localCritAdjudicacionMultCrit;
                           }

                           
                        


                               
                              /**
                               * validate the array for CritAdjudicacionMultCrit
                               */
                              protected void validateCritAdjudicacionMultCrit(CriterioAdjudicacionMultCrit[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param CritAdjudicacionMultCrit
                              */
                              public void setCritAdjudicacionMultCrit(CriterioAdjudicacionMultCrit[] param){
                              
                                   validateCritAdjudicacionMultCrit(param);

                               localCritAdjudicacionMultCritTracker = true;
                                      
                                      this.localCritAdjudicacionMultCrit=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param CriterioAdjudicacionMultCrit
                             */
                             public void addCritAdjudicacionMultCrit(CriterioAdjudicacionMultCrit param){
                                   if (localCritAdjudicacionMultCrit == null){
                                   localCritAdjudicacionMultCrit = new CriterioAdjudicacionMultCrit[]{};
                                   }

                            
                                 //update the setting tracker
                                localCritAdjudicacionMultCritTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localCritAdjudicacionMultCrit);
                               list.add(param);
                               this.localCritAdjudicacionMultCrit =
                             (CriterioAdjudicacionMultCrit[])list.toArray(
                            new CriterioAdjudicacionMultCrit[list.size()]);

                             }
                             

                        /**
                        * field for Descripcion
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localDescripcion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescripcionTracker = false ;

                           public boolean isDescripcionSpecified(){
                               return localDescripcionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getDescripcion(){
                               return localDescripcion;
                           }

                           
                        


                               
                              /**
                               * validate the array for Descripcion
                               */
                              protected void validateDescripcion(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Descripcion
                              */
                              public void setDescripcion(java.lang.String[] param){
                              
                                   validateDescripcion(param);

                               localDescripcionTracker = true;
                                      
                                      this.localDescripcion=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addDescripcion(java.lang.String param){
                                   if (localDescripcion == null){
                                   localDescripcion = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localDescripcionTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDescripcion);
                               list.add(param);
                               this.localDescripcion =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for DescripcionBajaTemeraria
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localDescripcionBajaTemeraria ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescripcionBajaTemerariaTracker = false ;

                           public boolean isDescripcionBajaTemerariaSpecified(){
                               return localDescripcionBajaTemerariaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getDescripcionBajaTemeraria(){
                               return localDescripcionBajaTemeraria;
                           }

                           
                        


                               
                              /**
                               * validate the array for DescripcionBajaTemeraria
                               */
                              protected void validateDescripcionBajaTemeraria(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param DescripcionBajaTemeraria
                              */
                              public void setDescripcionBajaTemeraria(java.lang.String[] param){
                              
                                   validateDescripcionBajaTemeraria(param);

                               localDescripcionBajaTemerariaTracker = true;
                                      
                                      this.localDescripcionBajaTemeraria=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addDescripcionBajaTemeraria(java.lang.String param){
                                   if (localDescripcionBajaTemeraria == null){
                                   localDescripcionBajaTemeraria = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localDescripcionBajaTemerariaTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDescripcionBajaTemeraria);
                               list.add(param);
                               this.localDescripcionBajaTemeraria =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for DescripcionComiteTecnico
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localDescripcionComiteTecnico ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescripcionComiteTecnicoTracker = false ;

                           public boolean isDescripcionComiteTecnicoSpecified(){
                               return localDescripcionComiteTecnicoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getDescripcionComiteTecnico(){
                               return localDescripcionComiteTecnico;
                           }

                           
                        


                               
                              /**
                               * validate the array for DescripcionComiteTecnico
                               */
                              protected void validateDescripcionComiteTecnico(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param DescripcionComiteTecnico
                              */
                              public void setDescripcionComiteTecnico(java.lang.String[] param){
                              
                                   validateDescripcionComiteTecnico(param);

                               localDescripcionComiteTecnicoTracker = true;
                                      
                                      this.localDescripcionComiteTecnico=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addDescripcionComiteTecnico(java.lang.String param){
                                   if (localDescripcionComiteTecnico == null){
                                   localDescripcionComiteTecnico = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localDescripcionComiteTecnicoTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDescripcionComiteTecnico);
                               list.add(param);
                               this.localDescripcionComiteTecnico =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for PersComite
                        * This was an Array!
                        */

                        
                                    protected PersonaComite[] localPersComite ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPersComiteTracker = false ;

                           public boolean isPersComiteSpecified(){
                               return localPersComiteTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return PersonaComite[]
                           */
                           public  PersonaComite[] getPersComite(){
                               return localPersComite;
                           }

                           
                        


                               
                              /**
                               * validate the array for PersComite
                               */
                              protected void validatePersComite(PersonaComite[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param PersComite
                              */
                              public void setPersComite(PersonaComite[] param){
                              
                                   validatePersComite(param);

                               localPersComiteTracker = true;
                                      
                                      this.localPersComite=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param PersonaComite
                             */
                             public void addPersComite(PersonaComite param){
                                   if (localPersComite == null){
                                   localPersComite = new PersonaComite[]{};
                                   }

                            
                                 //update the setting tracker
                                localPersComiteTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localPersComite);
                               list.add(param);
                               this.localPersComite =
                             (PersonaComite[])list.toArray(
                            new PersonaComite[list.size()]);

                             }
                             

                        /**
                        * field for TipoAdjudicacion
                        */

                        
                                    protected Campo localTipoAdjudicacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTipoAdjudicacionTracker = false ;

                           public boolean isTipoAdjudicacionSpecified(){
                               return localTipoAdjudicacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getTipoAdjudicacion(){
                               return localTipoAdjudicacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TipoAdjudicacion
                               */
                               public void setTipoAdjudicacion(Campo param){
                            localTipoAdjudicacionTracker = true;
                                   
                                            this.localTipoAdjudicacion=param;
                                    

                               }
                            

                        /**
                        * field for ValoracionTipoOferta
                        */

                        
                                    protected Campo localValoracionTipoOferta ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localValoracionTipoOfertaTracker = false ;

                           public boolean isValoracionTipoOfertaSpecified(){
                               return localValoracionTipoOfertaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getValoracionTipoOferta(){
                               return localValoracionTipoOferta;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ValoracionTipoOferta
                               */
                               public void setValoracionTipoOferta(Campo param){
                            localValoracionTipoOfertaTracker = true;
                                   
                                            this.localValoracionTipoOferta=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":CriteriosAdjudicacion",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "CriteriosAdjudicacion",
                           xmlWriter);
                   }

               
                   }
                if (localCodigoAlgoritmoTracker){
                                    if (localCodigoAlgoritmo==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "codigoAlgoritmo", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localCodigoAlgoritmo.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","codigoAlgoritmo"),
                                        xmlWriter);
                                    }
                                } if (localCritAdjudicacionMultCritTracker){
                                       if (localCritAdjudicacionMultCrit!=null){
                                            for (int i = 0;i < localCritAdjudicacionMultCrit.length;i++){
                                                if (localCritAdjudicacionMultCrit[i] != null){
                                                 localCritAdjudicacionMultCrit[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","critAdjudicacionMultCrit"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "critAdjudicacionMultCrit", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "critAdjudicacionMultCrit", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localDescripcionTracker){
                             if (localDescripcion!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localDescripcion.length;i++){
                                        
                                            if (localDescripcion[i] != null){
                                        
                                                writeStartElement(null, namespace, "descripcion", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "descripcion", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "descripcion", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localDescripcionBajaTemerariaTracker){
                             if (localDescripcionBajaTemeraria!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localDescripcionBajaTemeraria.length;i++){
                                        
                                            if (localDescripcionBajaTemeraria[i] != null){
                                        
                                                writeStartElement(null, namespace, "descripcionBajaTemeraria", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcionBajaTemeraria[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "descripcionBajaTemeraria", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "descripcionBajaTemeraria", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localDescripcionComiteTecnicoTracker){
                             if (localDescripcionComiteTecnico!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localDescripcionComiteTecnico.length;i++){
                                        
                                            if (localDescripcionComiteTecnico[i] != null){
                                        
                                                writeStartElement(null, namespace, "descripcionComiteTecnico", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcionComiteTecnico[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "descripcionComiteTecnico", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "descripcionComiteTecnico", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localPersComiteTracker){
                                       if (localPersComite!=null){
                                            for (int i = 0;i < localPersComite.length;i++){
                                                if (localPersComite[i] != null){
                                                 localPersComite[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","persComite"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "persComite", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "persComite", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localTipoAdjudicacionTracker){
                                    if (localTipoAdjudicacion==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "tipoAdjudicacion", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localTipoAdjudicacion.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoAdjudicacion"),
                                        xmlWriter);
                                    }
                                } if (localValoracionTipoOfertaTracker){
                                    if (localValoracionTipoOferta==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "valoracionTipoOferta", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localValoracionTipoOferta.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","valoracionTipoOferta"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCodigoAlgoritmoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "codigoAlgoritmo"));
                            
                            
                                    elementList.add(localCodigoAlgoritmo==null?null:
                                    localCodigoAlgoritmo);
                                } if (localCritAdjudicacionMultCritTracker){
                             if (localCritAdjudicacionMultCrit!=null) {
                                 for (int i = 0;i < localCritAdjudicacionMultCrit.length;i++){

                                    if (localCritAdjudicacionMultCrit[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "critAdjudicacionMultCrit"));
                                         elementList.add(localCritAdjudicacionMultCrit[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "critAdjudicacionMultCrit"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "critAdjudicacionMultCrit"));
                                        elementList.add(localCritAdjudicacionMultCrit);
                                    
                             }

                        } if (localDescripcionTracker){
                            if (localDescripcion!=null){
                                  for (int i = 0;i < localDescripcion.length;i++){
                                      
                                         if (localDescripcion[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                    elementList.add(null);
                                
                            }

                        } if (localDescripcionBajaTemerariaTracker){
                            if (localDescripcionBajaTemeraria!=null){
                                  for (int i = 0;i < localDescripcionBajaTemeraria.length;i++){
                                      
                                         if (localDescripcionBajaTemeraria[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcionBajaTemeraria"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcionBajaTemeraria[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcionBajaTemeraria"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcionBajaTemeraria"));
                                    elementList.add(null);
                                
                            }

                        } if (localDescripcionComiteTecnicoTracker){
                            if (localDescripcionComiteTecnico!=null){
                                  for (int i = 0;i < localDescripcionComiteTecnico.length;i++){
                                      
                                         if (localDescripcionComiteTecnico[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcionComiteTecnico"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcionComiteTecnico[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcionComiteTecnico"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcionComiteTecnico"));
                                    elementList.add(null);
                                
                            }

                        } if (localPersComiteTracker){
                             if (localPersComite!=null) {
                                 for (int i = 0;i < localPersComite.length;i++){

                                    if (localPersComite[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "persComite"));
                                         elementList.add(localPersComite[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "persComite"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "persComite"));
                                        elementList.add(localPersComite);
                                    
                             }

                        } if (localTipoAdjudicacionTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "tipoAdjudicacion"));
                            
                            
                                    elementList.add(localTipoAdjudicacion==null?null:
                                    localTipoAdjudicacion);
                                } if (localValoracionTipoOfertaTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "valoracionTipoOferta"));
                            
                            
                                    elementList.add(localValoracionTipoOferta==null?null:
                                    localValoracionTipoOferta);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static CriteriosAdjudicacion parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            CriteriosAdjudicacion object =
                new CriteriosAdjudicacion();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"CriteriosAdjudicacion".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (CriteriosAdjudicacion)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list2 = new java.util.ArrayList();
                    
                        java.util.ArrayList list3 = new java.util.ArrayList();
                    
                        java.util.ArrayList list4 = new java.util.ArrayList();
                    
                        java.util.ArrayList list5 = new java.util.ArrayList();
                    
                        java.util.ArrayList list6 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","codigoAlgoritmo").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setCodigoAlgoritmo(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setCodigoAlgoritmo(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","critAdjudicacionMultCrit").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list2.add(null);
                                                              reader.next();
                                                          } else {
                                                        list2.add(CriterioAdjudicacionMultCrit.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone2 = false;
                                                        while(!loopDone2){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone2 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","critAdjudicacionMultCrit").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list2.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list2.add(CriterioAdjudicacionMultCrit.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone2 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setCritAdjudicacionMultCrit((CriterioAdjudicacionMultCrit[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                CriterioAdjudicacionMultCrit.class,
                                                                list2));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list3.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list3.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone3 = false;
                                            while(!loopDone3){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone3 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list3.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list3.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone3 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setDescripcion((java.lang.String[])
                                                        list3.toArray(new java.lang.String[list3.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcionBajaTemeraria").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list4.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list4.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone4 = false;
                                            while(!loopDone4){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone4 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcionBajaTemeraria").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list4.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list4.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone4 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setDescripcionBajaTemeraria((java.lang.String[])
                                                        list4.toArray(new java.lang.String[list4.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcionComiteTecnico").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list5.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list5.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone5 = false;
                                            while(!loopDone5){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone5 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcionComiteTecnico").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list5.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list5.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone5 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setDescripcionComiteTecnico((java.lang.String[])
                                                        list5.toArray(new java.lang.String[list5.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","persComite").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list6.add(null);
                                                              reader.next();
                                                          } else {
                                                        list6.add(PersonaComite.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone6 = false;
                                                        while(!loopDone6){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone6 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","persComite").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list6.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list6.add(PersonaComite.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone6 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setPersComite((PersonaComite[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                PersonaComite.class,
                                                                list6));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoAdjudicacion").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setTipoAdjudicacion(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setTipoAdjudicacion(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","valoracionTipoOferta").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setValoracionTipoOferta(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setValoracionTipoOferta(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AplicacionPresupuestaria
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = AplicacionPresupuestaria
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for Anualidad
                        */

                        
                                    protected java.lang.String localAnualidad ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAnualidadTracker = false ;

                           public boolean isAnualidadSpecified(){
                               return localAnualidadTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAnualidad(){
                               return localAnualidad;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Anualidad
                               */
                               public void setAnualidad(java.lang.String param){
                            localAnualidadTracker = true;
                                   
                                            this.localAnualidad=param;
                                    

                               }
                            

                        /**
                        * field for AplicPres
                        */

                        
                                    protected java.lang.String localAplicPres ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAplicPresTracker = false ;

                           public boolean isAplicPresSpecified(){
                               return localAplicPresTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAplicPres(){
                               return localAplicPres;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AplicPres
                               */
                               public void setAplicPres(java.lang.String param){
                            localAplicPresTracker = true;
                                   
                                            this.localAplicPres=param;
                                    

                               }
                            

                        /**
                        * field for Importe
                        */

                        
                                    protected java.lang.String localImporte ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImporteTracker = false ;

                           public boolean isImporteSpecified(){
                               return localImporteTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getImporte(){
                               return localImporte;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Importe
                               */
                               public void setImporte(java.lang.String param){
                            localImporteTracker = true;
                                   
                                            this.localImporte=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":AplicacionPresupuestaria",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "AplicacionPresupuestaria",
                           xmlWriter);
                   }

               
                   }
                if (localAnualidadTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "anualidad", xmlWriter);
                             

                                          if (localAnualidad==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAnualidad);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAplicPresTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "aplicPres", xmlWriter);
                             

                                          if (localAplicPres==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAplicPres);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localImporteTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "importe", xmlWriter);
                             

                                          if (localImporte==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localImporte);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAnualidadTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "anualidad"));
                                 
                                         elementList.add(localAnualidad==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAnualidad));
                                    } if (localAplicPresTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "aplicPres"));
                                 
                                         elementList.add(localAplicPres==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAplicPres));
                                    } if (localImporteTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "importe"));
                                 
                                         elementList.add(localImporte==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImporte));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AplicacionPresupuestaria parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AplicacionPresupuestaria object =
                new AplicacionPresupuestaria();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"AplicacionPresupuestaria".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AplicacionPresupuestaria)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","anualidad").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAnualidad(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","aplicPres").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAplicPres(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","importe").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImporte(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class SolvenciaTecnica
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = SolvenciaTecnica
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for CriterioSolvencia
                        */

                        
                                    protected Campo localCriterioSolvencia ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCriterioSolvenciaTracker = false ;

                           public boolean isCriterioSolvenciaSpecified(){
                               return localCriterioSolvenciaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getCriterioSolvencia(){
                               return localCriterioSolvencia;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CriterioSolvencia
                               */
                               public void setCriterioSolvencia(Campo param){
                            localCriterioSolvenciaTracker = true;
                                   
                                            this.localCriterioSolvencia=param;
                                    

                               }
                            

                        /**
                        * field for CriterioSolvenciaAcreditarRequisito
                        */

                        
                                    protected Campo localCriterioSolvenciaAcreditarRequisito ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCriterioSolvenciaAcreditarRequisitoTracker = false ;

                           public boolean isCriterioSolvenciaAcreditarRequisitoSpecified(){
                               return localCriterioSolvenciaAcreditarRequisitoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getCriterioSolvenciaAcreditarRequisito(){
                               return localCriterioSolvenciaAcreditarRequisito;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CriterioSolvenciaAcreditarRequisito
                               */
                               public void setCriterioSolvenciaAcreditarRequisito(Campo param){
                            localCriterioSolvenciaAcreditarRequisitoTracker = true;
                                   
                                            this.localCriterioSolvenciaAcreditarRequisito=param;
                                    

                               }
                            

                        /**
                        * field for Descripcion
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localDescripcion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescripcionTracker = false ;

                           public boolean isDescripcionSpecified(){
                               return localDescripcionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getDescripcion(){
                               return localDescripcion;
                           }

                           
                        


                               
                              /**
                               * validate the array for Descripcion
                               */
                              protected void validateDescripcion(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Descripcion
                              */
                              public void setDescripcion(java.lang.String[] param){
                              
                                   validateDescripcion(param);

                               localDescripcionTracker = true;
                                      
                                      this.localDescripcion=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addDescripcion(java.lang.String param){
                                   if (localDescripcion == null){
                                   localDescripcion = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localDescripcionTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDescripcion);
                               list.add(param);
                               this.localDescripcion =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for ExpresEvaluarCriterioEvalucion
                        */

                        
                                    protected Campo localExpresEvaluarCriterioEvalucion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpresEvaluarCriterioEvalucionTracker = false ;

                           public boolean isExpresEvaluarCriterioEvalucionSpecified(){
                               return localExpresEvaluarCriterioEvalucionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getExpresEvaluarCriterioEvalucion(){
                               return localExpresEvaluarCriterioEvalucion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExpresEvaluarCriterioEvalucion
                               */
                               public void setExpresEvaluarCriterioEvalucion(Campo param){
                            localExpresEvaluarCriterioEvalucionTracker = true;
                                   
                                            this.localExpresEvaluarCriterioEvalucion=param;
                                    

                               }
                            

                        /**
                        * field for PeriodoDuracion
                        */

                        
                                    protected java.util.Calendar localPeriodoDuracion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPeriodoDuracionTracker = false ;

                           public boolean isPeriodoDuracionSpecified(){
                               return localPeriodoDuracionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getPeriodoDuracion(){
                               return localPeriodoDuracion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PeriodoDuracion
                               */
                               public void setPeriodoDuracion(java.util.Calendar param){
                            localPeriodoDuracionTracker = true;
                                   
                                            this.localPeriodoDuracion=param;
                                    

                               }
                            

                        /**
                        * field for ValorUmbralImporte
                        */

                        
                                    protected java.lang.String localValorUmbralImporte ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localValorUmbralImporteTracker = false ;

                           public boolean isValorUmbralImporteSpecified(){
                               return localValorUmbralImporteTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getValorUmbralImporte(){
                               return localValorUmbralImporte;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ValorUmbralImporte
                               */
                               public void setValorUmbralImporte(java.lang.String param){
                            localValorUmbralImporteTracker = true;
                                   
                                            this.localValorUmbralImporte=param;
                                    

                               }
                            

                        /**
                        * field for ValorUmbralNoImporte
                        */

                        
                                    protected java.lang.String localValorUmbralNoImporte ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localValorUmbralNoImporteTracker = false ;

                           public boolean isValorUmbralNoImporteSpecified(){
                               return localValorUmbralNoImporteTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getValorUmbralNoImporte(){
                               return localValorUmbralNoImporte;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ValorUmbralNoImporte
                               */
                               public void setValorUmbralNoImporte(java.lang.String param){
                            localValorUmbralNoImporteTracker = true;
                                   
                                            this.localValorUmbralNoImporte=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":SolvenciaTecnica",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "SolvenciaTecnica",
                           xmlWriter);
                   }

               
                   }
                if (localCriterioSolvenciaTracker){
                                    if (localCriterioSolvencia==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "criterioSolvencia", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localCriterioSolvencia.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","criterioSolvencia"),
                                        xmlWriter);
                                    }
                                } if (localCriterioSolvenciaAcreditarRequisitoTracker){
                                    if (localCriterioSolvenciaAcreditarRequisito==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "criterioSolvenciaAcreditarRequisito", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localCriterioSolvenciaAcreditarRequisito.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","criterioSolvenciaAcreditarRequisito"),
                                        xmlWriter);
                                    }
                                } if (localDescripcionTracker){
                             if (localDescripcion!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localDescripcion.length;i++){
                                        
                                            if (localDescripcion[i] != null){
                                        
                                                writeStartElement(null, namespace, "descripcion", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "descripcion", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "descripcion", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localExpresEvaluarCriterioEvalucionTracker){
                                    if (localExpresEvaluarCriterioEvalucion==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "expresEvaluarCriterioEvalucion", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localExpresEvaluarCriterioEvalucion.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","expresEvaluarCriterioEvalucion"),
                                        xmlWriter);
                                    }
                                } if (localPeriodoDuracionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "periodoDuracion", xmlWriter);
                             

                                          if (localPeriodoDuracion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPeriodoDuracion));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localValorUmbralImporteTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "valorUmbralImporte", xmlWriter);
                             

                                          if (localValorUmbralImporte==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localValorUmbralImporte);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localValorUmbralNoImporteTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "valorUmbralNoImporte", xmlWriter);
                             

                                          if (localValorUmbralNoImporte==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localValorUmbralNoImporte);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCriterioSolvenciaTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "criterioSolvencia"));
                            
                            
                                    elementList.add(localCriterioSolvencia==null?null:
                                    localCriterioSolvencia);
                                } if (localCriterioSolvenciaAcreditarRequisitoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "criterioSolvenciaAcreditarRequisito"));
                            
                            
                                    elementList.add(localCriterioSolvenciaAcreditarRequisito==null?null:
                                    localCriterioSolvenciaAcreditarRequisito);
                                } if (localDescripcionTracker){
                            if (localDescripcion!=null){
                                  for (int i = 0;i < localDescripcion.length;i++){
                                      
                                         if (localDescripcion[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                    elementList.add(null);
                                
                            }

                        } if (localExpresEvaluarCriterioEvalucionTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "expresEvaluarCriterioEvalucion"));
                            
                            
                                    elementList.add(localExpresEvaluarCriterioEvalucion==null?null:
                                    localExpresEvaluarCriterioEvalucion);
                                } if (localPeriodoDuracionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "periodoDuracion"));
                                 
                                         elementList.add(localPeriodoDuracion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPeriodoDuracion));
                                    } if (localValorUmbralImporteTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "valorUmbralImporte"));
                                 
                                         elementList.add(localValorUmbralImporte==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localValorUmbralImporte));
                                    } if (localValorUmbralNoImporteTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "valorUmbralNoImporte"));
                                 
                                         elementList.add(localValorUmbralNoImporte==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localValorUmbralNoImporte));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static SolvenciaTecnica parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            SolvenciaTecnica object =
                new SolvenciaTecnica();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"SolvenciaTecnica".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (SolvenciaTecnica)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list3 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","criterioSolvencia").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setCriterioSolvencia(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setCriterioSolvencia(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","criterioSolvenciaAcreditarRequisito").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setCriterioSolvenciaAcreditarRequisito(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setCriterioSolvenciaAcreditarRequisito(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list3.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list3.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone3 = false;
                                            while(!loopDone3){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone3 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list3.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list3.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone3 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setDescripcion((java.lang.String[])
                                                        list3.toArray(new java.lang.String[list3.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","expresEvaluarCriterioEvalucion").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setExpresEvaluarCriterioEvalucion(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setExpresEvaluarCriterioEvalucion(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","periodoDuracion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPeriodoDuracion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","valorUmbralImporte").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setValorUmbralImporte(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","valorUmbralNoImporte").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setValorUmbralNoImporte(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ExtensionMapper{

          public static java.lang.Object getTypeObject(java.lang.String namespaceURI,
                                                       java.lang.String typeName,
                                                       javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{

              
                  if (
                  "http://io.java/xsd".equals(namespaceURI) &&
                  "IOException".equals(typeName)){
                   
                            return  IOException.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "Periodo".equals(typeName)){
                   
                            return  Periodo.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "DuracionContratoBean".equals(typeName)){
                   
                            return  DuracionContratoBean.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "SolvenciaEconomica".equals(typeName)){
                   
                            return  SolvenciaEconomica.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "PersonaComite".equals(typeName)){
                   
                            return  PersonaComite.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "CriterioAdjudicacionMultCrit".equals(typeName)){
                   
                            return  CriterioAdjudicacionMultCrit.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "SobreElectronico".equals(typeName)){
                   
                            return  SobreElectronico.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "RequisitfiDeclaraciones".equals(typeName)){
                   
                            return  RequisitfiDeclaraciones.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "PublicacionesOficialesBean".equals(typeName)){
                   
                            return  PublicacionesOficialesBean.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "PersonalContacto".equals(typeName)){
                   
                            return  PersonalContacto.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "CondicionesLicitadores".equals(typeName)){
                   
                            return  CondicionesLicitadores.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "CriteriosAdjudicacion".equals(typeName)){
                   
                            return  CriteriosAdjudicacion.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "AplicacionPresupuestaria".equals(typeName)){
                   
                            return  AplicacionPresupuestaria.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "SolvenciaTecnica".equals(typeName)){
                   
                            return  SolvenciaTecnica.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "LicitadorBean".equals(typeName)){
                   
                            return  LicitadorBean.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "Lotes".equals(typeName)){
                   
                            return  Lotes.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "EventoAperturaBean".equals(typeName)){
                   
                            return  EventoAperturaBean.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "Garantia".equals(typeName)){
                   
                            return  Garantia.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "EspacioVirtualLicitacionBean".equals(typeName)){
                   
                            return  EspacioVirtualLicitacionBean.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://rmi.java/xsd".equals(namespaceURI) &&
                  "RemoteException".equals(typeName)){
                   
                            return  RemoteException.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "OrganoAsistencia".equals(typeName)){
                   
                            return  OrganoAsistencia.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://net.java/xsd".equals(namespaceURI) &&
                  "MalformedURLException".equals(typeName)){
                   
                            return  MalformedURLException.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "AnuncioBean".equals(typeName)){
                   
                            return  AnuncioBean.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://hibernate.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "PeticionesAlsigm".equals(typeName)){
                   
                            return  PeticionesAlsigm.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "FundacionPrograma".equals(typeName)){
                   
                            return  FundacionPrograma.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "Lote".equals(typeName)){
                   
                            return  Lote.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "Clasificacion".equals(typeName)){
                   
                            return  Clasificacion.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "Documento".equals(typeName)){
                   
                            return  Documento.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "VariantesOfertas".equals(typeName)){
                   
                            return  VariantesOfertas.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://io.java/xsd".equals(namespaceURI) &&
                  "UnsupportedEncodingException".equals(typeName)){
                   
                            return  UnsupportedEncodingException.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://objeto.contratacion.dipucr.es/xsd".equals(namespaceURI) &&
                  "Campo".equals(typeName)){
                   
                            return  Campo.Factory.parse(reader);
                        

                  }

              
             throw new org.apache.axis2.databinding.ADBException("Unsupported type " + namespaceURI + " " + typeName);
          }

        }
    
        public static class LicitadorBean
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = LicitadorBean
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for NUTS
                        */

                        
                                    protected Campo localNUTS ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNUTSTracker = false ;

                           public boolean isNUTSSpecified(){
                               return localNUTSTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getNUTS(){
                               return localNUTS;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NUTS
                               */
                               public void setNUTS(Campo param){
                            localNUTSTracker = true;
                                   
                                            this.localNUTS=param;
                                    

                               }
                            

                        /**
                        * field for AutorizaEnvioComunicacionesElect
                        */

                        
                                    protected boolean localAutorizaEnvioComunicacionesElect ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAutorizaEnvioComunicacionesElectTracker = false ;

                           public boolean isAutorizaEnvioComunicacionesElectSpecified(){
                               return localAutorizaEnvioComunicacionesElectTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getAutorizaEnvioComunicacionesElect(){
                               return localAutorizaEnvioComunicacionesElect;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AutorizaEnvioComunicacionesElect
                               */
                               public void setAutorizaEnvioComunicacionesElect(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localAutorizaEnvioComunicacionesElectTracker =
                                       true;
                                   
                                            this.localAutorizaEnvioComunicacionesElect=param;
                                    

                               }
                            

                        /**
                        * field for Calle
                        */

                        
                                    protected java.lang.String localCalle ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalleTracker = false ;

                           public boolean isCalleSpecified(){
                               return localCalleTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCalle(){
                               return localCalle;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calle
                               */
                               public void setCalle(java.lang.String param){
                            localCalleTracker = true;
                                   
                                            this.localCalle=param;
                                    

                               }
                            

                        /**
                        * field for Cp
                        */

                        
                                    protected java.lang.String localCp ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCpTracker = false ;

                           public boolean isCpSpecified(){
                               return localCpTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCp(){
                               return localCp;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cp
                               */
                               public void setCp(java.lang.String param){
                            localCpTracker = true;
                                   
                                            this.localCp=param;
                                    

                               }
                            

                        /**
                        * field for Email
                        */

                        
                                    protected java.lang.String localEmail ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmailTracker = false ;

                           public boolean isEmailSpecified(){
                               return localEmailTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmail(){
                               return localEmail;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Email
                               */
                               public void setEmail(java.lang.String param){
                            localEmailTracker = true;
                                   
                                            this.localEmail=param;
                                    

                               }
                            

                        /**
                        * field for FechaAdjudicacion
                        */

                        
                                    protected java.util.Calendar localFechaAdjudicacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFechaAdjudicacionTracker = false ;

                           public boolean isFechaAdjudicacionSpecified(){
                               return localFechaAdjudicacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getFechaAdjudicacion(){
                               return localFechaAdjudicacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FechaAdjudicacion
                               */
                               public void setFechaAdjudicacion(java.util.Calendar param){
                            localFechaAdjudicacionTracker = true;
                                   
                                            this.localFechaAdjudicacion=param;
                                    

                               }
                            

                        /**
                        * field for FechaFinFormalizacion
                        */

                        
                                    protected java.util.Calendar localFechaFinFormalizacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFechaFinFormalizacionTracker = false ;

                           public boolean isFechaFinFormalizacionSpecified(){
                               return localFechaFinFormalizacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getFechaFinFormalizacion(){
                               return localFechaFinFormalizacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FechaFinFormalizacion
                               */
                               public void setFechaFinFormalizacion(java.util.Calendar param){
                            localFechaFinFormalizacionTracker = true;
                                   
                                            this.localFechaFinFormalizacion=param;
                                    

                               }
                            

                        /**
                        * field for Identificador
                        */

                        
                                    protected java.lang.String localIdentificador ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdentificadorTracker = false ;

                           public boolean isIdentificadorSpecified(){
                               return localIdentificadorTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIdentificador(){
                               return localIdentificador;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Identificador
                               */
                               public void setIdentificador(java.lang.String param){
                            localIdentificadorTracker = true;
                                   
                                            this.localIdentificador=param;
                                    

                               }
                            

                        /**
                        * field for ImporteConImpuestos
                        */

                        
                                    protected java.lang.String localImporteConImpuestos ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImporteConImpuestosTracker = false ;

                           public boolean isImporteConImpuestosSpecified(){
                               return localImporteConImpuestosTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getImporteConImpuestos(){
                               return localImporteConImpuestos;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ImporteConImpuestos
                               */
                               public void setImporteConImpuestos(java.lang.String param){
                            localImporteConImpuestosTracker = true;
                                   
                                            this.localImporteConImpuestos=param;
                                    

                               }
                            

                        /**
                        * field for ImporteSinImpuestos
                        */

                        
                                    protected java.lang.String localImporteSinImpuestos ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImporteSinImpuestosTracker = false ;

                           public boolean isImporteSinImpuestosSpecified(){
                               return localImporteSinImpuestosTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getImporteSinImpuestos(){
                               return localImporteSinImpuestos;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ImporteSinImpuestos
                               */
                               public void setImporteSinImpuestos(java.lang.String param){
                            localImporteSinImpuestosTracker = true;
                                   
                                            this.localImporteSinImpuestos=param;
                                    

                               }
                            

                        /**
                        * field for JustificacionDescripcion
                        */

                        
                                    protected java.lang.String localJustificacionDescripcion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localJustificacionDescripcionTracker = false ;

                           public boolean isJustificacionDescripcionSpecified(){
                               return localJustificacionDescripcionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getJustificacionDescripcion(){
                               return localJustificacionDescripcion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param JustificacionDescripcion
                               */
                               public void setJustificacionDescripcion(java.lang.String param){
                            localJustificacionDescripcionTracker = true;
                                   
                                            this.localJustificacionDescripcion=param;
                                    

                               }
                            

                        /**
                        * field for JustificacionProceso
                        */

                        
                                    protected Campo localJustificacionProceso ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localJustificacionProcesoTracker = false ;

                           public boolean isJustificacionProcesoSpecified(){
                               return localJustificacionProcesoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getJustificacionProceso(){
                               return localJustificacionProceso;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param JustificacionProceso
                               */
                               public void setJustificacionProceso(Campo param){
                            localJustificacionProcesoTracker = true;
                                   
                                            this.localJustificacionProceso=param;
                                    

                               }
                            

                        /**
                        * field for Motivacion
                        */

                        
                                    protected java.lang.String localMotivacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMotivacionTracker = false ;

                           public boolean isMotivacionSpecified(){
                               return localMotivacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMotivacion(){
                               return localMotivacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Motivacion
                               */
                               public void setMotivacion(java.lang.String param){
                            localMotivacionTracker = true;
                                   
                                            this.localMotivacion=param;
                                    

                               }
                            

                        /**
                        * field for Nombre
                        */

                        
                                    protected java.lang.String localNombre ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNombreTracker = false ;

                           public boolean isNombreSpecified(){
                               return localNombreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNombre(){
                               return localNombre;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Nombre
                               */
                               public void setNombre(java.lang.String param){
                            localNombreTracker = true;
                                   
                                            this.localNombre=param;
                                    

                               }
                            

                        /**
                        * field for NumeroVia
                        */

                        
                                    protected java.lang.String localNumeroVia ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumeroViaTracker = false ;

                           public boolean isNumeroViaSpecified(){
                               return localNumeroViaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumeroVia(){
                               return localNumeroVia;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NumeroVia
                               */
                               public void setNumeroVia(java.lang.String param){
                            localNumeroViaTracker = true;
                                   
                                            this.localNumeroVia=param;
                                    

                               }
                            

                        /**
                        * field for Pais
                        */

                        
                                    protected Campo localPais ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPaisTracker = false ;

                           public boolean isPaisSpecified(){
                               return localPaisTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getPais(){
                               return localPais;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Pais
                               */
                               public void setPais(Campo param){
                            localPaisTracker = true;
                                   
                                            this.localPais=param;
                                    

                               }
                            

                        /**
                        * field for Poblacion
                        */

                        
                                    protected java.lang.String localPoblacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPoblacionTracker = false ;

                           public boolean isPoblacionSpecified(){
                               return localPoblacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPoblacion(){
                               return localPoblacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Poblacion
                               */
                               public void setPoblacion(java.lang.String param){
                            localPoblacionTracker = true;
                                   
                                            this.localPoblacion=param;
                                    

                               }
                            

                        /**
                        * field for TipoIdentificador
                        */

                        
                                    protected java.lang.String localTipoIdentificador ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTipoIdentificadorTracker = false ;

                           public boolean isTipoIdentificadorSpecified(){
                               return localTipoIdentificadorTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTipoIdentificador(){
                               return localTipoIdentificador;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TipoIdentificador
                               */
                               public void setTipoIdentificador(java.lang.String param){
                            localTipoIdentificadorTracker = true;
                                   
                                            this.localTipoIdentificador=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":LicitadorBean",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "LicitadorBean",
                           xmlWriter);
                   }

               
                   }
                if (localNUTSTracker){
                                    if (localNUTS==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "NUTS", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localNUTS.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","NUTS"),
                                        xmlWriter);
                                    }
                                } if (localAutorizaEnvioComunicacionesElectTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "autorizaEnvioComunicacionesElect", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("autorizaEnvioComunicacionesElect cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAutorizaEnvioComunicacionesElect));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalleTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "calle", xmlWriter);
                             

                                          if (localCalle==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCalle);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCpTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "cp", xmlWriter);
                             

                                          if (localCp==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCp);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmailTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "email", xmlWriter);
                             

                                          if (localEmail==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmail);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFechaAdjudicacionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "fechaAdjudicacion", xmlWriter);
                             

                                          if (localFechaAdjudicacion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaAdjudicacion));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFechaFinFormalizacionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "fechaFinFormalizacion", xmlWriter);
                             

                                          if (localFechaFinFormalizacion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaFinFormalizacion));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIdentificadorTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "identificador", xmlWriter);
                             

                                          if (localIdentificador==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIdentificador);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localImporteConImpuestosTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "importeConImpuestos", xmlWriter);
                             

                                          if (localImporteConImpuestos==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localImporteConImpuestos);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localImporteSinImpuestosTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "importeSinImpuestos", xmlWriter);
                             

                                          if (localImporteSinImpuestos==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localImporteSinImpuestos);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localJustificacionDescripcionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "justificacionDescripcion", xmlWriter);
                             

                                          if (localJustificacionDescripcion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localJustificacionDescripcion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localJustificacionProcesoTracker){
                                    if (localJustificacionProceso==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "justificacionProceso", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localJustificacionProceso.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","justificacionProceso"),
                                        xmlWriter);
                                    }
                                } if (localMotivacionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "motivacion", xmlWriter);
                             

                                          if (localMotivacion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMotivacion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNombreTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "nombre", xmlWriter);
                             

                                          if (localNombre==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNombre);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNumeroViaTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "numeroVia", xmlWriter);
                             

                                          if (localNumeroVia==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumeroVia);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPaisTracker){
                                    if (localPais==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "pais", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localPais.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","pais"),
                                        xmlWriter);
                                    }
                                } if (localPoblacionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "poblacion", xmlWriter);
                             

                                          if (localPoblacion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPoblacion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTipoIdentificadorTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "tipoIdentificador", xmlWriter);
                             

                                          if (localTipoIdentificador==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTipoIdentificador);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localNUTSTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "NUTS"));
                            
                            
                                    elementList.add(localNUTS==null?null:
                                    localNUTS);
                                } if (localAutorizaEnvioComunicacionesElectTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "autorizaEnvioComunicacionesElect"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAutorizaEnvioComunicacionesElect));
                            } if (localCalleTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "calle"));
                                 
                                         elementList.add(localCalle==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalle));
                                    } if (localCpTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "cp"));
                                 
                                         elementList.add(localCp==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCp));
                                    } if (localEmailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "email"));
                                 
                                         elementList.add(localEmail==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmail));
                                    } if (localFechaAdjudicacionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "fechaAdjudicacion"));
                                 
                                         elementList.add(localFechaAdjudicacion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaAdjudicacion));
                                    } if (localFechaFinFormalizacionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "fechaFinFormalizacion"));
                                 
                                         elementList.add(localFechaFinFormalizacion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaFinFormalizacion));
                                    } if (localIdentificadorTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "identificador"));
                                 
                                         elementList.add(localIdentificador==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdentificador));
                                    } if (localImporteConImpuestosTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "importeConImpuestos"));
                                 
                                         elementList.add(localImporteConImpuestos==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImporteConImpuestos));
                                    } if (localImporteSinImpuestosTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "importeSinImpuestos"));
                                 
                                         elementList.add(localImporteSinImpuestos==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImporteSinImpuestos));
                                    } if (localJustificacionDescripcionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "justificacionDescripcion"));
                                 
                                         elementList.add(localJustificacionDescripcion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localJustificacionDescripcion));
                                    } if (localJustificacionProcesoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "justificacionProceso"));
                            
                            
                                    elementList.add(localJustificacionProceso==null?null:
                                    localJustificacionProceso);
                                } if (localMotivacionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "motivacion"));
                                 
                                         elementList.add(localMotivacion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMotivacion));
                                    } if (localNombreTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "nombre"));
                                 
                                         elementList.add(localNombre==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNombre));
                                    } if (localNumeroViaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "numeroVia"));
                                 
                                         elementList.add(localNumeroVia==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumeroVia));
                                    } if (localPaisTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "pais"));
                            
                            
                                    elementList.add(localPais==null?null:
                                    localPais);
                                } if (localPoblacionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "poblacion"));
                                 
                                         elementList.add(localPoblacion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPoblacion));
                                    } if (localTipoIdentificadorTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "tipoIdentificador"));
                                 
                                         elementList.add(localTipoIdentificador==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTipoIdentificador));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static LicitadorBean parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            LicitadorBean object =
                new LicitadorBean();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"LicitadorBean".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (LicitadorBean)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","NUTS").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setNUTS(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setNUTS(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","autorizaEnvioComunicacionesElect").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"autorizaEnvioComunicacionesElect" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAutorizaEnvioComunicacionesElect(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","calle").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalle(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","cp").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCp(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","email").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","fechaAdjudicacion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFechaAdjudicacion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","fechaFinFormalizacion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFechaFinFormalizacion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","identificador").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIdentificador(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","importeConImpuestos").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImporteConImpuestos(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","importeSinImpuestos").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImporteSinImpuestos(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","justificacionDescripcion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setJustificacionDescripcion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","justificacionProceso").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setJustificacionProceso(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setJustificacionProceso(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","motivacion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMotivacion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","nombre").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNombre(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","numeroVia").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumeroVia(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","pais").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setPais(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setPais(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","poblacion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPoblacion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoIdentificador").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTipoIdentificador(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Lotes
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = Lotes
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for DetallePosibilidadAdjudicacion
                        */

                        
                                    protected java.lang.String localDetallePosibilidadAdjudicacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDetallePosibilidadAdjudicacionTracker = false ;

                           public boolean isDetallePosibilidadAdjudicacionSpecified(){
                               return localDetallePosibilidadAdjudicacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDetallePosibilidadAdjudicacion(){
                               return localDetallePosibilidadAdjudicacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DetallePosibilidadAdjudicacion
                               */
                               public void setDetallePosibilidadAdjudicacion(java.lang.String param){
                            localDetallePosibilidadAdjudicacionTracker = true;
                                   
                                            this.localDetallePosibilidadAdjudicacion=param;
                                    

                               }
                            

                        /**
                        * field for Lotes
                        * This was an Array!
                        */

                        
                                    protected Lote[] localLotes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLotesTracker = false ;

                           public boolean isLotesSpecified(){
                               return localLotesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Lote[]
                           */
                           public  Lote[] getLotes(){
                               return localLotes;
                           }

                           
                        


                               
                              /**
                               * validate the array for Lotes
                               */
                              protected void validateLotes(Lote[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Lotes
                              */
                              public void setLotes(Lote[] param){
                              
                                   validateLotes(param);

                               localLotesTracker = true;
                                      
                                      this.localLotes=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Lote
                             */
                             public void addLotes(Lote param){
                                   if (localLotes == null){
                                   localLotes = new Lote[]{};
                                   }

                            
                                 //update the setting tracker
                                localLotesTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localLotes);
                               list.add(param);
                               this.localLotes =
                             (Lote[])list.toArray(
                            new Lote[list.size()]);

                             }
                             

                        /**
                        * field for NumeroMaximoAdjudicacion
                        */

                        
                                    protected int localNumeroMaximoAdjudicacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumeroMaximoAdjudicacionTracker = false ;

                           public boolean isNumeroMaximoAdjudicacionSpecified(){
                               return localNumeroMaximoAdjudicacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return int
                           */
                           public  int getNumeroMaximoAdjudicacion(){
                               return localNumeroMaximoAdjudicacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NumeroMaximoAdjudicacion
                               */
                               public void setNumeroMaximoAdjudicacion(int param){
                            localNumeroMaximoAdjudicacionTracker = true;
                                   
                                            this.localNumeroMaximoAdjudicacion=param;
                                    

                               }
                            

                        /**
                        * field for NumeroMaximoPresentacion
                        */

                        
                                    protected int localNumeroMaximoPresentacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumeroMaximoPresentacionTracker = false ;

                           public boolean isNumeroMaximoPresentacionSpecified(){
                               return localNumeroMaximoPresentacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return int
                           */
                           public  int getNumeroMaximoPresentacion(){
                               return localNumeroMaximoPresentacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NumeroMaximoPresentacion
                               */
                               public void setNumeroMaximoPresentacion(int param){
                            localNumeroMaximoPresentacionTracker = true;
                                   
                                            this.localNumeroMaximoPresentacion=param;
                                    

                               }
                            

                        /**
                        * field for SeDebeOfertar
                        */

                        
                                    protected Campo localSeDebeOfertar ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSeDebeOfertarTracker = false ;

                           public boolean isSeDebeOfertarSpecified(){
                               return localSeDebeOfertarTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getSeDebeOfertar(){
                               return localSeDebeOfertar;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SeDebeOfertar
                               */
                               public void setSeDebeOfertar(Campo param){
                            localSeDebeOfertarTracker = true;
                                   
                                            this.localSeDebeOfertar=param;
                                    

                               }
                            

                        /**
                        * field for TieneLotes
                        */

                        
                                    protected boolean localTieneLotes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTieneLotesTracker = false ;

                           public boolean isTieneLotesSpecified(){
                               return localTieneLotesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getTieneLotes(){
                               return localTieneLotes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TieneLotes
                               */
                               public void setTieneLotes(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localTieneLotesTracker =
                                       true;
                                   
                                            this.localTieneLotes=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":Lotes",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "Lotes",
                           xmlWriter);
                   }

               
                   }
                if (localDetallePosibilidadAdjudicacionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "detallePosibilidadAdjudicacion", xmlWriter);
                             

                                          if (localDetallePosibilidadAdjudicacion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDetallePosibilidadAdjudicacion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLotesTracker){
                                       if (localLotes!=null){
                                            for (int i = 0;i < localLotes.length;i++){
                                                if (localLotes[i] != null){
                                                 localLotes[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","lotes"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "lotes", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "lotes", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localNumeroMaximoAdjudicacionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "numeroMaximoAdjudicacion", xmlWriter);
                             
                                               if (localNumeroMaximoAdjudicacion==java.lang.Integer.MIN_VALUE) {
                                           
                                                         writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumeroMaximoAdjudicacion));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNumeroMaximoPresentacionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "numeroMaximoPresentacion", xmlWriter);
                             
                                               if (localNumeroMaximoPresentacion==java.lang.Integer.MIN_VALUE) {
                                           
                                                         writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumeroMaximoPresentacion));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSeDebeOfertarTracker){
                                    if (localSeDebeOfertar==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "seDebeOfertar", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localSeDebeOfertar.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","seDebeOfertar"),
                                        xmlWriter);
                                    }
                                } if (localTieneLotesTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "tieneLotes", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("tieneLotes cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTieneLotes));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localDetallePosibilidadAdjudicacionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "detallePosibilidadAdjudicacion"));
                                 
                                         elementList.add(localDetallePosibilidadAdjudicacion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDetallePosibilidadAdjudicacion));
                                    } if (localLotesTracker){
                             if (localLotes!=null) {
                                 for (int i = 0;i < localLotes.length;i++){

                                    if (localLotes[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "lotes"));
                                         elementList.add(localLotes[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "lotes"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "lotes"));
                                        elementList.add(localLotes);
                                    
                             }

                        } if (localNumeroMaximoAdjudicacionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "numeroMaximoAdjudicacion"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumeroMaximoAdjudicacion));
                            } if (localNumeroMaximoPresentacionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "numeroMaximoPresentacion"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumeroMaximoPresentacion));
                            } if (localSeDebeOfertarTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "seDebeOfertar"));
                            
                            
                                    elementList.add(localSeDebeOfertar==null?null:
                                    localSeDebeOfertar);
                                } if (localTieneLotesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "tieneLotes"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTieneLotes));
                            }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Lotes parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Lotes object =
                new Lotes();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"Lotes".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Lotes)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list2 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","detallePosibilidadAdjudicacion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDetallePosibilidadAdjudicacion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","lotes").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list2.add(null);
                                                              reader.next();
                                                          } else {
                                                        list2.add(Lote.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone2 = false;
                                                        while(!loopDone2){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone2 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","lotes").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list2.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list2.add(Lote.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone2 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setLotes((Lote[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Lote.class,
                                                                list2));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","numeroMaximoAdjudicacion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumeroMaximoAdjudicacion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
                                            
                                       } else {
                                           
                                           
                                                   object.setNumeroMaximoAdjudicacion(java.lang.Integer.MIN_VALUE);
                                               
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setNumeroMaximoAdjudicacion(java.lang.Integer.MIN_VALUE);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","numeroMaximoPresentacion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumeroMaximoPresentacion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
                                            
                                       } else {
                                           
                                           
                                                   object.setNumeroMaximoPresentacion(java.lang.Integer.MIN_VALUE);
                                               
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setNumeroMaximoPresentacion(java.lang.Integer.MIN_VALUE);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","seDebeOfertar").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setSeDebeOfertar(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setSeDebeOfertar(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tieneLotes").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"tieneLotes" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTieneLotes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class EventoAperturaBean
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = EventoAperturaBean
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for Calle
                        */

                        
                                    protected java.lang.String localCalle ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalleTracker = false ;

                           public boolean isCalleSpecified(){
                               return localCalleTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCalle(){
                               return localCalle;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calle
                               */
                               public void setCalle(java.lang.String param){
                            localCalleTracker = true;
                                   
                                            this.localCalle=param;
                                    

                               }
                            

                        /**
                        * field for Cp
                        */

                        
                                    protected java.lang.String localCp ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCpTracker = false ;

                           public boolean isCpSpecified(){
                               return localCpTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCp(){
                               return localCp;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cp
                               */
                               public void setCp(java.lang.String param){
                            localCpTracker = true;
                                   
                                            this.localCp=param;
                                    

                               }
                            

                        /**
                        * field for Descripcion
                        */

                        
                                    protected java.lang.String localDescripcion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescripcionTracker = false ;

                           public boolean isDescripcionSpecified(){
                               return localDescripcionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDescripcion(){
                               return localDescripcion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Descripcion
                               */
                               public void setDescripcion(java.lang.String param){
                            localDescripcionTracker = true;
                                   
                                            this.localDescripcion=param;
                                    

                               }
                            

                        /**
                        * field for FechaApertura
                        */

                        
                                    protected java.util.Calendar localFechaApertura ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFechaAperturaTracker = false ;

                           public boolean isFechaAperturaSpecified(){
                               return localFechaAperturaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getFechaApertura(){
                               return localFechaApertura;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FechaApertura
                               */
                               public void setFechaApertura(java.util.Calendar param){
                            localFechaAperturaTracker = true;
                                   
                                            this.localFechaApertura=param;
                                    

                               }
                            

                        /**
                        * field for IdPais
                        */

                        
                                    protected java.lang.String localIdPais ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdPaisTracker = false ;

                           public boolean isIdPaisSpecified(){
                               return localIdPaisTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIdPais(){
                               return localIdPais;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IdPais
                               */
                               public void setIdPais(java.lang.String param){
                            localIdPaisTracker = true;
                                   
                                            this.localIdPais=param;
                                    

                               }
                            

                        /**
                        * field for Localidad
                        */

                        
                                    protected java.lang.String localLocalidad ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLocalidadTracker = false ;

                           public boolean isLocalidadSpecified(){
                               return localLocalidadTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLocalidad(){
                               return localLocalidad;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Localidad
                               */
                               public void setLocalidad(java.lang.String param){
                            localLocalidadTracker = true;
                                   
                                            this.localLocalidad=param;
                                    

                               }
                            

                        /**
                        * field for Lugar
                        */

                        
                                    protected java.lang.String localLugar ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLugarTracker = false ;

                           public boolean isLugarSpecified(){
                               return localLugarTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLugar(){
                               return localLugar;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Lugar
                               */
                               public void setLugar(java.lang.String param){
                            localLugarTracker = true;
                                   
                                            this.localLugar=param;
                                    

                               }
                            

                        /**
                        * field for Pais
                        */

                        
                                    protected java.lang.String localPais ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPaisTracker = false ;

                           public boolean isPaisSpecified(){
                               return localPaisTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPais(){
                               return localPais;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Pais
                               */
                               public void setPais(java.lang.String param){
                            localPaisTracker = true;
                                   
                                            this.localPais=param;
                                    

                               }
                            

                        /**
                        * field for Poblacion
                        */

                        
                                    protected java.lang.String localPoblacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPoblacionTracker = false ;

                           public boolean isPoblacionSpecified(){
                               return localPoblacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPoblacion(){
                               return localPoblacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Poblacion
                               */
                               public void setPoblacion(java.lang.String param){
                            localPoblacionTracker = true;
                                   
                                            this.localPoblacion=param;
                                    

                               }
                            

                        /**
                        * field for TipoEvento
                        */

                        
                                    protected Campo localTipoEvento ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTipoEventoTracker = false ;

                           public boolean isTipoEventoSpecified(){
                               return localTipoEventoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getTipoEvento(){
                               return localTipoEvento;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TipoEvento
                               */
                               public void setTipoEvento(Campo param){
                            localTipoEventoTracker = true;
                                   
                                            this.localTipoEvento=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":EventoAperturaBean",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "EventoAperturaBean",
                           xmlWriter);
                   }

               
                   }
                if (localCalleTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "calle", xmlWriter);
                             

                                          if (localCalle==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCalle);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCpTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "cp", xmlWriter);
                             

                                          if (localCp==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCp);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDescripcionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "descripcion", xmlWriter);
                             

                                          if (localDescripcion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDescripcion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFechaAperturaTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "fechaApertura", xmlWriter);
                             

                                          if (localFechaApertura==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaApertura));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIdPaisTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "idPais", xmlWriter);
                             

                                          if (localIdPais==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIdPais);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLocalidadTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "localidad", xmlWriter);
                             

                                          if (localLocalidad==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLocalidad);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLugarTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "lugar", xmlWriter);
                             

                                          if (localLugar==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLugar);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPaisTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "pais", xmlWriter);
                             

                                          if (localPais==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPais);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPoblacionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "poblacion", xmlWriter);
                             

                                          if (localPoblacion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPoblacion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTipoEventoTracker){
                                    if (localTipoEvento==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "tipoEvento", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localTipoEvento.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoEvento"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCalleTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "calle"));
                                 
                                         elementList.add(localCalle==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalle));
                                    } if (localCpTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "cp"));
                                 
                                         elementList.add(localCp==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCp));
                                    } if (localDescripcionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "descripcion"));
                                 
                                         elementList.add(localDescripcion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion));
                                    } if (localFechaAperturaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "fechaApertura"));
                                 
                                         elementList.add(localFechaApertura==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaApertura));
                                    } if (localIdPaisTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "idPais"));
                                 
                                         elementList.add(localIdPais==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdPais));
                                    } if (localLocalidadTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "localidad"));
                                 
                                         elementList.add(localLocalidad==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLocalidad));
                                    } if (localLugarTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "lugar"));
                                 
                                         elementList.add(localLugar==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLugar));
                                    } if (localPaisTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "pais"));
                                 
                                         elementList.add(localPais==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPais));
                                    } if (localPoblacionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "poblacion"));
                                 
                                         elementList.add(localPoblacion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPoblacion));
                                    } if (localTipoEventoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "tipoEvento"));
                            
                            
                                    elementList.add(localTipoEvento==null?null:
                                    localTipoEvento);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static EventoAperturaBean parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            EventoAperturaBean object =
                new EventoAperturaBean();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"EventoAperturaBean".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (EventoAperturaBean)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","calle").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalle(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","cp").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCp(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDescripcion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","fechaApertura").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFechaApertura(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","idPais").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIdPais(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","localidad").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLocalidad(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","lugar").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLugar(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","pais").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPais(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","poblacion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPoblacion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoEvento").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setTipoEvento(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setTipoEvento(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Garantia
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = Garantia
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for AmountRate
                        */

                        
                                    protected java.lang.String localAmountRate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAmountRateTracker = false ;

                           public boolean isAmountRateSpecified(){
                               return localAmountRateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAmountRate(){
                               return localAmountRate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AmountRate
                               */
                               public void setAmountRate(java.lang.String param){
                            localAmountRateTracker = true;
                                   
                                            this.localAmountRate=param;
                                    

                               }
                            

                        /**
                        * field for ConstitutionPeriod
                        */

                        
                                    protected java.util.Calendar localConstitutionPeriod ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConstitutionPeriodTracker = false ;

                           public boolean isConstitutionPeriodSpecified(){
                               return localConstitutionPeriodTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getConstitutionPeriod(){
                               return localConstitutionPeriod;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConstitutionPeriod
                               */
                               public void setConstitutionPeriod(java.util.Calendar param){
                            localConstitutionPeriodTracker = true;
                                   
                                            this.localConstitutionPeriod=param;
                                    

                               }
                            

                        /**
                        * field for Descripcion
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localDescripcion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescripcionTracker = false ;

                           public boolean isDescripcionSpecified(){
                               return localDescripcionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getDescripcion(){
                               return localDescripcion;
                           }

                           
                        


                               
                              /**
                               * validate the array for Descripcion
                               */
                              protected void validateDescripcion(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Descripcion
                              */
                              public void setDescripcion(java.lang.String[] param){
                              
                                   validateDescripcion(param);

                               localDescripcionTracker = true;
                                      
                                      this.localDescripcion=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addDescripcion(java.lang.String param){
                                   if (localDescripcion == null){
                                   localDescripcion = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localDescripcionTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDescripcion);
                               list.add(param);
                               this.localDescripcion =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for ImporteGarantia
                        */

                        
                                    protected java.lang.String localImporteGarantia ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImporteGarantiaTracker = false ;

                           public boolean isImporteGarantiaSpecified(){
                               return localImporteGarantiaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getImporteGarantia(){
                               return localImporteGarantia;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ImporteGarantia
                               */
                               public void setImporteGarantia(java.lang.String param){
                            localImporteGarantiaTracker = true;
                                   
                                            this.localImporteGarantia=param;
                                    

                               }
                            

                        /**
                        * field for PeriodoGarantia
                        */

                        
                                    protected java.lang.String localPeriodoGarantia ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPeriodoGarantiaTracker = false ;

                           public boolean isPeriodoGarantiaSpecified(){
                               return localPeriodoGarantiaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPeriodoGarantia(){
                               return localPeriodoGarantia;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PeriodoGarantia
                               */
                               public void setPeriodoGarantia(java.lang.String param){
                            localPeriodoGarantiaTracker = true;
                                   
                                            this.localPeriodoGarantia=param;
                                    

                               }
                            

                        /**
                        * field for TipoGarantia
                        */

                        
                                    protected Campo localTipoGarantia ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTipoGarantiaTracker = false ;

                           public boolean isTipoGarantiaSpecified(){
                               return localTipoGarantiaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getTipoGarantia(){
                               return localTipoGarantia;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TipoGarantia
                               */
                               public void setTipoGarantia(Campo param){
                            localTipoGarantiaTracker = true;
                                   
                                            this.localTipoGarantia=param;
                                    

                               }
                            

                        /**
                        * field for TipoPeriodo
                        */

                        
                                    protected Campo localTipoPeriodo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTipoPeriodoTracker = false ;

                           public boolean isTipoPeriodoSpecified(){
                               return localTipoPeriodoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getTipoPeriodo(){
                               return localTipoPeriodo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TipoPeriodo
                               */
                               public void setTipoPeriodo(Campo param){
                            localTipoPeriodoTracker = true;
                                   
                                            this.localTipoPeriodo=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":Garantia",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "Garantia",
                           xmlWriter);
                   }

               
                   }
                if (localAmountRateTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "amountRate", xmlWriter);
                             

                                          if (localAmountRate==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAmountRate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConstitutionPeriodTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "constitutionPeriod", xmlWriter);
                             

                                          if (localConstitutionPeriod==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localConstitutionPeriod));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDescripcionTracker){
                             if (localDescripcion!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localDescripcion.length;i++){
                                        
                                            if (localDescripcion[i] != null){
                                        
                                                writeStartElement(null, namespace, "descripcion", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "descripcion", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "descripcion", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localImporteGarantiaTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "importeGarantia", xmlWriter);
                             

                                          if (localImporteGarantia==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localImporteGarantia);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPeriodoGarantiaTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "periodoGarantia", xmlWriter);
                             

                                          if (localPeriodoGarantia==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPeriodoGarantia);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTipoGarantiaTracker){
                                    if (localTipoGarantia==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "tipoGarantia", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localTipoGarantia.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoGarantia"),
                                        xmlWriter);
                                    }
                                } if (localTipoPeriodoTracker){
                                    if (localTipoPeriodo==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "tipoPeriodo", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localTipoPeriodo.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoPeriodo"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAmountRateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "amountRate"));
                                 
                                         elementList.add(localAmountRate==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmountRate));
                                    } if (localConstitutionPeriodTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "constitutionPeriod"));
                                 
                                         elementList.add(localConstitutionPeriod==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localConstitutionPeriod));
                                    } if (localDescripcionTracker){
                            if (localDescripcion!=null){
                                  for (int i = 0;i < localDescripcion.length;i++){
                                      
                                         if (localDescripcion[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descripcion"));
                                    elementList.add(null);
                                
                            }

                        } if (localImporteGarantiaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "importeGarantia"));
                                 
                                         elementList.add(localImporteGarantia==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImporteGarantia));
                                    } if (localPeriodoGarantiaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "periodoGarantia"));
                                 
                                         elementList.add(localPeriodoGarantia==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPeriodoGarantia));
                                    } if (localTipoGarantiaTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "tipoGarantia"));
                            
                            
                                    elementList.add(localTipoGarantia==null?null:
                                    localTipoGarantia);
                                } if (localTipoPeriodoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "tipoPeriodo"));
                            
                            
                                    elementList.add(localTipoPeriodo==null?null:
                                    localTipoPeriodo);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Garantia parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Garantia object =
                new Garantia();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"Garantia".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Garantia)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list3 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","amountRate").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAmountRate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","constitutionPeriod").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConstitutionPeriod(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list3.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list3.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone3 = false;
                                            while(!loopDone3){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone3 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list3.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list3.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone3 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setDescripcion((java.lang.String[])
                                                        list3.toArray(new java.lang.String[list3.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","importeGarantia").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImporteGarantia(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","periodoGarantia").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPeriodoGarantia(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoGarantia").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setTipoGarantia(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setTipoGarantia(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoPeriodo").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setTipoPeriodo(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setTipoPeriodo(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class EspacioVirtualLicitacionBean extends AnuncioBean
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = EspacioVirtualLicitacionBean
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for ApliPesu
                        * This was an Array!
                        */

                        
                                    protected AplicacionPresupuestaria[] localApliPesu ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApliPesuTracker = false ;

                           public boolean isApliPesuSpecified(){
                               return localApliPesuTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return AplicacionPresupuestaria[]
                           */
                           public  AplicacionPresupuestaria[] getApliPesu(){
                               return localApliPesu;
                           }

                           
                        


                               
                              /**
                               * validate the array for ApliPesu
                               */
                              protected void validateApliPesu(AplicacionPresupuestaria[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param ApliPesu
                              */
                              public void setApliPesu(AplicacionPresupuestaria[] param){
                              
                                   validateApliPesu(param);

                               localApliPesuTracker = true;
                                      
                                      this.localApliPesu=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param AplicacionPresupuestaria
                             */
                             public void addApliPesu(AplicacionPresupuestaria param){
                                   if (localApliPesu == null){
                                   localApliPesu = new AplicacionPresupuestaria[]{};
                                   }

                            
                                 //update the setting tracker
                                localApliPesuTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localApliPesu);
                               list.add(param);
                               this.localApliPesu =
                             (AplicacionPresupuestaria[])list.toArray(
                            new AplicacionPresupuestaria[list.size()]);

                             }
                             

                        /**
                        * field for Clasificacion
                        */

                        
                                    protected Clasificacion localClasificacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClasificacionTracker = false ;

                           public boolean isClasificacionSpecified(){
                               return localClasificacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Clasificacion
                           */
                           public  Clasificacion getClasificacion(){
                               return localClasificacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Clasificacion
                               */
                               public void setClasificacion(Clasificacion param){
                            localClasificacionTracker = true;
                                   
                                            this.localClasificacion=param;
                                    

                               }
                            

                        /**
                        * field for CondLicit
                        */

                        
                                    protected CondicionesLicitadores localCondLicit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCondLicitTracker = false ;

                           public boolean isCondLicitSpecified(){
                               return localCondLicitTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return CondicionesLicitadores
                           */
                           public  CondicionesLicitadores getCondLicit(){
                               return localCondLicit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CondLicit
                               */
                               public void setCondLicit(CondicionesLicitadores param){
                            localCondLicitTracker = true;
                                   
                                            this.localCondLicit=param;
                                    

                               }
                            

                        /**
                        * field for ContratoSujetoRegArmon
                        */

                        
                                    protected Campo localContratoSujetoRegArmon ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localContratoSujetoRegArmonTracker = false ;

                           public boolean isContratoSujetoRegArmonSpecified(){
                               return localContratoSujetoRegArmonTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getContratoSujetoRegArmon(){
                               return localContratoSujetoRegArmon;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ContratoSujetoRegArmon
                               */
                               public void setContratoSujetoRegArmon(Campo param){
                            localContratoSujetoRegArmonTracker = true;
                                   
                                            this.localContratoSujetoRegArmon=param;
                                    

                               }
                            

                        /**
                        * field for Cpv
                        * This was an Array!
                        */

                        
                                    protected Campo[] localCpv ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCpvTracker = false ;

                           public boolean isCpvSpecified(){
                               return localCpvTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo[]
                           */
                           public  Campo[] getCpv(){
                               return localCpv;
                           }

                           
                        


                               
                              /**
                               * validate the array for Cpv
                               */
                              protected void validateCpv(Campo[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Cpv
                              */
                              public void setCpv(Campo[] param){
                              
                                   validateCpv(param);

                               localCpvTracker = true;
                                      
                                      this.localCpv=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Campo
                             */
                             public void addCpv(Campo param){
                                   if (localCpv == null){
                                   localCpv = new Campo[]{};
                                   }

                            
                                 //update the setting tracker
                                localCpvTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localCpv);
                               list.add(param);
                               this.localCpv =
                             (Campo[])list.toArray(
                            new Campo[list.size()]);

                             }
                             

                        /**
                        * field for Criterios
                        */

                        
                                    protected CriteriosAdjudicacion localCriterios ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCriteriosTracker = false ;

                           public boolean isCriteriosSpecified(){
                               return localCriteriosTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return CriteriosAdjudicacion
                           */
                           public  CriteriosAdjudicacion getCriterios(){
                               return localCriterios;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Criterios
                               */
                               public void setCriterios(CriteriosAdjudicacion param){
                            localCriteriosTracker = true;
                                   
                                            this.localCriterios=param;
                                    

                               }
                            

                        /**
                        * field for Diarios
                        */

                        
                                    protected PublicacionesOficialesBean localDiarios ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDiariosTracker = false ;

                           public boolean isDiariosSpecified(){
                               return localDiariosTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return PublicacionesOficialesBean
                           */
                           public  PublicacionesOficialesBean getDiarios(){
                               return localDiarios;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Diarios
                               */
                               public void setDiarios(PublicacionesOficialesBean param){
                            localDiariosTracker = true;
                                   
                                            this.localDiarios=param;
                                    

                               }
                            

                        /**
                        * field for DocumentoPCAP
                        */

                        
                                    protected Documento localDocumentoPCAP ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDocumentoPCAPTracker = false ;

                           public boolean isDocumentoPCAPSpecified(){
                               return localDocumentoPCAPTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Documento
                           */
                           public  Documento getDocumentoPCAP(){
                               return localDocumentoPCAP;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DocumentoPCAP
                               */
                               public void setDocumentoPCAP(Documento param){
                            localDocumentoPCAPTracker = true;
                                   
                                            this.localDocumentoPCAP=param;
                                    

                               }
                            

                        /**
                        * field for DocumentoPPT
                        */

                        
                                    protected Documento localDocumentoPPT ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDocumentoPPTTracker = false ;

                           public boolean isDocumentoPPTSpecified(){
                               return localDocumentoPPTTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Documento
                           */
                           public  Documento getDocumentoPPT(){
                               return localDocumentoPPT;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DocumentoPPT
                               */
                               public void setDocumentoPPT(Documento param){
                            localDocumentoPPTTracker = true;
                                   
                                            this.localDocumentoPPT=param;
                                    

                               }
                            

                        /**
                        * field for DuracionContrato
                        */

                        
                                    protected DuracionContratoBean localDuracionContrato ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDuracionContratoTracker = false ;

                           public boolean isDuracionContratoSpecified(){
                               return localDuracionContratoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return DuracionContratoBean
                           */
                           public  DuracionContratoBean getDuracionContrato(){
                               return localDuracionContrato;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DuracionContrato
                               */
                               public void setDuracionContrato(DuracionContratoBean param){
                            localDuracionContratoTracker = true;
                                   
                                            this.localDuracionContrato=param;
                                    

                               }
                            

                        /**
                        * field for FechaPresentacionSolcitudesParticipacion
                        */

                        
                                    protected java.util.Calendar localFechaPresentacionSolcitudesParticipacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFechaPresentacionSolcitudesParticipacionTracker = false ;

                           public boolean isFechaPresentacionSolcitudesParticipacionSpecified(){
                               return localFechaPresentacionSolcitudesParticipacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getFechaPresentacionSolcitudesParticipacion(){
                               return localFechaPresentacionSolcitudesParticipacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FechaPresentacionSolcitudesParticipacion
                               */
                               public void setFechaPresentacionSolcitudesParticipacion(java.util.Calendar param){
                            localFechaPresentacionSolcitudesParticipacionTracker = true;
                                   
                                            this.localFechaPresentacionSolcitudesParticipacion=param;
                                    

                               }
                            

                        /**
                        * field for FormulaRevisionPrecios
                        */

                        
                                    protected java.lang.String localFormulaRevisionPrecios ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFormulaRevisionPreciosTracker = false ;

                           public boolean isFormulaRevisionPreciosSpecified(){
                               return localFormulaRevisionPreciosTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFormulaRevisionPrecios(){
                               return localFormulaRevisionPrecios;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FormulaRevisionPrecios
                               */
                               public void setFormulaRevisionPrecios(java.lang.String param){
                            localFormulaRevisionPreciosTracker = true;
                                   
                                            this.localFormulaRevisionPrecios=param;
                                    

                               }
                            

                        /**
                        * field for FundacionPrograma
                        */

                        
                                    protected FundacionPrograma localFundacionPrograma ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFundacionProgramaTracker = false ;

                           public boolean isFundacionProgramaSpecified(){
                               return localFundacionProgramaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return FundacionPrograma
                           */
                           public  FundacionPrograma getFundacionPrograma(){
                               return localFundacionPrograma;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FundacionPrograma
                               */
                               public void setFundacionPrograma(FundacionPrograma param){
                            localFundacionProgramaTracker = true;
                                   
                                            this.localFundacionPrograma=param;
                                    

                               }
                            

                        /**
                        * field for Garantia
                        * This was an Array!
                        */

                        
                                    protected Garantia[] localGarantia ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGarantiaTracker = false ;

                           public boolean isGarantiaSpecified(){
                               return localGarantiaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Garantia[]
                           */
                           public  Garantia[] getGarantia(){
                               return localGarantia;
                           }

                           
                        


                               
                              /**
                               * validate the array for Garantia
                               */
                              protected void validateGarantia(Garantia[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Garantia
                              */
                              public void setGarantia(Garantia[] param){
                              
                                   validateGarantia(param);

                               localGarantiaTracker = true;
                                      
                                      this.localGarantia=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Garantia
                             */
                             public void addGarantia(Garantia param){
                                   if (localGarantia == null){
                                   localGarantia = new Garantia[]{};
                                   }

                            
                                 //update the setting tracker
                                localGarantiaTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localGarantia);
                               list.add(param);
                               this.localGarantia =
                             (Garantia[])list.toArray(
                            new Garantia[list.size()]);

                             }
                             

                        /**
                        * field for Licitadores
                        * This was an Array!
                        */

                        
                                    protected LicitadorBean[] localLicitadores ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLicitadoresTracker = false ;

                           public boolean isLicitadoresSpecified(){
                               return localLicitadoresTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return LicitadorBean[]
                           */
                           public  LicitadorBean[] getLicitadores(){
                               return localLicitadores;
                           }

                           
                        


                               
                              /**
                               * validate the array for Licitadores
                               */
                              protected void validateLicitadores(LicitadorBean[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Licitadores
                              */
                              public void setLicitadores(LicitadorBean[] param){
                              
                                   validateLicitadores(param);

                               localLicitadoresTracker = true;
                                      
                                      this.localLicitadores=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param LicitadorBean
                             */
                             public void addLicitadores(LicitadorBean param){
                                   if (localLicitadores == null){
                                   localLicitadores = new LicitadorBean[]{};
                                   }

                            
                                 //update the setting tracker
                                localLicitadoresTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localLicitadores);
                               list.add(param);
                               this.localLicitadores =
                             (LicitadorBean[])list.toArray(
                            new LicitadorBean[list.size()]);

                             }
                             

                        /**
                        * field for Lotes
                        */

                        
                                    protected Lotes localLotes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLotesTracker = false ;

                           public boolean isLotesSpecified(){
                               return localLotesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Lotes
                           */
                           public  Lotes getLotes(){
                               return localLotes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Lotes
                               */
                               public void setLotes(Lotes param){
                            localLotesTracker = true;
                                   
                                            this.localLotes=param;
                                    

                               }
                            

                        /**
                        * field for LugarEjecucionContrato
                        */

                        
                                    protected Campo localLugarEjecucionContrato ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLugarEjecucionContratoTracker = false ;

                           public boolean isLugarEjecucionContratoSpecified(){
                               return localLugarEjecucionContratoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getLugarEjecucionContrato(){
                               return localLugarEjecucionContrato;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LugarEjecucionContrato
                               */
                               public void setLugarEjecucionContrato(Campo param){
                            localLugarEjecucionContratoTracker = true;
                                   
                                            this.localLugarEjecucionContrato=param;
                                    

                               }
                            

                        /**
                        * field for Numexp
                        */

                        
                                    protected java.lang.String localNumexp ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumexpTracker = false ;

                           public boolean isNumexpSpecified(){
                               return localNumexpTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumexp(){
                               return localNumexp;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Numexp
                               */
                               public void setNumexp(java.lang.String param){
                            localNumexpTracker = true;
                                   
                                            this.localNumexp=param;
                                    

                               }
                            

                        /**
                        * field for ObjetoContrato
                        */

                        
                                    protected java.lang.String localObjetoContrato ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localObjetoContratoTracker = false ;

                           public boolean isObjetoContratoSpecified(){
                               return localObjetoContratoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getObjetoContrato(){
                               return localObjetoContrato;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ObjetoContrato
                               */
                               public void setObjetoContrato(java.lang.String param){
                            localObjetoContratoTracker = true;
                                   
                                            this.localObjetoContrato=param;
                                    

                               }
                            

                        /**
                        * field for OrganoAsistencia
                        */

                        
                                    protected OrganoAsistencia localOrganoAsistencia ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOrganoAsistenciaTracker = false ;

                           public boolean isOrganoAsistenciaSpecified(){
                               return localOrganoAsistenciaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return OrganoAsistencia
                           */
                           public  OrganoAsistencia getOrganoAsistencia(){
                               return localOrganoAsistencia;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OrganoAsistencia
                               */
                               public void setOrganoAsistencia(OrganoAsistencia param){
                            localOrganoAsistenciaTracker = true;
                                   
                                            this.localOrganoAsistencia=param;
                                    

                               }
                            

                        /**
                        * field for OrganoContratacion
                        */

                        
                                    protected java.lang.String localOrganoContratacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOrganoContratacionTracker = false ;

                           public boolean isOrganoContratacionSpecified(){
                               return localOrganoContratacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOrganoContratacion(){
                               return localOrganoContratacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OrganoContratacion
                               */
                               public void setOrganoContratacion(java.lang.String param){
                            localOrganoContratacionTracker = true;
                                   
                                            this.localOrganoContratacion=param;
                                    

                               }
                            

                        /**
                        * field for PersonalContactoContratacion
                        */

                        
                                    protected PersonalContacto localPersonalContactoContratacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPersonalContactoContratacionTracker = false ;

                           public boolean isPersonalContactoContratacionSpecified(){
                               return localPersonalContactoContratacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return PersonalContacto
                           */
                           public  PersonalContacto getPersonalContactoContratacion(){
                               return localPersonalContactoContratacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PersonalContactoContratacion
                               */
                               public void setPersonalContactoContratacion(PersonalContacto param){
                            localPersonalContactoContratacionTracker = true;
                                   
                                            this.localPersonalContactoContratacion=param;
                                    

                               }
                            

                        /**
                        * field for PersonalContactoSecretaria
                        */

                        
                                    protected PersonalContacto localPersonalContactoSecretaria ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPersonalContactoSecretariaTracker = false ;

                           public boolean isPersonalContactoSecretariaSpecified(){
                               return localPersonalContactoSecretariaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return PersonalContacto
                           */
                           public  PersonalContacto getPersonalContactoSecretaria(){
                               return localPersonalContactoSecretaria;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PersonalContactoSecretaria
                               */
                               public void setPersonalContactoSecretaria(PersonalContacto param){
                            localPersonalContactoSecretariaTracker = true;
                                   
                                            this.localPersonalContactoSecretaria=param;
                                    

                               }
                            

                        /**
                        * field for PresentacionOfertas
                        */

                        
                                    protected Periodo localPresentacionOfertas ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPresentacionOfertasTracker = false ;

                           public boolean isPresentacionOfertasSpecified(){
                               return localPresentacionOfertasTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Periodo
                           */
                           public  Periodo getPresentacionOfertas(){
                               return localPresentacionOfertas;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PresentacionOfertas
                               */
                               public void setPresentacionOfertas(Periodo param){
                            localPresentacionOfertasTracker = true;
                                   
                                            this.localPresentacionOfertas=param;
                                    

                               }
                            

                        /**
                        * field for PresupuestoConIva
                        */

                        
                                    protected java.lang.String localPresupuestoConIva ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPresupuestoConIvaTracker = false ;

                           public boolean isPresupuestoConIvaSpecified(){
                               return localPresupuestoConIvaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPresupuestoConIva(){
                               return localPresupuestoConIva;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PresupuestoConIva
                               */
                               public void setPresupuestoConIva(java.lang.String param){
                            localPresupuestoConIvaTracker = true;
                                   
                                            this.localPresupuestoConIva=param;
                                    

                               }
                            

                        /**
                        * field for PresupuestoSinIva
                        */

                        
                                    protected java.lang.String localPresupuestoSinIva ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPresupuestoSinIvaTracker = false ;

                           public boolean isPresupuestoSinIvaSpecified(){
                               return localPresupuestoSinIvaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPresupuestoSinIva(){
                               return localPresupuestoSinIva;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PresupuestoSinIva
                               */
                               public void setPresupuestoSinIva(java.lang.String param){
                            localPresupuestoSinIvaTracker = true;
                                   
                                            this.localPresupuestoSinIva=param;
                                    

                               }
                            

                        /**
                        * field for ProcContratacion
                        */

                        
                                    protected Campo localProcContratacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProcContratacionTracker = false ;

                           public boolean isProcContratacionSpecified(){
                               return localProcContratacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getProcContratacion(){
                               return localProcContratacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProcContratacion
                               */
                               public void setProcContratacion(Campo param){
                            localProcContratacionTracker = true;
                                   
                                            this.localProcContratacion=param;
                                    

                               }
                            

                        /**
                        * field for PublishedByUser
                        */

                        
                                    protected java.lang.String localPublishedByUser ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPublishedByUserTracker = false ;

                           public boolean isPublishedByUserSpecified(){
                               return localPublishedByUserTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPublishedByUser(){
                               return localPublishedByUser;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PublishedByUser
                               */
                               public void setPublishedByUser(java.lang.String param){
                            localPublishedByUserTracker = true;
                                   
                                            this.localPublishedByUser=param;
                                    

                               }
                            

                        /**
                        * field for ReqDecl
                        * This was an Array!
                        */

                        
                                    protected RequisitfiDeclaraciones[] localReqDecl ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReqDeclTracker = false ;

                           public boolean isReqDeclSpecified(){
                               return localReqDeclTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return RequisitfiDeclaraciones[]
                           */
                           public  RequisitfiDeclaraciones[] getReqDecl(){
                               return localReqDecl;
                           }

                           
                        


                               
                              /**
                               * validate the array for ReqDecl
                               */
                              protected void validateReqDecl(RequisitfiDeclaraciones[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param ReqDecl
                              */
                              public void setReqDecl(RequisitfiDeclaraciones[] param){
                              
                                   validateReqDecl(param);

                               localReqDeclTracker = true;
                                      
                                      this.localReqDecl=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param RequisitfiDeclaraciones
                             */
                             public void addReqDecl(RequisitfiDeclaraciones param){
                                   if (localReqDecl == null){
                                   localReqDecl = new RequisitfiDeclaraciones[]{};
                                   }

                            
                                 //update the setting tracker
                                localReqDeclTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localReqDecl);
                               list.add(param);
                               this.localReqDecl =
                             (RequisitfiDeclaraciones[])list.toArray(
                            new RequisitfiDeclaraciones[list.size()]);

                             }
                             

                        /**
                        * field for SobreElect
                        * This was an Array!
                        */

                        
                                    protected SobreElectronico[] localSobreElect ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSobreElectTracker = false ;

                           public boolean isSobreElectSpecified(){
                               return localSobreElectTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return SobreElectronico[]
                           */
                           public  SobreElectronico[] getSobreElect(){
                               return localSobreElect;
                           }

                           
                        


                               
                              /**
                               * validate the array for SobreElect
                               */
                              protected void validateSobreElect(SobreElectronico[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param SobreElect
                              */
                              public void setSobreElect(SobreElectronico[] param){
                              
                                   validateSobreElect(param);

                               localSobreElectTracker = true;
                                      
                                      this.localSobreElect=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param SobreElectronico
                             */
                             public void addSobreElect(SobreElectronico param){
                                   if (localSobreElect == null){
                                   localSobreElect = new SobreElectronico[]{};
                                   }

                            
                                 //update the setting tracker
                                localSobreElectTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localSobreElect);
                               list.add(param);
                               this.localSobreElect =
                             (SobreElectronico[])list.toArray(
                            new SobreElectronico[list.size()]);

                             }
                             

                        /**
                        * field for SolvenciaEconomica
                        * This was an Array!
                        */

                        
                                    protected SolvenciaEconomica[] localSolvenciaEconomica ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSolvenciaEconomicaTracker = false ;

                           public boolean isSolvenciaEconomicaSpecified(){
                               return localSolvenciaEconomicaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return SolvenciaEconomica[]
                           */
                           public  SolvenciaEconomica[] getSolvenciaEconomica(){
                               return localSolvenciaEconomica;
                           }

                           
                        


                               
                              /**
                               * validate the array for SolvenciaEconomica
                               */
                              protected void validateSolvenciaEconomica(SolvenciaEconomica[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param SolvenciaEconomica
                              */
                              public void setSolvenciaEconomica(SolvenciaEconomica[] param){
                              
                                   validateSolvenciaEconomica(param);

                               localSolvenciaEconomicaTracker = true;
                                      
                                      this.localSolvenciaEconomica=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param SolvenciaEconomica
                             */
                             public void addSolvenciaEconomica(SolvenciaEconomica param){
                                   if (localSolvenciaEconomica == null){
                                   localSolvenciaEconomica = new SolvenciaEconomica[]{};
                                   }

                            
                                 //update the setting tracker
                                localSolvenciaEconomicaTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localSolvenciaEconomica);
                               list.add(param);
                               this.localSolvenciaEconomica =
                             (SolvenciaEconomica[])list.toArray(
                            new SolvenciaEconomica[list.size()]);

                             }
                             

                        /**
                        * field for SolvenciaTecn
                        * This was an Array!
                        */

                        
                                    protected SolvenciaTecnica[] localSolvenciaTecn ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSolvenciaTecnTracker = false ;

                           public boolean isSolvenciaTecnSpecified(){
                               return localSolvenciaTecnTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return SolvenciaTecnica[]
                           */
                           public  SolvenciaTecnica[] getSolvenciaTecn(){
                               return localSolvenciaTecn;
                           }

                           
                        


                               
                              /**
                               * validate the array for SolvenciaTecn
                               */
                              protected void validateSolvenciaTecn(SolvenciaTecnica[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param SolvenciaTecn
                              */
                              public void setSolvenciaTecn(SolvenciaTecnica[] param){
                              
                                   validateSolvenciaTecn(param);

                               localSolvenciaTecnTracker = true;
                                      
                                      this.localSolvenciaTecn=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param SolvenciaTecnica
                             */
                             public void addSolvenciaTecn(SolvenciaTecnica param){
                                   if (localSolvenciaTecn == null){
                                   localSolvenciaTecn = new SolvenciaTecnica[]{};
                                   }

                            
                                 //update the setting tracker
                                localSolvenciaTecnTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localSolvenciaTecn);
                               list.add(param);
                               this.localSolvenciaTecn =
                             (SolvenciaTecnica[])list.toArray(
                            new SolvenciaTecnica[list.size()]);

                             }
                             

                        /**
                        * field for SubTipoContrato
                        */

                        
                                    protected Campo localSubTipoContrato ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSubTipoContratoTracker = false ;

                           public boolean isSubTipoContratoSpecified(){
                               return localSubTipoContratoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getSubTipoContrato(){
                               return localSubTipoContrato;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SubTipoContrato
                               */
                               public void setSubTipoContrato(Campo param){
                            localSubTipoContratoTracker = true;
                                   
                                            this.localSubTipoContrato=param;
                                    

                               }
                            

                        /**
                        * field for TipoContrato
                        */

                        
                                    protected Campo localTipoContrato ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTipoContratoTracker = false ;

                           public boolean isTipoContratoSpecified(){
                               return localTipoContratoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getTipoContrato(){
                               return localTipoContrato;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TipoContrato
                               */
                               public void setTipoContrato(Campo param){
                            localTipoContratoTracker = true;
                                   
                                            this.localTipoContrato=param;
                                    

                               }
                            

                        /**
                        * field for TipoPresentacionOferta
                        */

                        
                                    protected Campo localTipoPresentacionOferta ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTipoPresentacionOfertaTracker = false ;

                           public boolean isTipoPresentacionOfertaSpecified(){
                               return localTipoPresentacionOfertaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getTipoPresentacionOferta(){
                               return localTipoPresentacionOferta;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TipoPresentacionOferta
                               */
                               public void setTipoPresentacionOferta(Campo param){
                            localTipoPresentacionOfertaTracker = true;
                                   
                                            this.localTipoPresentacionOferta=param;
                                    

                               }
                            

                        /**
                        * field for TipoTramitacion
                        */

                        
                                    protected Campo localTipoTramitacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTipoTramitacionTracker = false ;

                           public boolean isTipoTramitacionSpecified(){
                               return localTipoTramitacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getTipoTramitacion(){
                               return localTipoTramitacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TipoTramitacion
                               */
                               public void setTipoTramitacion(Campo param){
                            localTipoTramitacionTracker = true;
                                   
                                            this.localTipoTramitacion=param;
                                    

                               }
                            

                        /**
                        * field for TramitacionGasto
                        */

                        
                                    protected Campo localTramitacionGasto ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTramitacionGastoTracker = false ;

                           public boolean isTramitacionGastoSpecified(){
                               return localTramitacionGastoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getTramitacionGasto(){
                               return localTramitacionGasto;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TramitacionGasto
                               */
                               public void setTramitacionGasto(Campo param){
                            localTramitacionGastoTracker = true;
                                   
                                            this.localTramitacionGasto=param;
                                    

                               }
                            

                        /**
                        * field for ValorEstimadoContrato
                        */

                        
                                    protected java.lang.String localValorEstimadoContrato ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localValorEstimadoContratoTracker = false ;

                           public boolean isValorEstimadoContratoSpecified(){
                               return localValorEstimadoContratoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getValorEstimadoContrato(){
                               return localValorEstimadoContrato;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ValorEstimadoContrato
                               */
                               public void setValorEstimadoContrato(java.lang.String param){
                            localValorEstimadoContratoTracker = true;
                                   
                                            this.localValorEstimadoContrato=param;
                                    

                               }
                            

                        /**
                        * field for VarOfert
                        */

                        
                                    protected VariantesOfertas localVarOfert ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localVarOfertTracker = false ;

                           public boolean isVarOfertSpecified(){
                               return localVarOfertTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return VariantesOfertas
                           */
                           public  VariantesOfertas getVarOfert(){
                               return localVarOfert;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VarOfert
                               */
                               public void setVarOfert(VariantesOfertas param){
                            localVarOfertTracker = true;
                                   
                                            this.localVarOfert=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":EspacioVirtualLicitacionBean",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "EspacioVirtualLicitacionBean",
                           xmlWriter);
                   }

                if (localApliPesuTracker){
                                       if (localApliPesu!=null){
                                            for (int i = 0;i < localApliPesu.length;i++){
                                                if (localApliPesu[i] != null){
                                                 localApliPesu[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","apliPesu"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "apliPesu", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "apliPesu", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localClasificacionTracker){
                                    if (localClasificacion==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "clasificacion", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localClasificacion.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","clasificacion"),
                                        xmlWriter);
                                    }
                                } if (localCondLicitTracker){
                                    if (localCondLicit==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "condLicit", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localCondLicit.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","condLicit"),
                                        xmlWriter);
                                    }
                                } if (localContratoSujetoRegArmonTracker){
                                    if (localContratoSujetoRegArmon==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "contratoSujetoRegArmon", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localContratoSujetoRegArmon.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","contratoSujetoRegArmon"),
                                        xmlWriter);
                                    }
                                } if (localCpvTracker){
                                       if (localCpv!=null){
                                            for (int i = 0;i < localCpv.length;i++){
                                                if (localCpv[i] != null){
                                                 localCpv[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","cpv"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "cpv", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "cpv", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localCriteriosTracker){
                                    if (localCriterios==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "criterios", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localCriterios.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","criterios"),
                                        xmlWriter);
                                    }
                                } if (localDiariosTracker){
                                    if (localDiarios==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "diarios", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localDiarios.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","diarios"),
                                        xmlWriter);
                                    }
                                } if (localDocumentoPCAPTracker){
                                    if (localDocumentoPCAP==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "documentoPCAP", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localDocumentoPCAP.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","documentoPCAP"),
                                        xmlWriter);
                                    }
                                } if (localDocumentoPPTTracker){
                                    if (localDocumentoPPT==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "documentoPPT", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localDocumentoPPT.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","documentoPPT"),
                                        xmlWriter);
                                    }
                                } if (localDuracionContratoTracker){
                                    if (localDuracionContrato==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "duracionContrato", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localDuracionContrato.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","duracionContrato"),
                                        xmlWriter);
                                    }
                                } if (localFechaPresentacionSolcitudesParticipacionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "fechaPresentacionSolcitudesParticipacion", xmlWriter);
                             

                                          if (localFechaPresentacionSolcitudesParticipacion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaPresentacionSolcitudesParticipacion));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFormulaRevisionPreciosTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "formulaRevisionPrecios", xmlWriter);
                             

                                          if (localFormulaRevisionPrecios==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFormulaRevisionPrecios);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFundacionProgramaTracker){
                                    if (localFundacionPrograma==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "fundacionPrograma", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localFundacionPrograma.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","fundacionPrograma"),
                                        xmlWriter);
                                    }
                                } if (localGarantiaTracker){
                                       if (localGarantia!=null){
                                            for (int i = 0;i < localGarantia.length;i++){
                                                if (localGarantia[i] != null){
                                                 localGarantia[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","garantia"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "garantia", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "garantia", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localLicitadoresTracker){
                                       if (localLicitadores!=null){
                                            for (int i = 0;i < localLicitadores.length;i++){
                                                if (localLicitadores[i] != null){
                                                 localLicitadores[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","licitadores"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "licitadores", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "licitadores", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localLotesTracker){
                                    if (localLotes==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "lotes", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localLotes.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","lotes"),
                                        xmlWriter);
                                    }
                                } if (localLugarEjecucionContratoTracker){
                                    if (localLugarEjecucionContrato==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "lugarEjecucionContrato", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localLugarEjecucionContrato.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","lugarEjecucionContrato"),
                                        xmlWriter);
                                    }
                                } if (localNumexpTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "numexp", xmlWriter);
                             

                                          if (localNumexp==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumexp);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localObjetoContratoTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "objetoContrato", xmlWriter);
                             

                                          if (localObjetoContrato==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localObjetoContrato);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOrganoAsistenciaTracker){
                                    if (localOrganoAsistencia==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "organoAsistencia", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localOrganoAsistencia.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","organoAsistencia"),
                                        xmlWriter);
                                    }
                                } if (localOrganoContratacionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "organoContratacion", xmlWriter);
                             

                                          if (localOrganoContratacion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOrganoContratacion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPersonalContactoContratacionTracker){
                                    if (localPersonalContactoContratacion==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "personalContactoContratacion", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localPersonalContactoContratacion.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","personalContactoContratacion"),
                                        xmlWriter);
                                    }
                                } if (localPersonalContactoSecretariaTracker){
                                    if (localPersonalContactoSecretaria==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "personalContactoSecretaria", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localPersonalContactoSecretaria.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","personalContactoSecretaria"),
                                        xmlWriter);
                                    }
                                } if (localPresentacionOfertasTracker){
                                    if (localPresentacionOfertas==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "presentacionOfertas", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localPresentacionOfertas.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","presentacionOfertas"),
                                        xmlWriter);
                                    }
                                } if (localPresupuestoConIvaTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "presupuestoConIva", xmlWriter);
                             

                                          if (localPresupuestoConIva==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPresupuestoConIva);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPresupuestoSinIvaTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "presupuestoSinIva", xmlWriter);
                             

                                          if (localPresupuestoSinIva==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPresupuestoSinIva);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProcContratacionTracker){
                                    if (localProcContratacion==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "procContratacion", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localProcContratacion.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","procContratacion"),
                                        xmlWriter);
                                    }
                                } if (localPublishedByUserTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "publishedByUser", xmlWriter);
                             

                                          if (localPublishedByUser==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPublishedByUser);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReqDeclTracker){
                                       if (localReqDecl!=null){
                                            for (int i = 0;i < localReqDecl.length;i++){
                                                if (localReqDecl[i] != null){
                                                 localReqDecl[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","reqDecl"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "reqDecl", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "reqDecl", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localSobreElectTracker){
                                       if (localSobreElect!=null){
                                            for (int i = 0;i < localSobreElect.length;i++){
                                                if (localSobreElect[i] != null){
                                                 localSobreElect[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","sobreElect"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "sobreElect", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "sobreElect", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localSolvenciaEconomicaTracker){
                                       if (localSolvenciaEconomica!=null){
                                            for (int i = 0;i < localSolvenciaEconomica.length;i++){
                                                if (localSolvenciaEconomica[i] != null){
                                                 localSolvenciaEconomica[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","solvenciaEconomica"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "solvenciaEconomica", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "solvenciaEconomica", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localSolvenciaTecnTracker){
                                       if (localSolvenciaTecn!=null){
                                            for (int i = 0;i < localSolvenciaTecn.length;i++){
                                                if (localSolvenciaTecn[i] != null){
                                                 localSolvenciaTecn[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","solvenciaTecn"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "solvenciaTecn", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "solvenciaTecn", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localSubTipoContratoTracker){
                                    if (localSubTipoContrato==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "subTipoContrato", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localSubTipoContrato.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","subTipoContrato"),
                                        xmlWriter);
                                    }
                                } if (localTipoContratoTracker){
                                    if (localTipoContrato==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "tipoContrato", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localTipoContrato.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoContrato"),
                                        xmlWriter);
                                    }
                                } if (localTipoPresentacionOfertaTracker){
                                    if (localTipoPresentacionOferta==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "tipoPresentacionOferta", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localTipoPresentacionOferta.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoPresentacionOferta"),
                                        xmlWriter);
                                    }
                                } if (localTipoTramitacionTracker){
                                    if (localTipoTramitacion==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "tipoTramitacion", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localTipoTramitacion.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoTramitacion"),
                                        xmlWriter);
                                    }
                                } if (localTramitacionGastoTracker){
                                    if (localTramitacionGasto==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "tramitacionGasto", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localTramitacionGasto.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tramitacionGasto"),
                                        xmlWriter);
                                    }
                                } if (localValorEstimadoContratoTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "valorEstimadoContrato", xmlWriter);
                             

                                          if (localValorEstimadoContrato==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localValorEstimadoContrato);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localVarOfertTracker){
                                    if (localVarOfert==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "varOfert", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localVarOfert.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","varOfert"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                    attribList.add(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema-instance","type"));
                    attribList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","EspacioVirtualLicitacionBean"));
                 if (localApliPesuTracker){
                             if (localApliPesu!=null) {
                                 for (int i = 0;i < localApliPesu.length;i++){

                                    if (localApliPesu[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "apliPesu"));
                                         elementList.add(localApliPesu[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "apliPesu"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "apliPesu"));
                                        elementList.add(localApliPesu);
                                    
                             }

                        } if (localClasificacionTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "clasificacion"));
                            
                            
                                    elementList.add(localClasificacion==null?null:
                                    localClasificacion);
                                } if (localCondLicitTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "condLicit"));
                            
                            
                                    elementList.add(localCondLicit==null?null:
                                    localCondLicit);
                                } if (localContratoSujetoRegArmonTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "contratoSujetoRegArmon"));
                            
                            
                                    elementList.add(localContratoSujetoRegArmon==null?null:
                                    localContratoSujetoRegArmon);
                                } if (localCpvTracker){
                             if (localCpv!=null) {
                                 for (int i = 0;i < localCpv.length;i++){

                                    if (localCpv[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "cpv"));
                                         elementList.add(localCpv[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "cpv"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "cpv"));
                                        elementList.add(localCpv);
                                    
                             }

                        } if (localCriteriosTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "criterios"));
                            
                            
                                    elementList.add(localCriterios==null?null:
                                    localCriterios);
                                } if (localDiariosTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "diarios"));
                            
                            
                                    elementList.add(localDiarios==null?null:
                                    localDiarios);
                                } if (localDocumentoPCAPTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "documentoPCAP"));
                            
                            
                                    elementList.add(localDocumentoPCAP==null?null:
                                    localDocumentoPCAP);
                                } if (localDocumentoPPTTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "documentoPPT"));
                            
                            
                                    elementList.add(localDocumentoPPT==null?null:
                                    localDocumentoPPT);
                                } if (localDuracionContratoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "duracionContrato"));
                            
                            
                                    elementList.add(localDuracionContrato==null?null:
                                    localDuracionContrato);
                                } if (localFechaPresentacionSolcitudesParticipacionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "fechaPresentacionSolcitudesParticipacion"));
                                 
                                         elementList.add(localFechaPresentacionSolcitudesParticipacion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaPresentacionSolcitudesParticipacion));
                                    } if (localFormulaRevisionPreciosTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "formulaRevisionPrecios"));
                                 
                                         elementList.add(localFormulaRevisionPrecios==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFormulaRevisionPrecios));
                                    } if (localFundacionProgramaTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "fundacionPrograma"));
                            
                            
                                    elementList.add(localFundacionPrograma==null?null:
                                    localFundacionPrograma);
                                } if (localGarantiaTracker){
                             if (localGarantia!=null) {
                                 for (int i = 0;i < localGarantia.length;i++){

                                    if (localGarantia[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "garantia"));
                                         elementList.add(localGarantia[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "garantia"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "garantia"));
                                        elementList.add(localGarantia);
                                    
                             }

                        } if (localLicitadoresTracker){
                             if (localLicitadores!=null) {
                                 for (int i = 0;i < localLicitadores.length;i++){

                                    if (localLicitadores[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "licitadores"));
                                         elementList.add(localLicitadores[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "licitadores"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "licitadores"));
                                        elementList.add(localLicitadores);
                                    
                             }

                        } if (localLotesTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "lotes"));
                            
                            
                                    elementList.add(localLotes==null?null:
                                    localLotes);
                                } if (localLugarEjecucionContratoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "lugarEjecucionContrato"));
                            
                            
                                    elementList.add(localLugarEjecucionContrato==null?null:
                                    localLugarEjecucionContrato);
                                } if (localNumexpTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "numexp"));
                                 
                                         elementList.add(localNumexp==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumexp));
                                    } if (localObjetoContratoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "objetoContrato"));
                                 
                                         elementList.add(localObjetoContrato==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localObjetoContrato));
                                    } if (localOrganoAsistenciaTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "organoAsistencia"));
                            
                            
                                    elementList.add(localOrganoAsistencia==null?null:
                                    localOrganoAsistencia);
                                } if (localOrganoContratacionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "organoContratacion"));
                                 
                                         elementList.add(localOrganoContratacion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrganoContratacion));
                                    } if (localPersonalContactoContratacionTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "personalContactoContratacion"));
                            
                            
                                    elementList.add(localPersonalContactoContratacion==null?null:
                                    localPersonalContactoContratacion);
                                } if (localPersonalContactoSecretariaTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "personalContactoSecretaria"));
                            
                            
                                    elementList.add(localPersonalContactoSecretaria==null?null:
                                    localPersonalContactoSecretaria);
                                } if (localPresentacionOfertasTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "presentacionOfertas"));
                            
                            
                                    elementList.add(localPresentacionOfertas==null?null:
                                    localPresentacionOfertas);
                                } if (localPresupuestoConIvaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "presupuestoConIva"));
                                 
                                         elementList.add(localPresupuestoConIva==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPresupuestoConIva));
                                    } if (localPresupuestoSinIvaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "presupuestoSinIva"));
                                 
                                         elementList.add(localPresupuestoSinIva==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPresupuestoSinIva));
                                    } if (localProcContratacionTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "procContratacion"));
                            
                            
                                    elementList.add(localProcContratacion==null?null:
                                    localProcContratacion);
                                } if (localPublishedByUserTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "publishedByUser"));
                                 
                                         elementList.add(localPublishedByUser==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPublishedByUser));
                                    } if (localReqDeclTracker){
                             if (localReqDecl!=null) {
                                 for (int i = 0;i < localReqDecl.length;i++){

                                    if (localReqDecl[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "reqDecl"));
                                         elementList.add(localReqDecl[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "reqDecl"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "reqDecl"));
                                        elementList.add(localReqDecl);
                                    
                             }

                        } if (localSobreElectTracker){
                             if (localSobreElect!=null) {
                                 for (int i = 0;i < localSobreElect.length;i++){

                                    if (localSobreElect[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "sobreElect"));
                                         elementList.add(localSobreElect[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "sobreElect"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "sobreElect"));
                                        elementList.add(localSobreElect);
                                    
                             }

                        } if (localSolvenciaEconomicaTracker){
                             if (localSolvenciaEconomica!=null) {
                                 for (int i = 0;i < localSolvenciaEconomica.length;i++){

                                    if (localSolvenciaEconomica[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "solvenciaEconomica"));
                                         elementList.add(localSolvenciaEconomica[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "solvenciaEconomica"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "solvenciaEconomica"));
                                        elementList.add(localSolvenciaEconomica);
                                    
                             }

                        } if (localSolvenciaTecnTracker){
                             if (localSolvenciaTecn!=null) {
                                 for (int i = 0;i < localSolvenciaTecn.length;i++){

                                    if (localSolvenciaTecn[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "solvenciaTecn"));
                                         elementList.add(localSolvenciaTecn[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "solvenciaTecn"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "solvenciaTecn"));
                                        elementList.add(localSolvenciaTecn);
                                    
                             }

                        } if (localSubTipoContratoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "subTipoContrato"));
                            
                            
                                    elementList.add(localSubTipoContrato==null?null:
                                    localSubTipoContrato);
                                } if (localTipoContratoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "tipoContrato"));
                            
                            
                                    elementList.add(localTipoContrato==null?null:
                                    localTipoContrato);
                                } if (localTipoPresentacionOfertaTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "tipoPresentacionOferta"));
                            
                            
                                    elementList.add(localTipoPresentacionOferta==null?null:
                                    localTipoPresentacionOferta);
                                } if (localTipoTramitacionTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "tipoTramitacion"));
                            
                            
                                    elementList.add(localTipoTramitacion==null?null:
                                    localTipoTramitacion);
                                } if (localTramitacionGastoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "tramitacionGasto"));
                            
                            
                                    elementList.add(localTramitacionGasto==null?null:
                                    localTramitacionGasto);
                                } if (localValorEstimadoContratoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "valorEstimadoContrato"));
                                 
                                         elementList.add(localValorEstimadoContrato==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localValorEstimadoContrato));
                                    } if (localVarOfertTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "varOfert"));
                            
                            
                                    elementList.add(localVarOfert==null?null:
                                    localVarOfert);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static EspacioVirtualLicitacionBean parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            EspacioVirtualLicitacionBean object =
                new EspacioVirtualLicitacionBean();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"EspacioVirtualLicitacionBean".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (EspacioVirtualLicitacionBean)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                        java.util.ArrayList list5 = new java.util.ArrayList();
                    
                        java.util.ArrayList list14 = new java.util.ArrayList();
                    
                        java.util.ArrayList list15 = new java.util.ArrayList();
                    
                        java.util.ArrayList list29 = new java.util.ArrayList();
                    
                        java.util.ArrayList list30 = new java.util.ArrayList();
                    
                        java.util.ArrayList list31 = new java.util.ArrayList();
                    
                        java.util.ArrayList list32 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","apliPesu").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list1.add(null);
                                                              reader.next();
                                                          } else {
                                                        list1.add(AplicacionPresupuestaria.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","apliPesu").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list1.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list1.add(AplicacionPresupuestaria.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setApliPesu((AplicacionPresupuestaria[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                AplicacionPresupuestaria.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","clasificacion").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setClasificacion(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setClasificacion(Clasificacion.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","condLicit").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setCondLicit(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setCondLicit(CondicionesLicitadores.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","contratoSujetoRegArmon").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setContratoSujetoRegArmon(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setContratoSujetoRegArmon(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","cpv").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list5.add(null);
                                                              reader.next();
                                                          } else {
                                                        list5.add(Campo.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone5 = false;
                                                        while(!loopDone5){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone5 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","cpv").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list5.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list5.add(Campo.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone5 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setCpv((Campo[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Campo.class,
                                                                list5));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","criterios").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setCriterios(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setCriterios(CriteriosAdjudicacion.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","diarios").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setDiarios(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setDiarios(PublicacionesOficialesBean.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","documentoPCAP").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setDocumentoPCAP(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setDocumentoPCAP(Documento.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","documentoPPT").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setDocumentoPPT(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setDocumentoPPT(Documento.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","duracionContrato").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setDuracionContrato(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setDuracionContrato(DuracionContratoBean.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","fechaPresentacionSolcitudesParticipacion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFechaPresentacionSolcitudesParticipacion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","formulaRevisionPrecios").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFormulaRevisionPrecios(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","fundacionPrograma").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setFundacionPrograma(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setFundacionPrograma(FundacionPrograma.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","garantia").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list14.add(null);
                                                              reader.next();
                                                          } else {
                                                        list14.add(Garantia.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone14 = false;
                                                        while(!loopDone14){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone14 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","garantia").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list14.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list14.add(Garantia.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone14 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setGarantia((Garantia[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Garantia.class,
                                                                list14));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","licitadores").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list15.add(null);
                                                              reader.next();
                                                          } else {
                                                        list15.add(LicitadorBean.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone15 = false;
                                                        while(!loopDone15){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone15 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","licitadores").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list15.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list15.add(LicitadorBean.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone15 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setLicitadores((LicitadorBean[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                LicitadorBean.class,
                                                                list15));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","lotes").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setLotes(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setLotes(Lotes.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","lugarEjecucionContrato").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setLugarEjecucionContrato(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setLugarEjecucionContrato(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","numexp").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumexp(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","objetoContrato").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setObjetoContrato(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","organoAsistencia").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setOrganoAsistencia(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setOrganoAsistencia(OrganoAsistencia.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","organoContratacion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOrganoContratacion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","personalContactoContratacion").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setPersonalContactoContratacion(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setPersonalContactoContratacion(PersonalContacto.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","personalContactoSecretaria").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setPersonalContactoSecretaria(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setPersonalContactoSecretaria(PersonalContacto.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","presentacionOfertas").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setPresentacionOfertas(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setPresentacionOfertas(Periodo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","presupuestoConIva").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPresupuestoConIva(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","presupuestoSinIva").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPresupuestoSinIva(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","procContratacion").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setProcContratacion(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setProcContratacion(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","publishedByUser").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPublishedByUser(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","reqDecl").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list29.add(null);
                                                              reader.next();
                                                          } else {
                                                        list29.add(RequisitfiDeclaraciones.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone29 = false;
                                                        while(!loopDone29){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone29 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","reqDecl").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list29.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list29.add(RequisitfiDeclaraciones.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone29 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setReqDecl((RequisitfiDeclaraciones[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                RequisitfiDeclaraciones.class,
                                                                list29));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","sobreElect").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list30.add(null);
                                                              reader.next();
                                                          } else {
                                                        list30.add(SobreElectronico.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone30 = false;
                                                        while(!loopDone30){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone30 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","sobreElect").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list30.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list30.add(SobreElectronico.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone30 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setSobreElect((SobreElectronico[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                SobreElectronico.class,
                                                                list30));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","solvenciaEconomica").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list31.add(null);
                                                              reader.next();
                                                          } else {
                                                        list31.add(SolvenciaEconomica.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone31 = false;
                                                        while(!loopDone31){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone31 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","solvenciaEconomica").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list31.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list31.add(SolvenciaEconomica.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone31 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setSolvenciaEconomica((SolvenciaEconomica[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                SolvenciaEconomica.class,
                                                                list31));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","solvenciaTecn").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list32.add(null);
                                                              reader.next();
                                                          } else {
                                                        list32.add(SolvenciaTecnica.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone32 = false;
                                                        while(!loopDone32){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone32 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","solvenciaTecn").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list32.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list32.add(SolvenciaTecnica.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone32 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setSolvenciaTecn((SolvenciaTecnica[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                SolvenciaTecnica.class,
                                                                list32));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","subTipoContrato").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setSubTipoContrato(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setSubTipoContrato(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoContrato").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setTipoContrato(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setTipoContrato(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoPresentacionOferta").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setTipoPresentacionOferta(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setTipoPresentacionOferta(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tipoTramitacion").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setTipoTramitacion(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setTipoTramitacion(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","tramitacionGasto").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setTramitacionGasto(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setTramitacionGasto(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","valorEstimadoContrato").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setValorEstimadoContrato(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","varOfert").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setVarOfert(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setVarOfert(VariantesOfertas.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class RemoteException extends IOException
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = RemoteException
                Namespace URI = http://rmi.java/xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for Cause
                        */

                        
                                    protected java.lang.Object localCause ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCauseTracker = false ;

                           public boolean isCauseSpecified(){
                               return localCauseTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.Object
                           */
                           public  java.lang.Object getCause(){
                               return localCause;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cause
                               */
                               public void setCause(java.lang.Object param){
                            localCauseTracker = true;
                                   
                                            this.localCause=param;
                                    

                               }
                            

                        /**
                        * field for Message
                        */

                        
                                    protected java.lang.String localMessage ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMessageTracker = false ;

                           public boolean isMessageSpecified(){
                               return localMessageTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMessage(){
                               return localMessage;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Message
                               */
                               public void setMessage(java.lang.String param){
                            localMessageTracker = true;
                                   
                                            this.localMessage=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://rmi.java/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":RemoteException",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "RemoteException",
                           xmlWriter);
                   }

                if (localCauseTracker){
                            
                            if (localCause!=null){
                                if (localCause instanceof org.apache.axis2.databinding.ADBBean){
                                    ((org.apache.axis2.databinding.ADBBean)localCause).serialize(
                                               new javax.xml.namespace.QName("http://rmi.java/xsd","cause"),
                                               xmlWriter,true);
                                 } else {
                                    writeStartElement(null, "http://rmi.java/xsd", "cause", xmlWriter);
                                    org.apache.axis2.databinding.utils.ConverterUtil.serializeAnyType(localCause, xmlWriter);
                                    xmlWriter.writeEndElement();
                                 }
                            } else {
                                
                                        // write null attribute
                                           writeStartElement(null, "http://rmi.java/xsd", "cause", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                            }


                        } if (localMessageTracker){
                                    namespace = "http://rmi.java/xsd";
                                    writeStartElement(null, namespace, "message", xmlWriter);
                             

                                          if (localMessage==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMessage);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://rmi.java/xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                    attribList.add(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema-instance","type"));
                    attribList.add(new javax.xml.namespace.QName("http://rmi.java/xsd","RemoteException"));
                 if (localCauseTracker){
                            elementList.add(new javax.xml.namespace.QName("http://rmi.java/xsd",
                                                                      "cause"));
                            
                            
                                    elementList.add(localCause==null?null:
                                    localCause);
                                } if (localMessageTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://rmi.java/xsd",
                                                                      "message"));
                                 
                                         elementList.add(localMessage==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMessage));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static RemoteException parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            RemoteException object =
                new RemoteException();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"RemoteException".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (RemoteException)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://rmi.java/xsd","cause").equals(reader.getName())){
                                
                                     object.setCause(org.apache.axis2.databinding.utils.ConverterUtil.getAnyTypeObject(reader,
                                                ExtensionMapper.class));
                                       
                                         reader.next();
                                     
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://rmi.java/xsd","message").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMessage(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class OrganoAsistencia
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = OrganoAsistencia
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for Identificacion
                        */

                        
                                    protected java.lang.String localIdentificacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdentificacionTracker = false ;

                           public boolean isIdentificacionSpecified(){
                               return localIdentificacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIdentificacion(){
                               return localIdentificacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Identificacion
                               */
                               public void setIdentificacion(java.lang.String param){
                            localIdentificacionTracker = true;
                                   
                                            this.localIdentificacion=param;
                                    

                               }
                            

                        /**
                        * field for InformacionOC
                        */

                        
                                    protected PersonalContacto localInformacionOC ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInformacionOCTracker = false ;

                           public boolean isInformacionOCSpecified(){
                               return localInformacionOCTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return PersonalContacto
                           */
                           public  PersonalContacto getInformacionOC(){
                               return localInformacionOC;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InformacionOC
                               */
                               public void setInformacionOC(PersonalContacto param){
                            localInformacionOCTracker = true;
                                   
                                            this.localInformacionOC=param;
                                    

                               }
                            

                        /**
                        * field for NombreOrgAsist
                        */

                        
                                    protected java.lang.String localNombreOrgAsist ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNombreOrgAsistTracker = false ;

                           public boolean isNombreOrgAsistSpecified(){
                               return localNombreOrgAsistTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNombreOrgAsist(){
                               return localNombreOrgAsist;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NombreOrgAsist
                               */
                               public void setNombreOrgAsist(java.lang.String param){
                            localNombreOrgAsistTracker = true;
                                   
                                            this.localNombreOrgAsist=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":OrganoAsistencia",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "OrganoAsistencia",
                           xmlWriter);
                   }

               
                   }
                if (localIdentificacionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "identificacion", xmlWriter);
                             

                                          if (localIdentificacion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIdentificacion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localInformacionOCTracker){
                                    if (localInformacionOC==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "informacionOC", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localInformacionOC.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","informacionOC"),
                                        xmlWriter);
                                    }
                                } if (localNombreOrgAsistTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "nombreOrgAsist", xmlWriter);
                             

                                          if (localNombreOrgAsist==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNombreOrgAsist);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localIdentificacionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "identificacion"));
                                 
                                         elementList.add(localIdentificacion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdentificacion));
                                    } if (localInformacionOCTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "informacionOC"));
                            
                            
                                    elementList.add(localInformacionOC==null?null:
                                    localInformacionOC);
                                } if (localNombreOrgAsistTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "nombreOrgAsist"));
                                 
                                         elementList.add(localNombreOrgAsist==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNombreOrgAsist));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static OrganoAsistencia parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            OrganoAsistencia object =
                new OrganoAsistencia();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"OrganoAsistencia".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (OrganoAsistencia)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","identificacion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIdentificacion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","informacionOC").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setInformacionOC(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setInformacionOC(PersonalContacto.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","nombreOrgAsist").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNombreOrgAsist(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class MalformedURLException extends IOException
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = MalformedURLException
                Namespace URI = http://net.java/xsd
                Namespace Prefix = ns2
                */
            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://net.java/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":MalformedURLException",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "MalformedURLException",
                           xmlWriter);
                   }

               
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://net.java/xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                    attribList.add(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema-instance","type"));
                    attribList.add(new javax.xml.namespace.QName("http://net.java/xsd","MalformedURLException"));
                

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static MalformedURLException parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            MalformedURLException object =
                new MalformedURLException();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"MalformedURLException".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (MalformedURLException)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AnuncioBean
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = AnuncioBean
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":AnuncioBean",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "AnuncioBean",
                           xmlWriter);
                   }

               
                   }
               
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AnuncioBean parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AnuncioBean object =
                new AnuncioBean();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"AnuncioBean".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AnuncioBean)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class PeticionesAlsigm
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = PeticionesAlsigm
                Namespace URI = http://hibernate.contratacion.dipucr.es/xsd
                Namespace Prefix = ns5
                */
            

                        /**
                        * field for DniFuncionPeticion
                        */

                        
                                    protected java.lang.String localDniFuncionPeticion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDniFuncionPeticionTracker = false ;

                           public boolean isDniFuncionPeticionSpecified(){
                               return localDniFuncionPeticionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDniFuncionPeticion(){
                               return localDniFuncionPeticion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DniFuncionPeticion
                               */
                               public void setDniFuncionPeticion(java.lang.String param){
                            localDniFuncionPeticionTracker = true;
                                   
                                            this.localDniFuncionPeticion=param;
                                    

                               }
                            

                        /**
                        * field for DnsEntidad
                        */

                        
                                    protected java.lang.String localDnsEntidad ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDnsEntidadTracker = false ;

                           public boolean isDnsEntidadSpecified(){
                               return localDnsEntidadTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDnsEntidad(){
                               return localDnsEntidad;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DnsEntidad
                               */
                               public void setDnsEntidad(java.lang.String param){
                            localDnsEntidadTracker = true;
                                   
                                            this.localDnsEntidad=param;
                                    

                               }
                            

                        /**
                        * field for Expediente
                        */

                        
                                    protected java.lang.String localExpediente ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpedienteTracker = false ;

                           public boolean isExpedienteSpecified(){
                               return localExpedienteTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExpediente(){
                               return localExpediente;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Expediente
                               */
                               public void setExpediente(java.lang.String param){
                            localExpedienteTracker = true;
                                   
                                            this.localExpediente=param;
                                    

                               }
                            

                        /**
                        * field for IdEntidad
                        */

                        
                                    protected java.lang.String localIdEntidad ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdEntidadTracker = false ;

                           public boolean isIdEntidadSpecified(){
                               return localIdEntidadTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIdEntidad(){
                               return localIdEntidad;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IdEntidad
                               */
                               public void setIdEntidad(java.lang.String param){
                            localIdEntidadTracker = true;
                                   
                                            this.localIdEntidad=param;
                                    

                               }
                            

                        /**
                        * field for IdFase
                        */

                        
                                    protected int localIdFase ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdFaseTracker = false ;

                           public boolean isIdFaseSpecified(){
                               return localIdFaseTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return int
                           */
                           public  int getIdFase(){
                               return localIdFase;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IdFase
                               */
                               public void setIdFase(int param){
                            
                                       // setting primitive attribute tracker to true
                                       localIdFaseTracker =
                                       param != java.lang.Integer.MIN_VALUE;
                                   
                                            this.localIdFase=param;
                                    

                               }
                            

                        /**
                        * field for IdTramite
                        */

                        
                                    protected int localIdTramite ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdTramiteTracker = false ;

                           public boolean isIdTramiteSpecified(){
                               return localIdTramiteTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return int
                           */
                           public  int getIdTramite(){
                               return localIdTramite;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IdTramite
                               */
                               public void setIdTramite(int param){
                            
                                       // setting primitive attribute tracker to true
                                       localIdTramiteTracker =
                                       param != java.lang.Integer.MIN_VALUE;
                                   
                                            this.localIdTramite=param;
                                    

                               }
                            

                        /**
                        * field for IdpeticionesAlsigm
                        */

                        
                                    protected int localIdpeticionesAlsigm ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdpeticionesAlsigmTracker = false ;

                           public boolean isIdpeticionesAlsigmSpecified(){
                               return localIdpeticionesAlsigmTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return int
                           */
                           public  int getIdpeticionesAlsigm(){
                               return localIdpeticionesAlsigm;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IdpeticionesAlsigm
                               */
                               public void setIdpeticionesAlsigm(int param){
                            
                                       // setting primitive attribute tracker to true
                                       localIdpeticionesAlsigmTracker =
                                       param != java.lang.Integer.MIN_VALUE;
                                   
                                            this.localIdpeticionesAlsigm=param;
                                    

                               }
                            

                        /**
                        * field for Leido
                        */

                        
                                    protected java.lang.String localLeido ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLeidoTracker = false ;

                           public boolean isLeidoSpecified(){
                               return localLeidoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLeido(){
                               return localLeido;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Leido
                               */
                               public void setLeido(java.lang.String param){
                            localLeidoTracker = true;
                                   
                                            this.localLeido=param;
                                    

                               }
                            

                        /**
                        * field for OperacionPlace
                        */

                        
                                    protected java.lang.String localOperacionPlace ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOperacionPlaceTracker = false ;

                           public boolean isOperacionPlaceSpecified(){
                               return localOperacionPlaceTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOperacionPlace(){
                               return localOperacionPlace;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OperacionPlace
                               */
                               public void setOperacionPlace(java.lang.String param){
                            localOperacionPlaceTracker = true;
                                   
                                            this.localOperacionPlace=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://hibernate.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":PeticionesAlsigm",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "PeticionesAlsigm",
                           xmlWriter);
                   }

               
                   }
                if (localDniFuncionPeticionTracker){
                                    namespace = "http://hibernate.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "dniFuncionPeticion", xmlWriter);
                             

                                          if (localDniFuncionPeticion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDniFuncionPeticion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDnsEntidadTracker){
                                    namespace = "http://hibernate.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "dnsEntidad", xmlWriter);
                             

                                          if (localDnsEntidad==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDnsEntidad);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExpedienteTracker){
                                    namespace = "http://hibernate.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "expediente", xmlWriter);
                             

                                          if (localExpediente==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExpediente);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIdEntidadTracker){
                                    namespace = "http://hibernate.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "idEntidad", xmlWriter);
                             

                                          if (localIdEntidad==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIdEntidad);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIdFaseTracker){
                                    namespace = "http://hibernate.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "idFase", xmlWriter);
                             
                                               if (localIdFase==java.lang.Integer.MIN_VALUE) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("idFase cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdFase));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIdTramiteTracker){
                                    namespace = "http://hibernate.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "idTramite", xmlWriter);
                             
                                               if (localIdTramite==java.lang.Integer.MIN_VALUE) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("idTramite cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdTramite));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIdpeticionesAlsigmTracker){
                                    namespace = "http://hibernate.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "idpeticionesAlsigm", xmlWriter);
                             
                                               if (localIdpeticionesAlsigm==java.lang.Integer.MIN_VALUE) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("idpeticionesAlsigm cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdpeticionesAlsigm));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLeidoTracker){
                                    namespace = "http://hibernate.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "leido", xmlWriter);
                             

                                          if (localLeido==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLeido);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOperacionPlaceTracker){
                                    namespace = "http://hibernate.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "operacionPlace", xmlWriter);
                             

                                          if (localOperacionPlace==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOperacionPlace);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://hibernate.contratacion.dipucr.es/xsd")){
                return "ns5";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localDniFuncionPeticionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd",
                                                                      "dniFuncionPeticion"));
                                 
                                         elementList.add(localDniFuncionPeticion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDniFuncionPeticion));
                                    } if (localDnsEntidadTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd",
                                                                      "dnsEntidad"));
                                 
                                         elementList.add(localDnsEntidad==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDnsEntidad));
                                    } if (localExpedienteTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd",
                                                                      "expediente"));
                                 
                                         elementList.add(localExpediente==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExpediente));
                                    } if (localIdEntidadTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd",
                                                                      "idEntidad"));
                                 
                                         elementList.add(localIdEntidad==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdEntidad));
                                    } if (localIdFaseTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd",
                                                                      "idFase"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdFase));
                            } if (localIdTramiteTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd",
                                                                      "idTramite"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdTramite));
                            } if (localIdpeticionesAlsigmTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd",
                                                                      "idpeticionesAlsigm"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdpeticionesAlsigm));
                            } if (localLeidoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd",
                                                                      "leido"));
                                 
                                         elementList.add(localLeido==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLeido));
                                    } if (localOperacionPlaceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd",
                                                                      "operacionPlace"));
                                 
                                         elementList.add(localOperacionPlace==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperacionPlace));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static PeticionesAlsigm parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            PeticionesAlsigm object =
                new PeticionesAlsigm();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"PeticionesAlsigm".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (PeticionesAlsigm)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd","dniFuncionPeticion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDniFuncionPeticion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd","dnsEntidad").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDnsEntidad(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd","expediente").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExpediente(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd","idEntidad").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIdEntidad(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd","idFase").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"idFase" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIdFase(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setIdFase(java.lang.Integer.MIN_VALUE);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd","idTramite").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"idTramite" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIdTramite(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setIdTramite(java.lang.Integer.MIN_VALUE);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd","idpeticionesAlsigm").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"idpeticionesAlsigm" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIdpeticionesAlsigm(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setIdpeticionesAlsigm(java.lang.Integer.MIN_VALUE);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd","leido").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLeido(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://hibernate.contratacion.dipucr.es/xsd","operacionPlace").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOperacionPlace(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class FundacionPrograma
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FundacionPrograma
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for Programa
                        */

                        
                                    protected java.lang.String localPrograma ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProgramaTracker = false ;

                           public boolean isProgramaSpecified(){
                               return localProgramaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPrograma(){
                               return localPrograma;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Programa
                               */
                               public void setPrograma(java.lang.String param){
                            localProgramaTracker = true;
                                   
                                            this.localPrograma=param;
                                    

                               }
                            

                        /**
                        * field for ProgramasFinanciacionCode
                        */

                        
                                    protected Campo localProgramasFinanciacionCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProgramasFinanciacionCodeTracker = false ;

                           public boolean isProgramasFinanciacionCodeSpecified(){
                               return localProgramasFinanciacionCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getProgramasFinanciacionCode(){
                               return localProgramasFinanciacionCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProgramasFinanciacionCode
                               */
                               public void setProgramasFinanciacionCode(Campo param){
                            localProgramasFinanciacionCodeTracker = true;
                                   
                                            this.localProgramasFinanciacionCode=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":FundacionPrograma",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "FundacionPrograma",
                           xmlWriter);
                   }

               
                   }
                if (localProgramaTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "programa", xmlWriter);
                             

                                          if (localPrograma==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPrograma);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProgramasFinanciacionCodeTracker){
                                    if (localProgramasFinanciacionCode==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "programasFinanciacionCode", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localProgramasFinanciacionCode.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","programasFinanciacionCode"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localProgramaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "programa"));
                                 
                                         elementList.add(localPrograma==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPrograma));
                                    } if (localProgramasFinanciacionCodeTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "programasFinanciacionCode"));
                            
                            
                                    elementList.add(localProgramasFinanciacionCode==null?null:
                                    localProgramasFinanciacionCode);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static FundacionPrograma parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            FundacionPrograma object =
                new FundacionPrograma();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"FundacionPrograma".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FundacionPrograma)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","programa").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPrograma(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","programasFinanciacionCode").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setProgramasFinanciacionCode(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setProgramasFinanciacionCode(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Lote
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = Lote
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for Cpv
                        * This was an Array!
                        */

                        
                                    protected Campo[] localCpv ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCpvTracker = false ;

                           public boolean isCpvSpecified(){
                               return localCpvTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo[]
                           */
                           public  Campo[] getCpv(){
                               return localCpv;
                           }

                           
                        


                               
                              /**
                               * validate the array for Cpv
                               */
                              protected void validateCpv(Campo[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Cpv
                              */
                              public void setCpv(Campo[] param){
                              
                                   validateCpv(param);

                               localCpvTracker = true;
                                      
                                      this.localCpv=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Campo
                             */
                             public void addCpv(Campo param){
                                   if (localCpv == null){
                                   localCpv = new Campo[]{};
                                   }

                            
                                 //update the setting tracker
                                localCpvTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localCpv);
                               list.add(param);
                               this.localCpv =
                             (Campo[])list.toArray(
                            new Campo[list.size()]);

                             }
                             

                        /**
                        * field for Descripcion
                        */

                        
                                    protected java.lang.String localDescripcion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescripcionTracker = false ;

                           public boolean isDescripcionSpecified(){
                               return localDescripcionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDescripcion(){
                               return localDescripcion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Descripcion
                               */
                               public void setDescripcion(java.lang.String param){
                            localDescripcionTracker = true;
                                   
                                            this.localDescripcion=param;
                                    

                               }
                            

                        /**
                        * field for IdLote
                        */

                        
                                    protected java.lang.String localIdLote ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdLoteTracker = false ;

                           public boolean isIdLoteSpecified(){
                               return localIdLoteTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIdLote(){
                               return localIdLote;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IdLote
                               */
                               public void setIdLote(java.lang.String param){
                            localIdLoteTracker = true;
                                   
                                            this.localIdLote=param;
                                    

                               }
                            

                        /**
                        * field for LugarEjecucionContratoPais
                        */

                        
                                    protected Campo localLugarEjecucionContratoPais ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLugarEjecucionContratoPaisTracker = false ;

                           public boolean isLugarEjecucionContratoPaisSpecified(){
                               return localLugarEjecucionContratoPaisTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getLugarEjecucionContratoPais(){
                               return localLugarEjecucionContratoPais;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LugarEjecucionContratoPais
                               */
                               public void setLugarEjecucionContratoPais(Campo param){
                            localLugarEjecucionContratoPaisTracker = true;
                                   
                                            this.localLugarEjecucionContratoPais=param;
                                    

                               }
                            

                        /**
                        * field for LugarEjecucionContratoPaisNUTS
                        */

                        
                                    protected Campo localLugarEjecucionContratoPaisNUTS ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLugarEjecucionContratoPaisNUTSTracker = false ;

                           public boolean isLugarEjecucionContratoPaisNUTSSpecified(){
                               return localLugarEjecucionContratoPaisNUTSTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getLugarEjecucionContratoPaisNUTS(){
                               return localLugarEjecucionContratoPaisNUTS;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LugarEjecucionContratoPaisNUTS
                               */
                               public void setLugarEjecucionContratoPaisNUTS(Campo param){
                            localLugarEjecucionContratoPaisNUTSTracker = true;
                                   
                                            this.localLugarEjecucionContratoPaisNUTS=param;
                                    

                               }
                            

                        /**
                        * field for LugarEjecucionContratoProvincia
                        */

                        
                                    protected Campo localLugarEjecucionContratoProvincia ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLugarEjecucionContratoProvinciaTracker = false ;

                           public boolean isLugarEjecucionContratoProvinciaSpecified(){
                               return localLugarEjecucionContratoProvinciaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getLugarEjecucionContratoProvincia(){
                               return localLugarEjecucionContratoProvincia;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LugarEjecucionContratoProvincia
                               */
                               public void setLugarEjecucionContratoProvincia(Campo param){
                            localLugarEjecucionContratoProvinciaTracker = true;
                                   
                                            this.localLugarEjecucionContratoProvincia=param;
                                    

                               }
                            

                        /**
                        * field for PresupuestoConIva
                        */

                        
                                    protected double localPresupuestoConIva ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPresupuestoConIvaTracker = false ;

                           public boolean isPresupuestoConIvaSpecified(){
                               return localPresupuestoConIvaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getPresupuestoConIva(){
                               return localPresupuestoConIva;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PresupuestoConIva
                               */
                               public void setPresupuestoConIva(double param){
                            localPresupuestoConIvaTracker = true;
                                   
                                            this.localPresupuestoConIva=param;
                                    

                               }
                            

                        /**
                        * field for PresupuestoSinIva
                        */

                        
                                    protected double localPresupuestoSinIva ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPresupuestoSinIvaTracker = false ;

                           public boolean isPresupuestoSinIvaSpecified(){
                               return localPresupuestoSinIvaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getPresupuestoSinIva(){
                               return localPresupuestoSinIva;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PresupuestoSinIva
                               */
                               public void setPresupuestoSinIva(double param){
                            localPresupuestoSinIvaTracker = true;
                                   
                                            this.localPresupuestoSinIva=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":Lote",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "Lote",
                           xmlWriter);
                   }

               
                   }
                if (localCpvTracker){
                                       if (localCpv!=null){
                                            for (int i = 0;i < localCpv.length;i++){
                                                if (localCpv[i] != null){
                                                 localCpv[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","cpv"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "cpv", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "cpv", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localDescripcionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "descripcion", xmlWriter);
                             

                                          if (localDescripcion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDescripcion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIdLoteTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "idLote", xmlWriter);
                             

                                          if (localIdLote==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIdLote);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLugarEjecucionContratoPaisTracker){
                                    if (localLugarEjecucionContratoPais==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "lugarEjecucionContratoPais", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localLugarEjecucionContratoPais.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","lugarEjecucionContratoPais"),
                                        xmlWriter);
                                    }
                                } if (localLugarEjecucionContratoPaisNUTSTracker){
                                    if (localLugarEjecucionContratoPaisNUTS==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "lugarEjecucionContratoPaisNUTS", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localLugarEjecucionContratoPaisNUTS.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","lugarEjecucionContratoPaisNUTS"),
                                        xmlWriter);
                                    }
                                } if (localLugarEjecucionContratoProvinciaTracker){
                                    if (localLugarEjecucionContratoProvincia==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "lugarEjecucionContratoProvincia", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localLugarEjecucionContratoProvincia.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","lugarEjecucionContratoProvincia"),
                                        xmlWriter);
                                    }
                                } if (localPresupuestoConIvaTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "presupuestoConIva", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localPresupuestoConIva)) {
                                           
                                                         writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPresupuestoConIva));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPresupuestoSinIvaTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "presupuestoSinIva", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localPresupuestoSinIva)) {
                                           
                                                         writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPresupuestoSinIva));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCpvTracker){
                             if (localCpv!=null) {
                                 for (int i = 0;i < localCpv.length;i++){

                                    if (localCpv[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "cpv"));
                                         elementList.add(localCpv[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "cpv"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "cpv"));
                                        elementList.add(localCpv);
                                    
                             }

                        } if (localDescripcionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "descripcion"));
                                 
                                         elementList.add(localDescripcion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion));
                                    } if (localIdLoteTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "idLote"));
                                 
                                         elementList.add(localIdLote==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdLote));
                                    } if (localLugarEjecucionContratoPaisTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "lugarEjecucionContratoPais"));
                            
                            
                                    elementList.add(localLugarEjecucionContratoPais==null?null:
                                    localLugarEjecucionContratoPais);
                                } if (localLugarEjecucionContratoPaisNUTSTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "lugarEjecucionContratoPaisNUTS"));
                            
                            
                                    elementList.add(localLugarEjecucionContratoPaisNUTS==null?null:
                                    localLugarEjecucionContratoPaisNUTS);
                                } if (localLugarEjecucionContratoProvinciaTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "lugarEjecucionContratoProvincia"));
                            
                            
                                    elementList.add(localLugarEjecucionContratoProvincia==null?null:
                                    localLugarEjecucionContratoProvincia);
                                } if (localPresupuestoConIvaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "presupuestoConIva"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPresupuestoConIva));
                            } if (localPresupuestoSinIvaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "presupuestoSinIva"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPresupuestoSinIva));
                            }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Lote parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Lote object =
                new Lote();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"Lote".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Lote)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","cpv").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list1.add(null);
                                                              reader.next();
                                                          } else {
                                                        list1.add(Campo.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","cpv").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list1.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list1.add(Campo.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setCpv((Campo[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Campo.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDescripcion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","idLote").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIdLote(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","lugarEjecucionContratoPais").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setLugarEjecucionContratoPais(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setLugarEjecucionContratoPais(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","lugarEjecucionContratoPaisNUTS").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setLugarEjecucionContratoPaisNUTS(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setLugarEjecucionContratoPaisNUTS(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","lugarEjecucionContratoProvincia").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setLugarEjecucionContratoProvincia(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setLugarEjecucionContratoProvincia(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","presupuestoConIva").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPresupuestoConIva(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                            
                                       } else {
                                           
                                           
                                                   object.setPresupuestoConIva(java.lang.Double.NaN);
                                               
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setPresupuestoConIva(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","presupuestoSinIva").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPresupuestoSinIva(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                            
                                       } else {
                                           
                                           
                                                   object.setPresupuestoSinIva(java.lang.Double.NaN);
                                               
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setPresupuestoSinIva(java.lang.Double.NaN);
                                           
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Clasificacion
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = Clasificacion
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for Clasificacion
                        * This was an Array!
                        */

                        
                                    protected Campo[] localClasificacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClasificacionTracker = false ;

                           public boolean isClasificacionSpecified(){
                               return localClasificacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo[]
                           */
                           public  Campo[] getClasificacion(){
                               return localClasificacion;
                           }

                           
                        


                               
                              /**
                               * validate the array for Clasificacion
                               */
                              protected void validateClasificacion(Campo[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Clasificacion
                              */
                              public void setClasificacion(Campo[] param){
                              
                                   validateClasificacion(param);

                               localClasificacionTracker = true;
                                      
                                      this.localClasificacion=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Campo
                             */
                             public void addClasificacion(Campo param){
                                   if (localClasificacion == null){
                                   localClasificacion = new Campo[]{};
                                   }

                            
                                 //update the setting tracker
                                localClasificacionTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localClasificacion);
                               list.add(param);
                               this.localClasificacion =
                             (Campo[])list.toArray(
                            new Campo[list.size()]);

                             }
                             

                        /**
                        * field for ClasificacionAcreditarRequisito
                        */

                        
                                    protected Campo localClasificacionAcreditarRequisito ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClasificacionAcreditarRequisitoTracker = false ;

                           public boolean isClasificacionAcreditarRequisitoSpecified(){
                               return localClasificacionAcreditarRequisitoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Campo
                           */
                           public  Campo getClasificacionAcreditarRequisito(){
                               return localClasificacionAcreditarRequisito;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ClasificacionAcreditarRequisito
                               */
                               public void setClasificacionAcreditarRequisito(Campo param){
                            localClasificacionAcreditarRequisitoTracker = true;
                                   
                                            this.localClasificacionAcreditarRequisito=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":Clasificacion",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "Clasificacion",
                           xmlWriter);
                   }

               
                   }
                if (localClasificacionTracker){
                                       if (localClasificacion!=null){
                                            for (int i = 0;i < localClasificacion.length;i++){
                                                if (localClasificacion[i] != null){
                                                 localClasificacion[i].serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","clasificacion"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                            writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "clasificacion", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();
                                                    
                                                }

                                            }
                                     } else {
                                        
                                                writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "clasificacion", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();
                                        
                                    }
                                 } if (localClasificacionAcreditarRequisitoTracker){
                                    if (localClasificacionAcreditarRequisito==null){

                                        writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "clasificacionAcreditarRequisito", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localClasificacionAcreditarRequisito.serialize(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","clasificacionAcreditarRequisito"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localClasificacionTracker){
                             if (localClasificacion!=null) {
                                 for (int i = 0;i < localClasificacion.length;i++){

                                    if (localClasificacion[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "clasificacion"));
                                         elementList.add(localClasificacion[i]);
                                    } else {
                                        
                                                elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "clasificacion"));
                                                elementList.add(null);
                                            
                                    }

                                 }
                             } else {
                                 
                                        elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                          "clasificacion"));
                                        elementList.add(localClasificacion);
                                    
                             }

                        } if (localClasificacionAcreditarRequisitoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "clasificacionAcreditarRequisito"));
                            
                            
                                    elementList.add(localClasificacionAcreditarRequisito==null?null:
                                    localClasificacionAcreditarRequisito);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Clasificacion parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Clasificacion object =
                new Clasificacion();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"Clasificacion".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Clasificacion)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","clasificacion").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list1.add(null);
                                                              reader.next();
                                                          } else {
                                                        list1.add(Campo.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","clasificacion").equals(reader.getName())){
                                                                    
                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list1.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list1.add(Campo.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setClasificacion((Campo[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Campo.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","clasificacionAcreditarRequisito").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setClasificacionAcreditarRequisito(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setClasificacionAcreditarRequisito(Campo.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Documento
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = Documento
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for BuyerProfileId
                        */

                        
                                    protected java.lang.String localBuyerProfileId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBuyerProfileIdTracker = false ;

                           public boolean isBuyerProfileIdSpecified(){
                               return localBuyerProfileIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBuyerProfileId(){
                               return localBuyerProfileId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BuyerProfileId
                               */
                               public void setBuyerProfileId(java.lang.String param){
                            localBuyerProfileIdTracker = true;
                                   
                                            this.localBuyerProfileId=param;
                                    

                               }
                            

                        /**
                        * field for Contenido
                        */

                        
                                    protected javax.activation.DataHandler localContenido ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localContenidoTracker = false ;

                           public boolean isContenidoSpecified(){
                               return localContenidoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return javax.activation.DataHandler
                           */
                           public  javax.activation.DataHandler getContenido(){
                               return localContenido;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Contenido
                               */
                               public void setContenido(javax.activation.DataHandler param){
                            localContenidoTracker = true;
                                   
                                            this.localContenido=param;
                                    

                               }
                            

                        /**
                        * field for Descripcion
                        */

                        
                                    protected java.lang.String localDescripcion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescripcionTracker = false ;

                           public boolean isDescripcionSpecified(){
                               return localDescripcionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDescripcion(){
                               return localDescripcion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Descripcion
                               */
                               public void setDescripcion(java.lang.String param){
                            localDescripcionTracker = true;
                                   
                                            this.localDescripcion=param;
                                    

                               }
                            

                        /**
                        * field for ExpedientNumber
                        */

                        
                                    protected java.lang.String localExpedientNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpedientNumberTracker = false ;

                           public boolean isExpedientNumberSpecified(){
                               return localExpedientNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExpedientNumber(){
                               return localExpedientNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExpedientNumber
                               */
                               public void setExpedientNumber(java.lang.String param){
                            localExpedientNumberTracker = true;
                                   
                                            this.localExpedientNumber=param;
                                    

                               }
                            

                        /**
                        * field for FechaFirma
                        */

                        
                                    protected java.util.Calendar localFechaFirma ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFechaFirmaTracker = false ;

                           public boolean isFechaFirmaSpecified(){
                               return localFechaFirmaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getFechaFirma(){
                               return localFechaFirma;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FechaFirma
                               */
                               public void setFechaFirma(java.util.Calendar param){
                            localFechaFirmaTracker = true;
                                   
                                            this.localFechaFirma=param;
                                    

                               }
                            

                        /**
                        * field for IdTypeDoc
                        */

                        
                                    protected java.lang.String localIdTypeDoc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdTypeDocTracker = false ;

                           public boolean isIdTypeDocSpecified(){
                               return localIdTypeDocTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIdTypeDoc(){
                               return localIdTypeDoc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IdTypeDoc
                               */
                               public void setIdTypeDoc(java.lang.String param){
                            localIdTypeDocTracker = true;
                                   
                                            this.localIdTypeDoc=param;
                                    

                               }
                            

                        /**
                        * field for MimeCode
                        */

                        
                                    protected java.lang.String localMimeCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMimeCodeTracker = false ;

                           public boolean isMimeCodeSpecified(){
                               return localMimeCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMimeCode(){
                               return localMimeCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MimeCode
                               */
                               public void setMimeCode(java.lang.String param){
                            localMimeCodeTracker = true;
                                   
                                            this.localMimeCode=param;
                                    

                               }
                            

                        /**
                        * field for NameDoc
                        */

                        
                                    protected java.lang.String localNameDoc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameDocTracker = false ;

                           public boolean isNameDocSpecified(){
                               return localNameDocTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameDoc(){
                               return localNameDoc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameDoc
                               */
                               public void setNameDoc(java.lang.String param){
                            localNameDocTracker = true;
                                   
                                            this.localNameDoc=param;
                                    

                               }
                            

                        /**
                        * field for OrganoContratacion
                        */

                        
                                    protected java.lang.String localOrganoContratacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOrganoContratacionTracker = false ;

                           public boolean isOrganoContratacionSpecified(){
                               return localOrganoContratacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOrganoContratacion(){
                               return localOrganoContratacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OrganoContratacion
                               */
                               public void setOrganoContratacion(java.lang.String param){
                            localOrganoContratacionTracker = true;
                                   
                                            this.localOrganoContratacion=param;
                                    

                               }
                            

                        /**
                        * field for PublicationId
                        */

                        
                                    protected java.lang.String localPublicationId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPublicationIdTracker = false ;

                           public boolean isPublicationIdSpecified(){
                               return localPublicationIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPublicationId(){
                               return localPublicationId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PublicationId
                               */
                               public void setPublicationId(java.lang.String param){
                            localPublicationIdTracker = true;
                                   
                                            this.localPublicationId=param;
                                    

                               }
                            

                        /**
                        * field for TypeDoc
                        */

                        
                                    protected java.lang.String localTypeDoc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTypeDocTracker = false ;

                           public boolean isTypeDocSpecified(){
                               return localTypeDocTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTypeDoc(){
                               return localTypeDoc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TypeDoc
                               */
                               public void setTypeDoc(java.lang.String param){
                            localTypeDocTracker = true;
                                   
                                            this.localTypeDoc=param;
                                    

                               }
                            

                        /**
                        * field for UrlDocument
                        */

                        
                                    protected java.lang.String localUrlDocument ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUrlDocumentTracker = false ;

                           public boolean isUrlDocumentSpecified(){
                               return localUrlDocumentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUrlDocument(){
                               return localUrlDocument;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UrlDocument
                               */
                               public void setUrlDocument(java.lang.String param){
                            localUrlDocumentTracker = true;
                                   
                                            this.localUrlDocument=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":Documento",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "Documento",
                           xmlWriter);
                   }

               
                   }
                if (localBuyerProfileIdTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "buyerProfileId", xmlWriter);
                             

                                          if (localBuyerProfileId==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBuyerProfileId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localContenidoTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "contenido", xmlWriter);
                             
                                        
                                    if (localContenido!=null)  {
                                       try {
                                           org.apache.axiom.util.stax.XMLStreamWriterUtils.writeDataHandler(xmlWriter, localContenido, null, true);
                                       } catch (java.io.IOException ex) {
                                           throw new javax.xml.stream.XMLStreamException("Unable to read data handler for contenido", ex);
                                       }
                                    } else {
                                         
                                             writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                         
                                    }
                                 
                                   xmlWriter.writeEndElement();
                             } if (localDescripcionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "descripcion", xmlWriter);
                             

                                          if (localDescripcion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDescripcion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExpedientNumberTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "expedientNumber", xmlWriter);
                             

                                          if (localExpedientNumber==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExpedientNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFechaFirmaTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "fechaFirma", xmlWriter);
                             

                                          if (localFechaFirma==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaFirma));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIdTypeDocTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "idTypeDoc", xmlWriter);
                             

                                          if (localIdTypeDoc==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIdTypeDoc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMimeCodeTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "mimeCode", xmlWriter);
                             

                                          if (localMimeCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMimeCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameDocTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "nameDoc", xmlWriter);
                             

                                          if (localNameDoc==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameDoc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOrganoContratacionTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "organoContratacion", xmlWriter);
                             

                                          if (localOrganoContratacion==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOrganoContratacion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPublicationIdTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "publicationId", xmlWriter);
                             

                                          if (localPublicationId==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPublicationId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTypeDocTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "typeDoc", xmlWriter);
                             

                                          if (localTypeDoc==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTypeDoc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUrlDocumentTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "urlDocument", xmlWriter);
                             

                                          if (localUrlDocument==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUrlDocument);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localBuyerProfileIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "buyerProfileId"));
                                 
                                         elementList.add(localBuyerProfileId==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBuyerProfileId));
                                    } if (localContenidoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                        "contenido"));
                                
                            elementList.add(localContenido);
                        } if (localDescripcionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "descripcion"));
                                 
                                         elementList.add(localDescripcion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescripcion));
                                    } if (localExpedientNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "expedientNumber"));
                                 
                                         elementList.add(localExpedientNumber==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExpedientNumber));
                                    } if (localFechaFirmaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "fechaFirma"));
                                 
                                         elementList.add(localFechaFirma==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFechaFirma));
                                    } if (localIdTypeDocTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "idTypeDoc"));
                                 
                                         elementList.add(localIdTypeDoc==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdTypeDoc));
                                    } if (localMimeCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "mimeCode"));
                                 
                                         elementList.add(localMimeCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMimeCode));
                                    } if (localNameDocTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "nameDoc"));
                                 
                                         elementList.add(localNameDoc==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameDoc));
                                    } if (localOrganoContratacionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "organoContratacion"));
                                 
                                         elementList.add(localOrganoContratacion==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrganoContratacion));
                                    } if (localPublicationIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "publicationId"));
                                 
                                         elementList.add(localPublicationId==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPublicationId));
                                    } if (localTypeDocTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "typeDoc"));
                                 
                                         elementList.add(localTypeDoc==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTypeDoc));
                                    } if (localUrlDocumentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "urlDocument"));
                                 
                                         elementList.add(localUrlDocument==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrlDocument));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Documento parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Documento object =
                new Documento();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"Documento".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Documento)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","buyerProfileId").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBuyerProfileId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","contenido").equals(reader.getName())){
                                
                                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                             object.setContenido(null);
                                             reader.next();
                                        } else {
                                    
                                            object.setContenido(org.apache.axiom.util.stax.XMLStreamReaderUtils.getDataHandlerFromElement(reader));
                                    
                                        }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descripcion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDescripcion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","expedientNumber").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExpedientNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","fechaFirma").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFechaFirma(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","idTypeDoc").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIdTypeDoc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","mimeCode").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMimeCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","nameDoc").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameDoc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","organoContratacion").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOrganoContratacion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","publicationId").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPublicationId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","typeDoc").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTypeDoc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","urlDocument").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUrlDocument(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class PlataformaContratacionRemoteException
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://services.contratacion.dipucr.es",
                "PlataformaContratacionRemoteException",
                "ns6");

            

                        /**
                        * field for RemoteException
                        */

                        
                                    protected RemoteException localRemoteException ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRemoteExceptionTracker = false ;

                           public boolean isRemoteExceptionSpecified(){
                               return localRemoteExceptionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return RemoteException
                           */
                           public  RemoteException getRemoteException(){
                               return localRemoteException;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RemoteException
                               */
                               public void setRemoteException(RemoteException param){
                            localRemoteExceptionTracker = true;
                                   
                                            this.localRemoteException=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://services.contratacion.dipucr.es");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":PlataformaContratacionRemoteException",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "PlataformaContratacionRemoteException",
                           xmlWriter);
                   }

               
                   }
                if (localRemoteExceptionTracker){
                                    if (localRemoteException==null){

                                        writeStartElement(null, "http://services.contratacion.dipucr.es", "RemoteException", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localRemoteException.serialize(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","RemoteException"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://services.contratacion.dipucr.es")){
                return "ns6";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localRemoteExceptionTracker){
                            elementList.add(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es",
                                                                      "RemoteException"));
                            
                            
                                    elementList.add(localRemoteException==null?null:
                                    localRemoteException);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static PlataformaContratacionRemoteException parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            PlataformaContratacionRemoteException object =
                new PlataformaContratacionRemoteException();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"PlataformaContratacionRemoteException".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (PlataformaContratacionRemoteException)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","RemoteException").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setRemoteException(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setRemoteException(RemoteException.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class PlataformaContratacionUnsupportedEncodingException
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://services.contratacion.dipucr.es",
                "PlataformaContratacionUnsupportedEncodingException",
                "ns6");

            

                        /**
                        * field for UnsupportedEncodingException
                        */

                        
                                    protected UnsupportedEncodingException localUnsupportedEncodingException ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUnsupportedEncodingExceptionTracker = false ;

                           public boolean isUnsupportedEncodingExceptionSpecified(){
                               return localUnsupportedEncodingExceptionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return UnsupportedEncodingException
                           */
                           public  UnsupportedEncodingException getUnsupportedEncodingException(){
                               return localUnsupportedEncodingException;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UnsupportedEncodingException
                               */
                               public void setUnsupportedEncodingException(UnsupportedEncodingException param){
                            localUnsupportedEncodingExceptionTracker = true;
                                   
                                            this.localUnsupportedEncodingException=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://services.contratacion.dipucr.es");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":PlataformaContratacionUnsupportedEncodingException",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "PlataformaContratacionUnsupportedEncodingException",
                           xmlWriter);
                   }

               
                   }
                if (localUnsupportedEncodingExceptionTracker){
                                    if (localUnsupportedEncodingException==null){

                                        writeStartElement(null, "http://services.contratacion.dipucr.es", "UnsupportedEncodingException", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localUnsupportedEncodingException.serialize(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","UnsupportedEncodingException"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://services.contratacion.dipucr.es")){
                return "ns6";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localUnsupportedEncodingExceptionTracker){
                            elementList.add(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es",
                                                                      "UnsupportedEncodingException"));
                            
                            
                                    elementList.add(localUnsupportedEncodingException==null?null:
                                    localUnsupportedEncodingException);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static PlataformaContratacionUnsupportedEncodingException parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            PlataformaContratacionUnsupportedEncodingException object =
                new PlataformaContratacionUnsupportedEncodingException();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"PlataformaContratacionUnsupportedEncodingException".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (PlataformaContratacionUnsupportedEncodingException)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","UnsupportedEncodingException").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setUnsupportedEncodingException(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setUnsupportedEncodingException(UnsupportedEncodingException.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class VariantesOfertas
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = VariantesOfertas
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for DescVariantes
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localDescVariantes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescVariantesTracker = false ;

                           public boolean isDescVariantesSpecified(){
                               return localDescVariantesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getDescVariantes(){
                               return localDescVariantes;
                           }

                           
                        


                               
                              /**
                               * validate the array for DescVariantes
                               */
                              protected void validateDescVariantes(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param DescVariantes
                              */
                              public void setDescVariantes(java.lang.String[] param){
                              
                                   validateDescVariantes(param);

                               localDescVariantesTracker = true;
                                      
                                      this.localDescVariantes=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addDescVariantes(java.lang.String param){
                                   if (localDescVariantes == null){
                                   localDescVariantes = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localDescVariantesTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDescVariantes);
                               list.add(param);
                               this.localDescVariantes =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for NumMaxVar
                        */

                        
                                    protected java.lang.String localNumMaxVar ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumMaxVarTracker = false ;

                           public boolean isNumMaxVarSpecified(){
                               return localNumMaxVarTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumMaxVar(){
                               return localNumMaxVar;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NumMaxVar
                               */
                               public void setNumMaxVar(java.lang.String param){
                            localNumMaxVarTracker = true;
                                   
                                            this.localNumMaxVar=param;
                                    

                               }
                            

                        /**
                        * field for VarianteOferta
                        */

                        
                                    protected boolean localVarianteOferta ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localVarianteOfertaTracker = false ;

                           public boolean isVarianteOfertaSpecified(){
                               return localVarianteOfertaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getVarianteOferta(){
                               return localVarianteOferta;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VarianteOferta
                               */
                               public void setVarianteOferta(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localVarianteOfertaTracker =
                                       true;
                                   
                                            this.localVarianteOferta=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":VariantesOfertas",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "VariantesOfertas",
                           xmlWriter);
                   }

               
                   }
                if (localDescVariantesTracker){
                             if (localDescVariantes!=null) {
                                   namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                   for (int i = 0;i < localDescVariantes.length;i++){
                                        
                                            if (localDescVariantes[i] != null){
                                        
                                                writeStartElement(null, namespace, "descVariantes", xmlWriter);

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescVariantes[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // write null attribute
                                                            namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                                            writeStartElement(null, namespace, "descVariantes", xmlWriter);
                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                            xmlWriter.writeEndElement();
                                                       
                                                }

                                   }
                             } else {
                                 
                                         // write the null attribute
                                        // write null attribute
                                           writeStartElement(null, "http://objeto.contratacion.dipucr.es/xsd", "descVariantes", xmlWriter);

                                           // write the nil attribute
                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                           xmlWriter.writeEndElement();
                                    
                             }

                        } if (localNumMaxVarTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "numMaxVar", xmlWriter);
                             

                                          if (localNumMaxVar==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumMaxVar);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localVarianteOfertaTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "varianteOferta", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("varianteOferta cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVarianteOferta));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localDescVariantesTracker){
                            if (localDescVariantes!=null){
                                  for (int i = 0;i < localDescVariantes.length;i++){
                                      
                                         if (localDescVariantes[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descVariantes"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescVariantes[i]));
                                          } else {
                                             
                                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descVariantes"));
                                                    elementList.add(null);
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                              "descVariantes"));
                                    elementList.add(null);
                                
                            }

                        } if (localNumMaxVarTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "numMaxVar"));
                                 
                                         elementList.add(localNumMaxVar==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumMaxVar));
                                    } if (localVarianteOfertaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "varianteOferta"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVarianteOferta));
                            }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static VariantesOfertas parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            VariantesOfertas object =
                new VariantesOfertas();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"VariantesOfertas".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (VariantesOfertas)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descVariantes").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    
                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                  list1.add(null);
                                                       
                                                  reader.next();
                                              } else {
                                            list1.add(reader.getElementText());
                                            }
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone1 = false;
                                            while(!loopDone1){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone1 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","descVariantes").equals(reader.getName())){
                                                         
                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list1.add(null);
                                                                   
                                                              reader.next();
                                                          } else {
                                                        list1.add(reader.getElementText());
                                                        }
                                                    }else{
                                                        loopDone1 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setDescVariantes((java.lang.String[])
                                                        list1.toArray(new java.lang.String[list1.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","numMaxVar").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumMaxVar(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","varianteOferta").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"varianteOferta" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVarianteOferta(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Campo
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = Campo
                Namespace URI = http://objeto.contratacion.dipucr.es/xsd
                Namespace Prefix = ns4
                */
            

                        /**
                        * field for Id
                        */

                        
                                    protected java.lang.String localId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdTracker = false ;

                           public boolean isIdSpecified(){
                               return localIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getId(){
                               return localId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Id
                               */
                               public void setId(java.lang.String param){
                            localIdTracker = true;
                                   
                                            this.localId=param;
                                    

                               }
                            

                        /**
                        * field for Valor
                        */

                        
                                    protected java.lang.String localValor ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localValorTracker = false ;

                           public boolean isValorSpecified(){
                               return localValorTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getValor(){
                               return localValor;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Valor
                               */
                               public void setValor(java.lang.String param){
                            localValorTracker = true;
                                   
                                            this.localValor=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://objeto.contratacion.dipucr.es/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":Campo",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "Campo",
                           xmlWriter);
                   }

               
                   }
                if (localIdTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "id", xmlWriter);
                             

                                          if (localId==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localValorTracker){
                                    namespace = "http://objeto.contratacion.dipucr.es/xsd";
                                    writeStartElement(null, namespace, "valor", xmlWriter);
                             

                                          if (localValor==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localValor);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://objeto.contratacion.dipucr.es/xsd")){
                return "ns4";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "id"));
                                 
                                         elementList.add(localId==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localId));
                                    } if (localValorTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd",
                                                                      "valor"));
                                 
                                         elementList.add(localValor==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localValor));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Campo parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Campo object =
                new Campo();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"Campo".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Campo)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","id").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://objeto.contratacion.dipucr.es/xsd","valor").equals(reader.getName())){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setValor(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class UnsupportedEncodingException extends IOException
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = UnsupportedEncodingException
                Namespace URI = http://io.java/xsd
                Namespace Prefix = ns1
                */
            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://io.java/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":UnsupportedEncodingException",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "UnsupportedEncodingException",
                           xmlWriter);
                   }

               
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://io.java/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                    attribList.add(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema-instance","type"));
                    attribList.add(new javax.xml.namespace.QName("http://io.java/xsd","UnsupportedEncodingException"));
                

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static UnsupportedEncodingException parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            UnsupportedEncodingException object =
                new UnsupportedEncodingException();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"UnsupportedEncodingException".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (UnsupportedEncodingException)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ComprobacionParamentrosEVL
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://services.contratacion.dipucr.es",
                "comprobacionParamentrosEVL",
                "ns6");

            

                        /**
                        * field for AnuncioLicitacion
                        */

                        
                                    protected EspacioVirtualLicitacionBean localAnuncioLicitacion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAnuncioLicitacionTracker = false ;

                           public boolean isAnuncioLicitacionSpecified(){
                               return localAnuncioLicitacionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return EspacioVirtualLicitacionBean
                           */
                           public  EspacioVirtualLicitacionBean getAnuncioLicitacion(){
                               return localAnuncioLicitacion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AnuncioLicitacion
                               */
                               public void setAnuncioLicitacion(EspacioVirtualLicitacionBean param){
                            localAnuncioLicitacionTracker = true;
                                   
                                            this.localAnuncioLicitacion=param;
                                    

                               }
                            

                        /**
                        * field for PeticPlace
                        */

                        
                                    protected PeticionesAlsigm localPeticPlace ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPeticPlaceTracker = false ;

                           public boolean isPeticPlaceSpecified(){
                               return localPeticPlaceTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return PeticionesAlsigm
                           */
                           public  PeticionesAlsigm getPeticPlace(){
                               return localPeticPlace;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PeticPlace
                               */
                               public void setPeticPlace(PeticionesAlsigm param){
                            localPeticPlaceTracker = true;
                                   
                                            this.localPeticPlace=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://services.contratacion.dipucr.es");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":comprobacionParamentrosEVL",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "comprobacionParamentrosEVL",
                           xmlWriter);
                   }

               
                   }
                if (localAnuncioLicitacionTracker){
                                    if (localAnuncioLicitacion==null){

                                        writeStartElement(null, "http://services.contratacion.dipucr.es", "anuncioLicitacion", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localAnuncioLicitacion.serialize(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","anuncioLicitacion"),
                                        xmlWriter);
                                    }
                                } if (localPeticPlaceTracker){
                                    if (localPeticPlace==null){

                                        writeStartElement(null, "http://services.contratacion.dipucr.es", "peticPlace", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localPeticPlace.serialize(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","peticPlace"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://services.contratacion.dipucr.es")){
                return "ns6";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAnuncioLicitacionTracker){
                            elementList.add(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es",
                                                                      "anuncioLicitacion"));
                            
                            
                                    elementList.add(localAnuncioLicitacion==null?null:
                                    localAnuncioLicitacion);
                                } if (localPeticPlaceTracker){
                            elementList.add(new javax.xml.namespace.QName("http://services.contratacion.dipucr.es",
                                                                      "peticPlace"));
                            
                            
                                    elementList.add(localPeticPlace==null?null:
                                    localPeticPlace);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ComprobacionParamentrosEVL parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ComprobacionParamentrosEVL object =
                new ComprobacionParamentrosEVL();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"comprobacionParamentrosEVL".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ComprobacionParamentrosEVL)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","anuncioLicitacion").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setAnuncioLicitacion(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setAnuncioLicitacion(EspacioVirtualLicitacionBean.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://services.contratacion.dipucr.es","peticPlace").equals(reader.getName())){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setPeticPlace(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setPeticPlace(PeticionesAlsigm.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
            private  org.apache.axiom.om.OMElement  toOM(es.dipucr.contratacion.services.PlataformaContratacionStub.ComprobacionParamentrosEVL param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(es.dipucr.contratacion.services.PlataformaContratacionStub.ComprobacionParamentrosEVL.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionDatatypeConfigurationException param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionDatatypeConfigurationException.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionRemoteException param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionRemoteException.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionUnsupportedEncodingException param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionUnsupportedEncodingException.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionMalformedURLException param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionMalformedURLException.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionJAXBException param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionJAXBException.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, es.dipucr.contratacion.services.PlataformaContratacionStub.ComprobacionParamentrosEVL param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(es.dipucr.contratacion.services.PlataformaContratacionStub.ComprobacionParamentrosEVL.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             


        /**
        *  get the default envelope
        */
        private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory){
        return factory.getDefaultEnvelope();
        }


        private  java.lang.Object fromOM(
        org.apache.axiom.om.OMElement param,
        java.lang.Class type,
        java.util.Map extraNamespaces) throws org.apache.axis2.AxisFault{

        try {
        
                if (es.dipucr.contratacion.services.PlataformaContratacionStub.ComprobacionParamentrosEVL.class.equals(type)){
                
                           return es.dipucr.contratacion.services.PlataformaContratacionStub.ComprobacionParamentrosEVL.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionDatatypeConfigurationException.class.equals(type)){
                
                           return es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionDatatypeConfigurationException.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionRemoteException.class.equals(type)){
                
                           return es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionRemoteException.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionUnsupportedEncodingException.class.equals(type)){
                
                           return es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionUnsupportedEncodingException.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionMalformedURLException.class.equals(type)){
                
                           return es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionMalformedURLException.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionJAXBException.class.equals(type)){
                
                           return es.dipucr.contratacion.services.PlataformaContratacionStub.PlataformaContratacionJAXBException.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
        } catch (java.lang.Exception e) {
        throw org.apache.axis2.AxisFault.makeFault(e);
        }
           return null;
        }



    
   }
   