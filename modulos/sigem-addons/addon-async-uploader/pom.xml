<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>es.sigem.dipcoruna.addons</groupId>
	<artifactId>addon-async-uploader</artifactId>
	<version>1.0.0-RC1-SNAPSHOT</version>

	<properties>
		<addons-framework.version>1.2.0</addons-framework.version>
		<commons-io.version>2.4</commons-io.version>
		<ftp4j.version>1.6</ftp4j.version>
		<java.version>1.7</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<gson.version>2.6.2</gson.version>
	</properties>
	
	<repositories>
		<repository>
			<id>Novus</id>
			<url>http://repo.novus.com/releases/</url>
		</repository>
	</repositories>

	<profiles>		
		<profile>
			<id>nsis</id>
			<activation>
				<property>
					<name>nsis</name>
				</property>
			</activation>	
			<properties>
				<!-- Esta poperty se puede sobreescribir con un parámetro -D cuando makensis no forma parte del path del equipo -->
				<nsis.path></nsis.path>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>1.4.1</version>
						<executions>
							<execution>
								<id>enforce-property</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<fail>true</fail>
									<rules>																												
										<requireProperty>
											<property>jre.path</property>
											<message>Es obligatorio especificar la propiedad 'jre.path' que apunta al directorio JRE que se va a incrustar en el instalador</message>
										</requireProperty>
									</rules>									
								</configuration>
							</execution>
						</executions>
					</plugin>
				      
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>Crear_NSIS_installer</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target description="Genera el instalador con NSIS">
										<condition property="nsisOptionPrefix" value="/">
											<os family="windows"/>
										</condition>
										<condition property="nsisOptionPrefix" value="-">
											<os family="unix"/>
										</condition>
										<echo message="Prepararando estructura de directorios..." />
										<delete dir="${project.basedir}/target/nsis" />
										<mkdir dir="${project.basedir}/target/nsis" />
										<mkdir dir="${project.basedir}/target/nsis/resources" />
	
										<echo message="Moviendo recursos al target..." />
										<copy file="${project.basedir}/src/dev/resources/Async-uploader.ico" todir="${project.basedir}/target/nsis/resources/" />
										<copy file="${project.basedir}/src/dev/AsyncUploaderConfig.nsi"	todir="${project.basedir}/target/nsis" />
										<copy todir="${project.basedir}/target/nsis/resources/bin/bundle_jre">
											<fileset dir="${jre.path}" />
										</copy>
										<copy file="${project.basedir}/target/${project.build.finalName}.exe"	todir="${project.basedir}/target/nsis/" />
	
										<echo message="Inicialización completa" />
	
	
										<echo message="Lanzando NSIS" />
										<exec dir="${project.basedir}/target/nsis" executable="${nsis.path}makensis" failonerror="true">
											<arg line="${nsisOptionPrefix}X&quot;!define PRODUCT_VERSION ${project.version}&quot; AsyncUploaderConfig.nsi" />
										</exec>
										<echo message="Instalador NSIS creado con éxito!!!!!!" />
									</target>
								</configuration>	
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
	</profiles>
	
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>					
					<include>**/conf.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>				
					<exclude>**/conf.properties</exclude>
				</excludes>
			</resource>
		</resources>
		
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<target>${java.version}</target>
					<source>${java.version}</source>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<id>Generate-clases-xsd</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>xjc</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputDirectory>${basedir}/target/xjc/generated</outputDirectory>
					<sources>
						<source>${basedir}/src/main/resources/META-INF/xsd/consultaInfoFTP/consultaInfoFtp.xsd</source>
					</sources>
					<xjbSources>
						<xjbSource>${basedir}/src/main/resources/META-INF/xsd/consultaInfoFTP/bindings.xjb</xjbSource>
					</xjbSources>
					<target>2.1</target>
					<generateEpisode>false</generateEpisode>
					<encoding>${project.build.sourceEncoding}</encoding>
					<!-- <verbose>true</verbose> -->
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
                <version>1.10</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals><goal>add-source</goal></goals>
						<configuration>
							<sources>
								<source>${basedir}/target/xjc/generated</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4.2</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<createDependencyReducedPom>false</createDependencyReducedPom>
					<shadedArtifactAttached>true</shadedArtifactAttached>
					<transformers>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
							<resource>META-INF/spring.factories</resource>
						</transformer>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
							<resource>META-INF/spring.handlers</resource>
						</transformer>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
							<resource>META-INF/spring.schemas</resource>
						</transformer>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
							<resource>META-INF/spring.tooling</resource>
						</transformer>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<manifestEntries>
								<Main-Class>es.sigem.dipcoruna.desktop.asyncUploader.Main</Main-Class>
								<Application-Name>SIGEM Async Uploader</Application-Name>
								<Built-By>Diputacion Coruna</Built-By>
							</manifestEntries>
						</transformer>
					</transformers>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.akathist.maven.plugins.launch4j</groupId>
				<artifactId>launch4j-maven-plugin</artifactId>
				<version>1.7.8</version>
				<executions>
					<execution>
						<id>l4j-clui</id>
						<phase>package</phase>
						<goals>
							<goal>launch4j</goal>
						</goals>
						<configuration>
							<headerType>gui</headerType>
							<outfile>target/${project.build.finalName}.exe</outfile>
							<jar>target/${project.build.finalName}-shaded.jar</jar>
							<chdir>.</chdir>
							<priority>normal</priority>
							<downloadUrl>http://java.com/download</downloadUrl>
							<jre>
								<path>bin/bundle_jre</path>
								<bundledJre64Bit>false</bundledJre64Bit>
								<bundledJreAsFallback>false</bundledJreAsFallback>
								<minVersion></minVersion>
								<maxVersion></maxVersion>
								<jdkPreference>preferJre</jdkPreference>
								<runtimeBits>64/32</runtimeBits>
							</jre>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>es.sigem.dipcoruna.addons</groupId>
			<artifactId>addons-framework</artifactId>
			<version>${addons-framework.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>it.sauronsoftware</groupId>
		    <artifactId>ftp4j</artifactId>
		    <version>${ftp4j.version}</version>
		</dependency>

		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>${gson.version}</version>
		</dependency>
	</dependencies>

</project>