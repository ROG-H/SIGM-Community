//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.04.12 at 12:22:50 PM GMT 
//
package eu.stork.peps.complex.attributes.crue.academic.xsd.language.diplomasupplement;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for LanguageType.
 *
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * <p>
 * <
 * pre>
 * &lt;simpleType name="LanguageType"> &lt;restriction
 * base="{http://www.w3.org/2001/XMLSchema}string"> &lt;enumeration value="ab"/>
 * &lt;enumeration value="af"/> &lt;enumeration value="an"/> &lt;enumeration
 * value="ar"/> &lt;enumeration value="as"/> &lt;enumeration value="az"/>
 * &lt;enumeration value="be"/> &lt;enumeration value="bg"/> &lt;enumeration
 * value="bn"/> &lt;enumeration value="bo"/> &lt;enumeration value="br"/>
 * &lt;enumeration value="bs"/> &lt;enumeration value="ca"/> &lt;enumeration
 * value="ce"/> &lt;enumeration value="co"/> &lt;enumeration value="cs"/>
 * &lt;enumeration value="cy"/> &lt;enumeration value="da"/> &lt;enumeration
 * value="de"/> &lt;enumeration value="el"/> &lt;enumeration value="en"/>
 * &lt;enumeration value="es"/> &lt;enumeration value="et"/> &lt;enumeration
 * value="eu"/> &lt;enumeration value="fa"/> &lt;enumeration value="fi"/>
 * &lt;enumeration value="fj"/> &lt;enumeration value="fo"/> &lt;enumeration
 * value="fr"/> &lt;enumeration value="fy"/> &lt;enumeration value="ga"/>
 * &lt;enumeration value="gd"/> &lt;enumeration value="gl"/> &lt;enumeration
 * value="gv"/> &lt;enumeration value="grc"/> &lt;enumeration value="gsw"/>
 * &lt;enumeration value="he"/> &lt;enumeration value="hi"/> &lt;enumeration
 * value="hr"/> &lt;enumeration value="ht"/> &lt;enumeration value="hu"/>
 * &lt;enumeration value="hy"/> &lt;enumeration value="id"/> &lt;enumeration
 * value="is"/> &lt;enumeration value="it"/> &lt;enumeration value="ja"/>
 * &lt;enumeration value="jv"/> &lt;enumeration value="ka"/> &lt;enumeration
 * value="kg"/> &lt;enumeration value="ko"/> &lt;enumeration value="ku"/>
 * &lt;enumeration value="kw"/> &lt;enumeration value="ky"/> &lt;enumeration
 * value="lb"/> &lt;enumeration value="li"/> &lt;enumeration value="ln"/>
 * &lt;enumeration value="lt"/> &lt;enumeration value="lv"/> &lt;enumeration
 * value="mg"/> &lt;enumeration value="mk"/> &lt;enumeration value="mn"/>
 * &lt;enumeration value="mo"/> &lt;enumeration value="ms"/> &lt;enumeration
 * value="mt"/> &lt;enumeration value="my"/> &lt;enumeration value="nb"/>
 * &lt;enumeration value="ne"/> &lt;enumeration value="nl"/> &lt;enumeration
 * value="nn"/> &lt;enumeration value="no"/> &lt;enumeration value="pl"/>
 * &lt;enumeration value="pt"/> &lt;enumeration value="rm"/> &lt;enumeration
 * value="ro"/> &lt;enumeration value="ru"/> &lt;enumeration value="sc"/>
 * &lt;enumeration value="se"/> &lt;enumeration value="sk"/> &lt;enumeration
 * value="sl"/> &lt;enumeration value="so"/> &lt;enumeration value="sq"/>
 * &lt;enumeration value="sr"/> &lt;enumeration value="sv"/> &lt;enumeration
 * value="sw"/> &lt;enumeration value="tk"/> &lt;enumeration value="tr"/>
 * &lt;enumeration value="ty"/> &lt;enumeration value="uk"/> &lt;enumeration
 * value="ur"/> &lt;enumeration value="uz"/> &lt;enumeration value="vi"/>
 * &lt;enumeration value="yi"/> &lt;enumeration value="zh"/> &lt;enumeration
 * value="cu"/> &lt;enumeration value="eo"/> &lt;enumeration value="la"/>
 * &lt;enumeration value="oc"/> &lt;enumeration value="vo"/> &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "LanguageType")
@XmlEnum
public enum LanguageType {

    /**
     * Abkhazian
     *
     */
    @XmlEnumValue("ab")
    AB("ab"),
    /**
     * Afrikaans
     *
     */
    @XmlEnumValue("af")
    AF("af"),
    /**
     * Aragonese
     *
     */
    @XmlEnumValue("an")
    AN("an"),
    /**
     * Arabic
     *
     */
    @XmlEnumValue("ar")
    AR("ar"),
    /**
     * Assamese
     *
     */
    @XmlEnumValue("as")
    AS("as"),
    /**
     * Azerbaijani
     *
     */
    @XmlEnumValue("az")
    AZ("az"),
    /**
     * Belarusian
     *
     */
    @XmlEnumValue("be")
    BE("be"),
    /**
     * Bulgarian
     *
     */
    @XmlEnumValue("bg")
    BG("bg"),
    /**
     * Bengali
     *
     */
    @XmlEnumValue("bn")
    BN("bn"),
    /**
     * Tibetan
     *
     */
    @XmlEnumValue("bo")
    BO("bo"),
    /**
     * Breton
     *
     */
    @XmlEnumValue("br")
    BR("br"),
    /**
     * Bosnian
     *
     */
    @XmlEnumValue("bs")
    BS("bs"),
    /**
     * Catalan / Valencian
     *
     */
    @XmlEnumValue("ca")
    CA("ca"),
    /**
     * Chechen
     *
     */
    @XmlEnumValue("ce")
    CE("ce"),
    /**
     * Corsican
     *
     */
    @XmlEnumValue("co")
    CO("co"),
    /**
     * Czech
     *
     */
    @XmlEnumValue("cs")
    CS("cs"),
    /**
     * Welsh
     *
     */
    @XmlEnumValue("cy")
    CY("cy"),
    /**
     * Danish
     *
     */
    @XmlEnumValue("da")
    DA("da"),
    /**
     * German
     *
     */
    @XmlEnumValue("de")
    DE("de"),
    /**
     * Greek
     *
     */
    @XmlEnumValue("el")
    EL("el"),
    /**
     * English
     *
     */
    @XmlEnumValue("en")
    EN("en"),
    /**
     * Spanish / Castilian
     *
     */
    @XmlEnumValue("es")
    ES("es"),
    /**
     * Estonian
     *
     */
    @XmlEnumValue("et")
    ET("et"),
    /**
     * Basque
     *
     */
    @XmlEnumValue("eu")
    EU("eu"),
    /**
     * Persian
     *
     */
    @XmlEnumValue("fa")
    FA("fa"),
    /**
     * Finnish
     *
     */
    @XmlEnumValue("fi")
    FI("fi"),
    /**
     * Fijian
     *
     */
    @XmlEnumValue("fj")
    FJ("fj"),
    /**
     * Faroese
     *
     */
    @XmlEnumValue("fo")
    FO("fo"),
    /**
     * French
     *
     */
    @XmlEnumValue("fr")
    FR("fr"),
    /**
     * Western Frisian
     *
     */
    @XmlEnumValue("fy")
    FY("fy"),
    /**
     * Irish
     *
     */
    @XmlEnumValue("ga")
    GA("ga"),
    /**
     * Gaelic / Scottish Gaelic
     *
     */
    @XmlEnumValue("gd")
    GD("gd"),
    /**
     * Galician
     *
     */
    @XmlEnumValue("gl")
    GL("gl"),
    /**
     * Manx
     *
     */
    @XmlEnumValue("gv")
    GV("gv"),
    /**
     * Ancient Greek
     *
     */
    @XmlEnumValue("grc")
    GRC("grc"),
    /**
     * Alemanic; Swiss German
     *
     */
    @XmlEnumValue("gsw")
    GSW("gsw"),
    /**
     * Hebrew
     *
     */
    @XmlEnumValue("he")
    HE("he"),
    /**
     * Hindi
     *
     */
    @XmlEnumValue("hi")
    HI("hi"),
    /**
     * Croatian
     *
     */
    @XmlEnumValue("hr")
    HR("hr"),
    /**
     * Haitian; Haitian Creole
     *
     */
    @XmlEnumValue("ht")
    HT("ht"),
    /**
     * Hungarian
     *
     */
    @XmlEnumValue("hu")
    HU("hu"),
    /**
     * Armenian
     *
     */
    @XmlEnumValue("hy")
    HY("hy"),
    /**
     * Indonesian
     *
     */
    @XmlEnumValue("id")
    ID("id"),
    /**
     * Icelandic
     *
     */
    @XmlEnumValue("is")
    IS("is"),
    /**
     * Italian
     *
     */
    @XmlEnumValue("it")
    IT("it"),
    /**
     * Japanese
     *
     */
    @XmlEnumValue("ja")
    JA("ja"),
    /**
     * Javanese
     *
     */
    @XmlEnumValue("jv")
    JV("jv"),
    /**
     * Georgian
     *
     */
    @XmlEnumValue("ka")
    KA("ka"),
    /**
     * Kongo
     *
     */
    @XmlEnumValue("kg")
    KG("kg"),
    /**
     * Korean
     *
     */
    @XmlEnumValue("ko")
    KO("ko"),
    /**
     * Kurdish
     *
     */
    @XmlEnumValue("ku")
    KU("ku"),
    /**
     * Cornish
     *
     */
    @XmlEnumValue("kw")
    KW("kw"),
    /**
     * Kirghiz
     *
     */
    @XmlEnumValue("ky")
    KY("ky"),
    /**
     * Luxembourgish; Letzeburgesch
     *
     */
    @XmlEnumValue("lb")
    LB("lb"),
    /**
     * Limburgan; Limburger; Limburgish
     *
     */
    @XmlEnumValue("li")
    LI("li"),
    /**
     * Lingala
     *
     */
    @XmlEnumValue("ln")
    LN("ln"),
    /**
     * Lithuanian
     *
     */
    @XmlEnumValue("lt")
    LT("lt"),
    /**
     * Latvian
     *
     */
    @XmlEnumValue("lv")
    LV("lv"),
    /**
     * Malagasy
     *
     */
    @XmlEnumValue("mg")
    MG("mg"),
    /**
     * Macedonian
     *
     */
    @XmlEnumValue("mk")
    MK("mk"),
    /**
     * Mongolian
     *
     */
    @XmlEnumValue("mn")
    MN("mn"),
    /**
     * Moldavian
     *
     */
    @XmlEnumValue("mo")
    MO("mo"),
    /**
     * Malay
     *
     */
    @XmlEnumValue("ms")
    MS("ms"),
    /**
     * Maltese
     *
     */
    @XmlEnumValue("mt")
    MT("mt"),
    /**
     * Burmese
     *
     */
    @XmlEnumValue("my")
    MY("my"),
    /**
     * Norwegian (Bokmï¿½l)
     *
     */
    @XmlEnumValue("nb")
    NB("nb"),
    /**
     * Nepali
     *
     */
    @XmlEnumValue("ne")
    NE("ne"),
    /**
     * Dutch
     *
     */
    @XmlEnumValue("nl")
    NL("nl"),
    /**
     * Norwegian (Nynorsk)
     *
     */
    @XmlEnumValue("nn")
    NN("nn"),
    /**
     * Norwegian
     *
     */
    @XmlEnumValue("no")
    NO("no"),
    /**
     * Polish
     *
     */
    @XmlEnumValue("pl")
    PL("pl"),
    /**
     * Portuguese
     *
     */
    @XmlEnumValue("pt")
    PT("pt"),
    /**
     * Raeto-Romance
     *
     */
    @XmlEnumValue("rm")
    RM("rm"),
    /**
     * Romanian
     *
     */
    @XmlEnumValue("ro")
    RO("ro"),
    /**
     * Russian
     *
     */
    @XmlEnumValue("ru")
    RU("ru"),
    /**
     * Sardinian
     *
     */
    @XmlEnumValue("sc")
    SC("sc"),
    /**
     * Northern Sami
     *
     */
    @XmlEnumValue("se")
    SE("se"),
    /**
     * Slovak
     *
     */
    @XmlEnumValue("sk")
    SK("sk"),
    /**
     * Slovenian
     *
     */
    @XmlEnumValue("sl")
    SL("sl"),
    /**
     * Somali
     *
     */
    @XmlEnumValue("so")
    SO("so"),
    /**
     * Albanian
     *
     */
    @XmlEnumValue("sq")
    SQ("sq"),
    /**
     * Serbian
     *
     */
    @XmlEnumValue("sr")
    SR("sr"),
    /**
     * Swedish
     *
     */
    @XmlEnumValue("sv")
    SV("sv"),
    /**
     * Swahili
     *
     */
    @XmlEnumValue("sw")
    SW("sw"),
    /**
     * Turkmen
     *
     */
    @XmlEnumValue("tk")
    TK("tk"),
    /**
     * Turkish
     *
     */
    @XmlEnumValue("tr")
    TR("tr"),
    /**
     * Tahitian
     *
     */
    @XmlEnumValue("ty")
    TY("ty"),
    /**
     * Ukrainian
     *
     */
    @XmlEnumValue("uk")
    UK("uk"),
    /**
     * Urdu
     *
     */
    @XmlEnumValue("ur")
    UR("ur"),
    /**
     * Uzbek
     *
     */
    @XmlEnumValue("uz")
    UZ("uz"),
    /**
     * Vietnamese
     *
     */
    @XmlEnumValue("vi")
    VI("vi"),
    /**
     * Yiddish
     *
     */
    @XmlEnumValue("yi")
    YI("yi"),
    /**
     * Chinese
     *
     */
    @XmlEnumValue("zh")
    ZH("zh"),
    /**
     * Church Slavic
     *
     */
    @XmlEnumValue("cu")
    CU("cu"),
    /**
     * Esperanto
     *
     */
    @XmlEnumValue("eo")
    EO("eo"),
    /**
     * Latin
     *
     */
    @XmlEnumValue("la")
    LA("la"),
    /**
     * Occitan (post 1500); Provenal
     *
     */
    @XmlEnumValue("oc")
    OC("oc"),
    /**
     * VVolapï¿½k
     *
     */
    @XmlEnumValue("vo")
    VO("vo");
    private final String value;

    LanguageType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LanguageType fromValue(String v) {
        for (LanguageType c : LanguageType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
