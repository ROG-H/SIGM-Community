//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.09 at 10:11:43 AM GMT 
//
package eu.stork.peps.complex.attributes.eu.stork.names.tc.stork._1_0.assertion;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java
 * element interface generated in the eu.stork.names.tc.stork._1_0.assertion
 * package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the
 * Java representation for XML content. The Java representation of XML content
 * can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory
 * methods for each of these are provided in this class.
 *
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Habilitation_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "habilitation");
    private final static QName _SpApplication_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "spApplication");
    private final static QName _Specialisation_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "specialisation");
    private final static QName _AQAA_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "AQAA");
    private final static QName _QualityAuthenticationAssuranceLevel_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "QualityAuthenticationAssuranceLevel");
    private final static QName _IsAcademicStaff_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "isAcademicStaff");
    private final static QName _MandateContent_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "mandateContent");
    private final static QName _CanonicalRegisteredAddress_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "canonicalRegisteredAddress");
    private final static QName _SpCountry_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "spCountry");
    private final static QName _IsAdminStaff_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "isAdminStaff");
    private final static QName _AttributeValue_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "AttributeValue");
    private final static QName _CountryCodeAddress_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "countryCodeAddress");
    private final static QName _HasAccountInBank_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "hasAccountInBank");
    private final static QName _CurrentStudiesSupplement_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "currentStudiesSupplement");
    private final static QName _RequestedAttribute_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "RequestedAttribute");
    private final static QName _Mandate_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "mandate");
    private final static QName _SpSector_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "spSector");
    private final static QName _HasDegree_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "hasDegree");
    private final static QName _DiplomaSupplement_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "diplomaSupplement");
    private final static QName _IsStudent_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "isStudent");
    private final static QName _HCPType_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "HCPType");
    private final static QName _RepresentationPerson_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "representationPerson");
    private final static QName _CanonicalResidenceAddress_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "canonicalResidenceAddress");
    private final static QName _AcTitle_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "acTitle");
    private final static QName _IsTeacherOf_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "isTeacherOf");
    private final static QName _IsCourseCoordinator_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "isCourseCoordinator");
    private final static QName _CitizenCountryCode_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "CitizenCountryCode");
    private final static QName _Study_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "study");
    private final static QName _IsHealthCareProfessional_QNAME = new QName("urn:eu:stork:names:tc:STORK:1.0:assertion", "isHealthCareProfessional");

    /**
     * Create a new ObjectFactory that can be used to create new instances of
     * schema derived classes for package:
     * eu.stork.names.tc.stork._1_0.assertion
     *
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link CurrentStudiesType }
     *
     */
    public CurrentStudiesType createCurrentStudiesType() {
        return new CurrentStudiesType();
    }

    /**
     * Create an instance of {@link RequestedAttributeType }
     *
     */
    public RequestedAttributeType createRequestedAttributeType() {
        return new RequestedAttributeType();
    }

    /**
     * Create an instance of {@link MandateType }
     *
     */
    public MandateType createMandateType() {
        return new MandateType();
    }

    /**
     * Create an instance of {@link HasAccountInBankType }
     *
     */
    public HasAccountInBankType createHasAccountInBankType() {
        return new HasAccountInBankType();
    }

    /**
     * Create an instance of {@link IsHealthCareProfessionalType }
     *
     */
    public IsHealthCareProfessionalType createIsHealthCareProfessionalType() {
        return new IsHealthCareProfessionalType();
    }

    /**
     * Create an instance of {@link IsAdminStaffType }
     *
     */
    public IsAdminStaffType createIsAdminStaffType() {
        return new IsAdminStaffType();
    }

    /**
     * Create an instance of {@link CanonicalAddressType }
     *
     */
    public CanonicalAddressType createCanonicalAddressType() {
        return new CanonicalAddressType();
    }

    /**
     * Create an instance of {@link MandateContentType }
     *
     */
    public MandateContentType createMandateContentType() {
        return new MandateContentType();
    }

    /**
     * Create an instance of {@link IsCourseCoordinatorType }
     *
     */
    public IsCourseCoordinatorType createIsCourseCoordinatorType() {
        return new IsCourseCoordinatorType();
    }

    /**
     * Create an instance of {@link IsAcademicStaffType }
     *
     */
    public IsAcademicStaffType createIsAcademicStaffType() {
        return new IsAcademicStaffType();
    }

    /**
     * Create an instance of {@link IsTeacherOfType }
     *
     */
    public IsTeacherOfType createIsTeacherOfType() {
        return new IsTeacherOfType();
    }

    /**
     * Create an instance of {@link AcTitleType }
     *
     */
    public AcTitleType createAcTitleType() {
        return new AcTitleType();
    }

    /**
     * Create an instance of {@link RepresentationPersonType }
     *
     */
    public RepresentationPersonType createRepresentationPersonType() {
        return new RepresentationPersonType();
    }

    /**
     * Create an instance of {@link IsStudentType }
     *
     */
    public IsStudentType createIsStudentType() {
        return new IsStudentType();
    }

    /**
     * Create an instance of {@link HasDegreeType }
     *
     */
    public HasDegreeType createHasDegreeType() {
        return new HasDegreeType();
    }

    /**
     * Create an instance of {@link DiplomaSupplementType }
     *
     */
    public DiplomaSupplementType createDiplomaSupplementType() {
        return new DiplomaSupplementType();
    }

    /**
     * Create an instance of {@link HabilitationType }
     *
     */
    public HabilitationType createHabilitationType() {
        return new HabilitationType();
    }

    /**
     * Create an instance of {@link TimeRestrictionType }
     *
     */
    public TimeRestrictionType createTimeRestrictionType() {
        return new TimeRestrictionType();
    }

    /**
     * Create an instance of {@link Habilitation }
     *
     */
    public Habilitation createHabilitation() {
        return new Habilitation();
    }

    /**
     * Create an instance of {@link TransactionLimitRestrictionType }
     *
     */
    public TransactionLimitRestrictionType createTransactionLimitRestrictionType() {
        return new TransactionLimitRestrictionType();
    }

    /**
     * Create an instance of {@link OriginalMandateType }
     *
     */
    /*public OriginalMandateType createOriginalMandateType() {
     return new OriginalMandateType();
     }*/
    /**
     * Create an instance of {@link IsHCPType }
     *
     */
    public IsHCPType createIsHCPType() {
        return new IsHCPType();
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link HabilitationType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "habilitation")
    public JAXBElement<HabilitationType> createHabilitation(HabilitationType value) {
        return new JAXBElement<HabilitationType>(_Habilitation_QNAME, HabilitationType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "spApplication")
    public JAXBElement<String> createSpApplication(String value) {
        return new JAXBElement<String>(_SpApplication_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "specialisation")
    public JAXBElement<String> createSpecialisation(String value) {
        return new JAXBElement<String>(_Specialisation_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "AQAA")
    public JAXBElement<Integer> createAQAA(Integer value) {
        return new JAXBElement<Integer>(_AQAA_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "QualityAuthenticationAssuranceLevel")
    public JAXBElement<Integer> createQualityAuthenticationAssuranceLevel(Integer value) {
        return new JAXBElement<Integer>(_QualityAuthenticationAssuranceLevel_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link IsAcademicStaffType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "isAcademicStaff")
    public JAXBElement<IsAcademicStaffType> createIsAcademicStaff(IsAcademicStaffType value) {
        return new JAXBElement<IsAcademicStaffType>(_IsAcademicStaff_QNAME, IsAcademicStaffType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link MandateContentType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "mandateContent")
    public JAXBElement<MandateContentType> createMandateContent(MandateContentType value) {
        return new JAXBElement<MandateContentType>(_MandateContent_QNAME, MandateContentType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link CanonicalAddressType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "canonicalRegisteredAddress")
    public JAXBElement<CanonicalAddressType> createCanonicalRegisteredAddress(CanonicalAddressType value) {
        return new JAXBElement<CanonicalAddressType>(_CanonicalRegisteredAddress_QNAME, CanonicalAddressType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "spCountry")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createSpCountry(String value) {
        return new JAXBElement<String>(_SpCountry_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link IsAdminStaffType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "isAdminStaff")
    public JAXBElement<IsAdminStaffType> createIsAdminStaff(IsAdminStaffType value) {
        return new JAXBElement<IsAdminStaffType>(_IsAdminStaff_QNAME, IsAdminStaffType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link Object }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "AttributeValue")
    public JAXBElement<Object> createAttributeValue(Object value) {
        return new JAXBElement<Object>(_AttributeValue_QNAME, Object.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "countryCodeAddress")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createCountryCodeAddress(String value) {
        return new JAXBElement<String>(_CountryCodeAddress_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link HasAccountInBankType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "hasAccountInBank")
    public JAXBElement<HasAccountInBankType> createHasAccountInBank(HasAccountInBankType value) {
        return new JAXBElement<HasAccountInBankType>(_HasAccountInBank_QNAME, HasAccountInBankType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link CurrentStudiesType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "currentStudiesSupplement")
    public JAXBElement<CurrentStudiesType> createCurrentStudiesSupplement(CurrentStudiesType value) {
        return new JAXBElement<CurrentStudiesType>(_CurrentStudiesSupplement_QNAME, CurrentStudiesType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link RequestedAttributeType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "RequestedAttribute")
    public JAXBElement<RequestedAttributeType> createRequestedAttribute(RequestedAttributeType value) {
        return new JAXBElement<RequestedAttributeType>(_RequestedAttribute_QNAME, RequestedAttributeType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link MandateType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "mandate")
    public JAXBElement<MandateType> createMandate(MandateType value) {
        return new JAXBElement<MandateType>(_Mandate_QNAME, MandateType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "spSector")
    public JAXBElement<String> createSpSector(String value) {
        return new JAXBElement<String>(_SpSector_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link HasDegreeType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "hasDegree")
    public JAXBElement<HasDegreeType> createHasDegree(HasDegreeType value) {
        return new JAXBElement<HasDegreeType>(_HasDegree_QNAME, HasDegreeType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link DiplomaSupplementType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "diplomaSupplement")
    public JAXBElement<DiplomaSupplementType> createDiplomaSupplement(DiplomaSupplementType value) {
        return new JAXBElement<DiplomaSupplementType>(_DiplomaSupplement_QNAME, DiplomaSupplementType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link IsStudentType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "isStudent")
    public JAXBElement<IsStudentType> createIsStudent(IsStudentType value) {
        return new JAXBElement<IsStudentType>(_IsStudent_QNAME, IsStudentType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "HCPType")
    public JAXBElement<String> createHCPType(String value) {
        return new JAXBElement<String>(_HCPType_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link RepresentationPersonType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "representationPerson")
    public JAXBElement<RepresentationPersonType> createRepresentationPerson(RepresentationPersonType value) {
        return new JAXBElement<RepresentationPersonType>(_RepresentationPerson_QNAME, RepresentationPersonType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link CanonicalAddressType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "canonicalResidenceAddress")
    public JAXBElement<CanonicalAddressType> createCanonicalResidenceAddress(CanonicalAddressType value) {
        return new JAXBElement<CanonicalAddressType>(_CanonicalResidenceAddress_QNAME, CanonicalAddressType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link AcTitleType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "acTitle")
    public JAXBElement<AcTitleType> createAcTitle(AcTitleType value) {
        return new JAXBElement<AcTitleType>(_AcTitle_QNAME, AcTitleType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link IsTeacherOfType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "isTeacherOf")
    public JAXBElement<IsTeacherOfType> createIsTeacherOf(IsTeacherOfType value) {
        return new JAXBElement<IsTeacherOfType>(_IsTeacherOf_QNAME, IsTeacherOfType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link IsCourseCoordinatorType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "isCourseCoordinator")
    public JAXBElement<IsCourseCoordinatorType> createIsCourseCoordinator(IsCourseCoordinatorType value) {
        return new JAXBElement<IsCourseCoordinatorType>(_IsCourseCoordinator_QNAME, IsCourseCoordinatorType.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "CitizenCountryCode")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createCitizenCountryCode(String value) {
        return new JAXBElement<String>(_CitizenCountryCode_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "study")
    public JAXBElement<String> createStudy(String value) {
        return new JAXBElement<String>(_Study_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of
     * {@link JAXBElement }{@code <}{@link IsHealthCareProfessionalType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "urn:eu:stork:names:tc:STORK:1.0:assertion", name = "isHealthCareProfessional")
    public JAXBElement<IsHealthCareProfessionalType> createIsHealthCareProfessional(IsHealthCareProfessionalType value) {
        return new JAXBElement<IsHealthCareProfessionalType>(_IsHealthCareProfessional_QNAME, IsHealthCareProfessionalType.class, null, value);
    }

}
